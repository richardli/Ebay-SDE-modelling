
R version 2.15.2 (2012-10-26) -- "Trick or Treat"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin9.8.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[R.app GUI 1.53 (6335) x86_64-apple-darwin9.8.0]

[Workspace restored from /Users/zehangli/.RData]
[History restored from /Users/zehangli/.Rapp.history]

> install.packages("~/Dropbox/VA/Richard/InterVA4_1.0.tar.gz", type="source")
inferring 'repos = NULL' from the file name
* installing *source* package ‘InterVA4’ ...
** R
** data
** preparing package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded
*** arch - i386
*** arch - x86_64
* DONE (InterVA4)
> library(InterVA4)

Attaching package: ‘InterVA4’

The following object(s) are masked _by_ ‘.GlobalEnv’:

    InterVA, Test.consistency

> remove(list = ls())
> install.packages("~/Dropbox/VA/Richard/InterVA4_1.0.tar.gz", type="source")
inferring 'repos = NULL' from the file name
* installing *source* package ‘InterVA4’ ...
** R
** data
** preparing package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded
*** arch - i386
*** arch - x86_64
* DONE (InterVA4)
install.packages("~/Dropbox/VA/Richard/InterVA4_1.0.tar.gz", type="source")
> library(InterVA4)
> ?InterVA.plot
starting httpd help server ... done
> data(SampleInput)
> sample.output<-InterVA(SampleInput, HIV="h",Malaria="v",directory = "VA test", filename = "VA_result",output="extended",append=FALSE)
> 
> ## Individual level summary using pie chart
> InterVA.plot(sample.output$VA[[1]],type="pie",min.prob=0.01,main = "1st sample VA analysis using pie chart", clockwise = FALSE, radius = 0.6, cex = 0.6, cex.main = 0.8)
> 
> 
> ## Individual level summary using bar chart
> InterVA.plot(sample.output$VA[[2]],type="bar",min.prob=0.01,main = "2nd sample VA analysis using bar chart", cex.main = 0.8)
> 
> data(SampleInput)
Warning messages:
1: Display list redraw incomplete 
2: Display list redraw incomplete 
3: Display list redraw incomplete 
> sample.output<-InterVA(SampleInput, HIV="h",Malaria="v",directory = "VA test", filename = "VA_result",output="extended",append=FALSE)
> 
> ## Individual level summary using pie chart
> InterVA.plot(sample.output$VA[[2]],type="pie",min.prob=0.01,main = "a sample VA analysis using pie chart", clockwise = FALSE, radius = 0.6, cex = 0.6, cex.main = 0.8)
> ## Individual level summary using bar chart
> InterVA.plot(sample.output$VA[[2]],type="bar",min.prob=0.01,main = "a sample VA analysis using bar chart", cex.main = 0.8)
> InterVA.plot(sample.output$VA[[2]],type="bar",min.prob=0.001,main = "a sample VA analysis using bar chart", cex.main = 0.8)
Warning message:
Display list redraw incomplete 
> InterVA.plot(sample.output$VA[[3]],type="bar",min.prob=0.001,main = "a sample VA analysis using bar chart", cex.main = 0.8)
> InterVA.plot(sample.output$VA[[3]],type="bar",min.prob=0.01,main = "a sample VA analysis using bar chart", cex.main = 0.8)
> InterVA.plot(sample.output$VA[[3]],type="bar",min.prob=0.01,main = "a sample VA analysis using bar chart", cex.main = 1.2)
> InterVA.plot(sample.output$VA[[3]],type="bar",min.prob=0.01,main = "a sample VA analysis using bar chart", cex.main = 0.8)
> InterVA.plot(sample.output$VA[[3]],type="bar",min.prob=0.01,main = "A sample VA analysis using bar chart", cex.main = 1)
> ?Population.summary
> 
> 
> ## Population level summary using pie chart
> population.summary <- Population.summary(sample.output$VA,type="pie",min.prob=0.01, main = "population COD distribution using pie chart", clockwise = FALSE, radius = 0.7, cex = 0.7, cex.main = 0.8)
> 
> ## Population level summary using bar chart
> population.summary <- Population.summary(sample.output$VA,type="bar",min.prob=0.01, main = "population COD distribution using bar chart", cex.main = 1)
> 
> Population level summary using pie chart
Error: unexpected symbol in "Population level"
> population.summary <- Population.summary(sample.output$VA,type="pie",min.prob=0.01, main = "Population COD distribution using pie chart", clockwise = FALSE, radius = 0.7, cex = 0.7, cex.main = 0.8)
> 
> ## Population level summary using bar chart
> population.summary <- Population.summary(sample.output$VA,type="bar",min.prob=0.01, main = "Population COD distribution using bar chart", cex.main = 1)
> population.summary <- Population.summary(sample.output$VA,type="pie",min.prob=0.01, 
+ main = "Population COD distribution using pie chart", 
+ clockwise = FALSE, radius = 0.7, cex = 0.7, cex.main = 0.8)
> install.package("InterVA4",repo = "https://github.com/richardli/InterVA-repo/blob/master/InterVA4_1.0.tar.gz", type = "source")
Error: could not find function "install.package"
> install.packages("InterVA4",repo = "https://github.com/richardli/InterVA-repo/blob/master/InterVA4_1.0.tar.gz", type = "source")
Warning: unable to access index for repository https://github.com/richardli/InterVA-repo/blob/master/InterVA4_1.0.tar.gz/src/contrib
Warning message:
package ‘InterVA4’ is not available (for R version 2.15.2) 
> install.packages("InterVA4",repo = "https://github.com/richardli/InterVA-repo/blob/master/", type = "source")
Warning: unable to access index for repository https://github.com/richardli/InterVA-repo/blob/master/src/contrib
Warning message:
package ‘InterVA4’ is not available (for R version 2.15.2) 
> install.packages("InterVA4",repo = "https://github.com/richardli/InterVA-repo/", type = "source")
Warning: unable to access index for repository https://github.com/richardli/InterVA-repo/src/contrib
Warning message:
package ‘InterVA4’ is not available (for R version 2.15.2) 
> load("/Desktop/ebay working space")
Error in readChar(con, 5L, useBytes = TRUE) : cannot open the connection
In addition: Warning message:
In readChar(con, 5L, useBytes = TRUE) :
  cannot open compressed file '/Desktop/ebay working space', probable reason 'No such file or directory'
> setwd("~/Dropbox/Ebay_2012/SDE approach")
> require("fda")
Loading required package: fda
Loading required package: splines
Loading required package: zoo

Attaching package: ‘zoo’

The following object(s) are masked from ‘package:base’:

    as.Date, as.Date.numeric

Loading required package: Matrix
Loading required package: lattice
Loading required package: RCurl
Loading required package: bitops

Attaching package: ‘fda’

The following object(s) are masked from ‘package:graphics’:

    matplot

> library("fda")
> load("ebay_data.rda") # With elemantary functions
> N.auc <- length(EBAY)
> ##############################################################################################
> SPLINE=function(x, y, plotpoints){
+ 	knots <- c(0,1,2,3,4,5,6,6.25,6.5,6.75,6.8125,6.875,6.9375,7)
+ 	numk<-length(knots)
+ 	numplot <- length(plotpoints)
+ 	norder <- 5
+ 	nbasis <- numk + 2
+ 	lambda <- 0.1
+ 	numauct<-N.auc
+ 	wbasis <- create.bspline.basis(rangeval=c(0,7),nbasis=nbasis, norder=5)
+ 	Wfd <- list(0); length(Wfd) <- numauct
+ 	bids=rep(0,length(knots))
+ 	for(j in 1:length(knots)) bids[j]=StepCheck(x,y,knots[j])
+ 	Wfd <- Data2fd(knots,bids,basisobj=wbasis)
+ 
+ 	growfdPar <- fdPar(Wfd, 3, lambda)	
+ 	mss <-smooth.basis(knots,bids,growfdPar,wtvec=rep(1,length(knots)))
+ 	xfd <- mss$fd
+ 	splineF <- NULL
+ 	splinef <- NULL
+ 	splineF <- eval.fd(plotpoints,xfd)
+ 	splinef <- eval.fd(plotpoints,xfd,Lfd = 1)
+ 	splineff <- eval.fd(plotpoints, xfd, Lfd = 2)
+ 	return(cbind(splineF,splinef,splineff))
+ }
> Nt <- 2000
> plotpoints <- seq(0,7,len = Nt)  #nodes where the smoothed curve is evaluated
> LogPrice.smooth <-  matrix(0, N.auc, length(plotpoints))
> Velo.smooth <-  matrix(0, N.auc, length(plotpoints))
> Acc.smooth <-  matrix(0, N.auc, length(plotpoints))
> 
> for(i in 1 : N.auc){
+   temp <- SPLINE(EBAY[[i]]$Time,log(EBAY[[i]]$Price), plotpoints)
+   LogPrice.smooth[i, ] <- temp[, 1]
+   Velo.smooth[i, ] <- temp[, 2]
+   Acc.smooth[i, ] <- temp[, 3]
+  }
>  
> par(mfrow = c(2, 2))
> 
> plot(plotpoints, LogPrice.smooth[1, ], type = "l", col = "white", ylim = c(-20, 20))
> for(k in 1 : N.auc){
+ 	points(plotpoints, LogPrice.smooth[k, ], type = "l", col = k)
+ }
> plot(plotpoints, Velo.smooth[1, ], type = "l", col = "white", ylim = c(-20,10))
> for(k in 1 : N.auc){
+ 	points(plotpoints, Velo.smooth[k, ], type = "l", col = k)
+ }
> plot(plotpoints, Acc.smooth[1, ], type = "l", col = "white", ylim = c(-6,6))
> for(k in 1 : N.auc){
+ 	points(plotpoints, Acc.smooth[k, ], type = "l", col = k)
+ }
> 
> 
> Acc.M <- apply(Acc.smooth, 2, mean)
> Velo.M <- apply(Velo.smooth, 2, mean)
> plot(Velo.M, Acc.M, type = "l", xlim = c(0, 1), ylim = c(-.5, .5))
> ## Here might need to change the index if some auctions are deleted!!
> Acc.M.1 <- apply(Acc.smooth[1:93, ], 2, mean)  # Xbox
> Velo.M.1 <- apply(Velo.smooth[1:93, ], 2, mean)
> Acc.M.2 <- apply(Acc.smooth[94:190, ], 2, mean)  # HP book
> Velo.M.2 <- apply(Velo.smooth[94:190, ], 2, mean)
> points(Velo.M.1, Acc.M.1, type = "l", lty = 2, col = "red")
> points(Velo.M.2, Acc.M.2, type = "l", lty = 3, col = "blue")
> ######################################################################################
> ## Simulation
> ## Linear Trend
> par(mfrow=c(1, 2))
> Nx <- 2000
> delta <- 7/Nx
> xx <- seq(0,7,len=Nx)
> yy <- xx * 0.4 -1.6
> fbasis <- create.fourier.basis(c(0, 7), nbasis = 5)
> ftrans <- smooth.basis(xx, yy, fbasis)
> plot(xx, eval.fd(xx, ftrans$fd), type = "l")
> points(xx, yy, type = "l", lty = 2, col = "red")
> ## Weight Function
> w <- eval.fd(xx, ftrans$fd)
> ## Simulation
> Nsim <- 200
> y.sim <- matrix(0, Nsim, Nx)
> for(j in 1:Nsim){
+ 	w.noise <- w + rnorm(Nx, mean = 0, sd = 0.01)
+ 	y.sim[j, 1] <- runif(1, -5, 5)
+ 	c <- runif(1, 0, 10) 
+ 	y.sim[j, 2] <- y.sim[j, 1] + abs(rnorm(1, mean = 0, sd = 0.01))
+ 	for (i in 3 : Nx){
+ 	 	y.sim[j, i] <- (w.noise[i] * delta * y.sim[j, i-1] - 2 * y.sim[j, i-1] + y.sim[j, i-2]) / (w.noise[i] * delta -1)
+     }
+ }
> 
> plot(xx, y.sim[1, ], type = "l", ylim = c(-5, 15))
> for(i in 2 : Nsim){
+ 	points(xx, y.sim[i, ], type = "l", lty = i, col = i)
+ }
> ############################################################################################
> ## Simulation with Brownian Motion
> Nsim <- 100
> par(mfrow = c(2, 2))
> for(sigma0 in seq(0.1, 0.7, len = 4)){
+ 		y.sim <- matrix(0, Nsim, Nx)
+ 	for(j in 1:Nsim){
+ 		w.noise <- w + rnorm(Nx, mean = 0, sd = 0.01)
+ 		y.sim[j, 1] <- runif(1, -5, 5)
+ 		c <- runif(1, 0, 10) 
+ 		y.sim[j, 2] <- y.sim[j, 1] + abs(rnorm(1, mean = 0, sd = 0.01))
+ 		for (i in 3 : Nx){
+ 		 	y.sim[j, i] <- y.sim[j, i-1] + (y.sim[j, i-1] - y.sim[j, i-2]) * (1+ w.noise[i] * delta + sigma0 * rnorm(1, 0, sqrt(delta)) ) #* exp(w.noise[i] * delta - sigma0^2/2 * delta + sigma0 * rnorm(1, 0, sqrt(delta))) 
+ 	    }
+ 	}
+ 	
+ 	plot(xx, y.sim[1, ], type = "l", ylim = c(-5, 15), main = paste("sigma0 =", sigma0) )
+ 	for(i in 2 : Nsim){
+ 		points(xx, y.sim[i, ], type = "l", lty = i, col = i)
+ 	}
+ 
+ }
> Nsim <- 100
> wjump = 1
> 
> # jump parameters
> lambda = 10
> mean.jump = 1
> sd.jump = 1
> 
> par(mfrow = c(2, 2))
> 
> for(sigma0 in seq(0.5, 0.5, len = 1)){
+ 		y.sim <- matrix(0, Nsim, Nx)
+ 	for(j in 1:Nsim){
+ 		w.noise <- w + rnorm(Nx, mean = 0, sd = 0.01)
+ 		y.sim[j, 1] <- runif(1, -5, 5)
+ 		c <- runif(1, 0, 10) 
+ 		y.sim[j, 2] <- y.sim[j, 1] + abs(rnorm(1, mean = 0, sd = 0.01))
+ 		for (i in 3 : Nx){
+ 		 	y.sim[j, i] <- y.sim[j, i-1] + (y.sim[j, i-1] - y.sim[j, i-2]) * (1+ w.noise[i] * delta + sigma0 * rnorm(1, 0, sqrt(delta)) + wjump * ifelse(runif(1) <= lambda * delta, 1, 0) * rnorm(1, mean.jump, sd.jump)) 
+ 		 	
+ 		 	
+ 		 	#* exp(w.noise[i] * delta - sigma0^2/2 * delta + sigma0 * rnorm(1, 0, sqrt(delta))) 
+ 	    }
+ 	}
+ 	
+ 	plot(xx, y.sim[1, ], type = "l", ylim = c(-5, 15), main = paste("sigma0 =", sigma0) )
+ 	for(i in 2 : Nsim){
+ 		points(xx, y.sim[i, ], type = "l", lty = i, col = i)
+ 	}
+ 
+ }
> Nsim <- 100
> wjump = 1
> 
> # jump parameters
> lambda = 1
> mean.jump = 1
> sd.jump = 1
> 
> par(mfrow = c(1, 1))
> 
> for(sigma0 in seq(0.5, 0.5, len = 1)){
+ 		y.sim <- matrix(0, Nsim, Nx)
+ 	for(j in 1:Nsim){
+ 		w.noise <- w + rnorm(Nx, mean = 0, sd = 0.01)
+ 		y.sim[j, 1] <- runif(1, -5, 5)
+ 		c <- runif(1, 0, 10) 
+ 		y.sim[j, 2] <- y.sim[j, 1] + abs(rnorm(1, mean = 0, sd = 0.01))
+ 		for (i in 3 : Nx){
+ 		 	y.sim[j, i] <- y.sim[j, i-1] + (y.sim[j, i-1] - y.sim[j, i-2]) * (1+ w.noise[i] * delta + sigma0 * rnorm(1, 0, sqrt(delta)) + wjump * ifelse(runif(1) <= lambda * delta, 1, 0) * rnorm(1, mean.jump, sd.jump)) 
+ 		 	
+ 		 	
+ 		 	#* exp(w.noise[i] * delta - sigma0^2/2 * delta + sigma0 * rnorm(1, 0, sqrt(delta))) 
+ 	    }
+ 	}
+ 	
+ 	plot(xx, y.sim[1, ], type = "l", ylim = c(-5, 15), main = paste("sigma0 =", sigma0) )
+ 	for(i in 2 : Nsim){
+ 		points(xx, y.sim[i, ], type = "l", lty = i, col = i)
+ 	}
+ 
+ }
> Nsim <- 100
> wjump = 1
> 
> # jump parameters
> lambda = .1
> mean.jump = .1
> sd.jump = 1
> 
> par(mfrow = c(1, 1))
> 
> for(sigma0 in seq(0.5, 0.5, len = 1)){
+ 		y.sim <- matrix(0, Nsim, Nx)
+ 	for(j in 1:Nsim){
+ 		w.noise <- w + rnorm(Nx, mean = 0, sd = 0.01)
+ 		y.sim[j, 1] <- runif(1, -5, 5)
+ 		c <- runif(1, 0, 10) 
+ 		y.sim[j, 2] <- y.sim[j, 1] + abs(rnorm(1, mean = 0, sd = 0.01))
+ 		for (i in 3 : Nx){
+ 		 	y.sim[j, i] <- y.sim[j, i-1] + (y.sim[j, i-1] - y.sim[j, i-2]) * (1+ w.noise[i] * delta + sigma0 * rnorm(1, 0, sqrt(delta)) + wjump * ifelse(runif(1) <= lambda * delta, 1, 0) * rnorm(1, mean.jump, sd.jump)) 
+ 		 	
+ 		 	
+ 		 	#* exp(w.noise[i] * delta - sigma0^2/2 * delta + sigma0 * rnorm(1, 0, sqrt(delta))) 
+ 	    }
+ 	}
+ 	
+ 	plot(xx, y.sim[1, ], type = "l", ylim = c(-5, 15), main = paste("sigma0 =", sigma0) )
+ 	for(i in 2 : Nsim){
+ 		points(xx, y.sim[i, ], type = "l", lty = i, col = i)
+ 	}
+ 
+ }
> Nsim <- 100
> wjump = 1
> 
> # jump parameters
> lambda = .5
> mean.jump = .1
> sd.jump = 1
> 
> par(mfrow = c(1, 1))
> 
> for(sigma0 in seq(0.5, 0.5, len = 1)){
+ 		y.sim <- matrix(0, Nsim, Nx)
+ 	for(j in 1:Nsim){
+ 		w.noise <- w + rnorm(Nx, mean = 0, sd = 0.01)
+ 		y.sim[j, 1] <- runif(1, -5, 5)
+ 		c <- runif(1, 0, 10) 
+ 		y.sim[j, 2] <- y.sim[j, 1] + abs(rnorm(1, mean = 0, sd = 0.01))
+ 		for (i in 3 : Nx){
+ 		 	y.sim[j, i] <- y.sim[j, i-1] + (y.sim[j, i-1] - y.sim[j, i-2]) * (1+ w.noise[i] * delta + sigma0 * rnorm(1, 0, sqrt(delta)) + wjump * ifelse(runif(1) <= lambda * delta, 1, 0) * rnorm(1, mean.jump, sd.jump)) 
+ 		 	
+ 		 	
+ 		 	#* exp(w.noise[i] * delta - sigma0^2/2 * delta + sigma0 * rnorm(1, 0, sqrt(delta))) 
+ 	    }
+ 	}
+ 	
+ 	plot(xx, y.sim[1, ], type = "l", ylim = c(-5, 15), main = paste("sigma0 =", sigma0) )
+ 	for(i in 2 : Nsim){
+ 		points(xx, y.sim[i, ], type = "l", lty = i, col = i)
+ 	}
+ 
+ }
> Nsim <- 100
> wjump = 1
> 
> # jump parameters
> lambda = .3
> mean.jump = .5
> sd.jump = .3
> 
> par(mfrow = c(1, 1))
> 
> for(sigma0 in seq(0.5, 0.5, len = 1)){
+ 		y.sim <- matrix(0, Nsim, Nx)
+ 	for(j in 1:Nsim){
+ 		w.noise <- w + rnorm(Nx, mean = 0, sd = 0.01)
+ 		y.sim[j, 1] <- runif(1, -5, 5)
+ 		c <- runif(1, 0, 10) 
+ 		y.sim[j, 2] <- y.sim[j, 1] + abs(rnorm(1, mean = 0, sd = 0.01))
+ 		for (i in 3 : Nx){
+ 		 	y.sim[j, i] <- y.sim[j, i-1] + (y.sim[j, i-1] - y.sim[j, i-2]) * (1+ w.noise[i] * delta + sigma0 * rnorm(1, 0, sqrt(delta)) + wjump * ifelse(runif(1) <= lambda * delta, 1, 0) * rnorm(1, mean.jump, sd.jump)) 
+ 		 	
+ 		 	
+ 		 	#* exp(w.noise[i] * delta - sigma0^2/2 * delta + sigma0 * rnorm(1, 0, sqrt(delta))) 
+ 	    }
+ 	}
+ 	
+ 	plot(xx, y.sim[1, ], type = "l", ylim = c(-5, 15), main = paste("sigma0 =", sigma0) )
+ 	for(i in 2 : Nsim){
+ 		points(xx, y.sim[i, ], type = "l", lty = i, col = i)
+ 	}
+ 
+ }
> i =1 
> EBAY[[i]]$Time ->x
> x
 [1] 0.000000 1.201505 1.203843 1.204433 1.708437 3.089711 4.187963 5.245810 5.863021
[10] 6.334815 6.548796 6.633935 6.997338
> log(EBAY[[i]]$Price) -> y
> y
 [1] 3.911823 3.911823 3.951051 3.988799 4.060443 4.649091 4.990297 5.150397 5.254888
[10] 5.310740 5.541264 5.715316 5.741720
> knots <- c(0,1,2,3,4,5,6,6.25,6.5,6.75,6.8125,6.875,6.9375,7)
> 	numk<-length(knots)
> 	numplot <- length(plotpoints)
> 	norder <- 5
> 	nbasis <- numk + 2
> 	lambda <- 0.1
> 	numauct<-N.auc
> 	wbasis <- create.bspline.basis(rangeval=c(0,7),nbasis=nbasis, norder=5)
> 	Wfd <- list(0); length(Wfd) <- numauct
> 	bids=rep(0,length(knots))
> 	for(j in 1:length(knots)) bids[j]=StepCheck(x,y,knots[j])
> 	Wfd <- Data2fd(knots,bids,basisobj=wbasis)
> 
> 	growfdPar <- fdPar(Wfd, 3, lambda)	
> 	mss <-smooth.basis(knots,bids,growfdPar,wtvec=rep(1,length(knots)))
> 	xfd <- mss$fd
> 	pca.fd(xfd, nharm = 5)
Error in pca.fd(xfd, nharm = 5) : PCA not possible without replications.
> 	xfd.more -> list(xfd, xfd)
Error: object 'xfd.more' not found
> 	xfd.more <- list(xfd, xfd)
> 	pca.fd(xfd.more, nharm = 5)
Error in pca.fd(xfd.more, nharm = 5) : 
  Argument FD  not a functional data object.
> mss
$fd
Functional data object:

 Dimensions of the data:
    time 
     reps 
     values 

Basis object:

  Type:   bspline 

  Range:  0  to  7 

  Number of basis functions:  16 

  Order of spline:  5 
[1] "  Interior knots"
 [1] 0.5833333 1.1666667 1.7500000 2.3333333 2.9166667 3.5000000 4.0833333 4.6666667
 [9] 5.2500000 5.8333333 6.4166667

$df
[1] 5.291435

$gcv
      rep1 
0.01643674 

$beta
NULL

$SSE
[1] 0.08903912

$penmat
             [,1]        [,2]         [,3]        [,4]       [,5]       [,6]
 [1,]  2842.60986 -4796.90415  2230.659130 -217.143809 -59.221039   0.000000
 [2,] -4796.90415  8172.50336 -3918.458737  454.027965  96.234188  -7.402630
 [3,]  2230.65913 -3918.45874  2072.736360 -381.646695 -12.337716  12.337716
 [4,]  -217.14381   454.02796  -381.646695  210.563694 -86.364015  17.272803
 [5,]   -59.22104    96.23419   -12.337716  -86.364015 123.377164 -83.896472
 [6,]     0.00000    -7.40263    12.337716   17.272803 -83.896472 123.377164
 [7,]     0.00000     0.00000    -3.290058    5.757601  19.740346 -83.896472
 [8,]     0.00000     0.00000     0.000000   -2.467543   4.935087  19.740346
 [9,]     0.00000     0.00000     0.000000    0.000000  -2.467543   4.935087
[10,]     0.00000     0.00000     0.000000    0.000000   0.000000  -2.467543
[11,]     0.00000     0.00000     0.000000    0.000000   0.000000   0.000000
[12,]     0.00000     0.00000     0.000000    0.000000   0.000000   0.000000
[13,]     0.00000     0.00000     0.000000    0.000000   0.000000   0.000000
[14,]     0.00000     0.00000     0.000000    0.000000   0.000000   0.000000
[15,]     0.00000     0.00000     0.000000    0.000000   0.000000   0.000000
[16,]     0.00000     0.00000     0.000000    0.000000   0.000000   0.000000
            [,7]       [,8]       [,9]      [,10]      [,11]      [,12]       [,13]
 [1,]   0.000000   0.000000   0.000000   0.000000   0.000000   0.000000    0.000000
 [2,]   0.000000   0.000000   0.000000   0.000000   0.000000   0.000000    0.000000
 [3,]  -3.290058   0.000000   0.000000   0.000000   0.000000   0.000000    0.000000
 [4,]   5.757601  -2.467543   0.000000   0.000000   0.000000   0.000000    0.000000
 [5,]  19.740346   4.935087  -2.467543   0.000000   0.000000   0.000000    0.000000
 [6,] -83.896472  19.740346   4.935087  -2.467543   0.000000   0.000000    0.000000
 [7,] 123.377164 -83.896472  19.740346   4.935087  -2.467543   0.000000    0.000000
 [8,] -83.896472 123.377164 -83.896472  19.740346   4.935087  -2.467543    0.000000
 [9,]  19.740346 -83.896472 123.377164 -83.896472  19.740346   4.935087   -2.467543
[10,]   4.935087  19.740346 -83.896472 123.377164 -83.896472  19.740346    5.757601
[11,]  -2.467543   4.935087  19.740346 -83.896472 123.377164 -83.896472   17.272803
[12,]   0.000000  -2.467543   4.935087  19.740346 -83.896472 123.377164  -86.364015
[13,]   0.000000   0.000000  -2.467543   5.757601  17.272803 -86.364015  210.563694
[14,]   0.000000   0.000000   0.000000  -3.290058  12.337716 -12.337716 -381.646695
[15,]   0.000000   0.000000   0.000000   0.000000  -7.402630  96.234188  454.027965
[16,]   0.000000   0.000000   0.000000   0.000000   0.000000 -59.221039 -217.143809
             [,14]       [,15]       [,16]
 [1,]     0.000000     0.00000     0.00000
 [2,]     0.000000     0.00000     0.00000
 [3,]     0.000000     0.00000     0.00000
 [4,]     0.000000     0.00000     0.00000
 [5,]     0.000000     0.00000     0.00000
 [6,]     0.000000     0.00000     0.00000
 [7,]     0.000000     0.00000     0.00000
 [8,]     0.000000     0.00000     0.00000
 [9,]     0.000000     0.00000     0.00000
[10,]    -3.290058     0.00000     0.00000
[11,]    12.337716    -7.40263     0.00000
[12,]   -12.337716    96.23419   -59.22104
[13,]  -381.646695   454.02796  -217.14381
[14,]  2072.736360 -3918.45874  2230.65913
[15,] -3918.458737  8172.50336 -4796.90415
[16,]  2230.659130 -4796.90415  2842.60986

$y2cMap
                  [,1]          [,2]         [,3]         [,4]         [,5]
bspl5.1   0.9468725268  0.1320856382 -0.075822765 -0.027672733  0.015380197
bspl5.2   0.7755246326  0.2804467033 -0.013948382 -0.048866977 -0.006066826
bspl5.3   0.4741698900  0.5157301165  0.107338512 -0.072158634 -0.041654766
bspl5.4   0.1468466481  0.6826677223  0.282775520 -0.049393788 -0.073301984
bspl5.5  -0.0546235216  0.5689509101  0.483763272  0.088396477 -0.067962779
bspl5.6  -0.0914941432  0.2947446655  0.549133935  0.298419817  0.005666850
bspl5.7  -0.0557651068  0.0611221566  0.416650605  0.492648357  0.160034813
bspl5.8  -0.0102129245 -0.0597423695  0.203097998  0.523972825  0.367051017
bspl5.9   0.0154638835 -0.0802123314  0.035873871  0.365925172  0.523479673
bspl5.10  0.0201459859 -0.0508423731 -0.045669719  0.160943157  0.491570265
bspl5.11  0.0130774774 -0.0148542329 -0.055274916  0.014829000  0.302271862
bspl5.12  0.0041773641  0.0068680552 -0.032063694 -0.046432840  0.104223113
bspl5.13 -0.0013160406  0.0115662764 -0.006300785 -0.043934431 -0.018302976
bspl5.14 -0.0018228154  0.0063318060  0.003001848 -0.019048832 -0.034196292
bspl5.15 -0.0005626061 -0.0003297448  0.003862990  0.004503982 -0.011116983
bspl5.16  0.0004669294 -0.0044760136  0.002987913  0.018124152  0.008837525
                 [,6]          [,7]          [,8]          [,9]         [,10]
bspl5.1   0.012130242  0.0004439235 -0.0008633639 -0.0013014549 -0.0008577428
bspl5.2   0.010342659  0.0040865157  0.0021386004  0.0005717620 -0.0005215316
bspl5.3   0.004879462  0.0095105890  0.0068936731  0.0037172966  0.0001915551
bspl5.4  -0.009147680  0.0120514285  0.0102872098  0.0066483427  0.0013947678
bspl5.5  -0.036120899  0.0044191344  0.0071280311  0.0066385931  0.0030286577
bspl5.6  -0.055610361 -0.0138077001 -0.0049533136  0.0009527012  0.0035702584
bspl5.7  -0.038859759 -0.0365970499 -0.0241187092 -0.0112010796  0.0013001748
bspl5.8   0.049598656 -0.0471174726 -0.0407455069 -0.0264236204 -0.0052565313
bspl5.9   0.216431141 -0.0185190774 -0.0343208374 -0.0328370498 -0.0145845084
bspl5.10  0.413645267  0.0739320565  0.0199773954 -0.0119206917 -0.0204679088
bspl5.11  0.510109457  0.2205382663  0.1300334125  0.0515150592 -0.0109700209
bspl5.12  0.399555615  0.3572080641  0.2606885562  0.1482402802  0.0249651377
bspl5.13  0.177624933  0.3489168133  0.3112312365  0.2229482154  0.0870103592
bspl5.14  0.038093039  0.1865743034  0.2005221591  0.1864590833  0.1332224158
bspl5.15 -0.030580677  0.0202584393  0.0543220164  0.0969000348  0.1460115008
bspl5.16 -0.059232483 -0.0778315873 -0.0364926599  0.0368168066  0.1481900348
                 [,11]         [,12]         [,13]         [,14]
bspl5.1  -0.0006091320 -3.054771e-04  5.321224e-05  0.0004669294
bspl5.2  -0.0007158761 -8.780032e-04 -1.007838e-03 -0.0011054394
bspl5.3  -0.0007317708 -1.670231e-03 -2.623619e-03 -0.0035920744
bspl5.4  -0.0001540576 -1.794880e-03 -3.527414e-03 -0.0053518366
bspl5.5   0.0016462769  7.297235e-05 -1.691106e-03 -0.0036460192
bspl5.6   0.0036941937  3.603893e-03  3.299119e-03  0.0027800851
bspl5.7   0.0043110054  7.269758e-03  1.017564e-02  0.0130291956
bspl5.8   0.0010339334  7.714741e-03  1.478470e-02  0.0222445531
bspl5.9  -0.0074449865  7.191632e-04  9.907027e-03  0.0201188603
bspl5.10 -0.0189007211 -1.584516e-02 -1.130041e-02 -0.0052671475
bspl5.11 -0.0238408109 -3.558116e-02 -4.618805e-02 -0.0556653416
bspl5.12 -0.0072488582 -3.998063e-02 -7.322318e-02 -0.1069769839
bspl5.13  0.0460192165  2.273200e-03 -4.422970e-02 -0.0935063148
bspl5.14  0.1129050354  8.969528e-02  6.360135e-02  0.0346616233
bspl5.15  0.1590521936  1.723351e-01  1.858312e-01  0.1995125115
bspl5.16  0.1824986839  2.194746e-01  2.591381e-01  0.3014979762

$argvals
        [,1]
 [1,] 0.0000
 [2,] 1.0000
 [3,] 2.0000
 [4,] 3.0000
 [5,] 4.0000
 [6,] 5.0000
 [7,] 6.0000
 [8,] 6.2500
 [9,] 6.5000
[10,] 6.7500
[11,] 6.8125
[12,] 6.8750
[13,] 6.9375
[14,] 7.0000

$y
          [,1]
 [1,] 3.911823
 [2,] 3.911823
 [3,] 4.060443
 [4,] 4.060443
 [5,] 4.649091
 [6,] 4.990297
 [7,] 5.254888
 [8,] 5.254888
 [9,] 5.310740
[10,] 5.715316
[11,] 5.715316
[12,] 5.715316
[13,] 5.715316
[14,] 5.741720

attr(,"class")
[1] "fdSmooth"
> mss.more <- list(mss, mss)
> mss.more$fd
NULL
> bids
 [1] 3.911823 3.911823 4.060443 4.060443 4.649091 4.990297 5.254888 5.254888 5.310740
[10] 5.715316 5.715316 5.715316 5.715316 5.741720
> bids.more <- rbind(bids, bids)
> bids.more
         [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8]    [,9]
bids 3.911823 3.911823 4.060443 4.060443 4.649091 4.990297 5.254888 5.254888 5.31074
bids 3.911823 3.911823 4.060443 4.060443 4.649091 4.990297 5.254888 5.254888 5.31074
        [,10]    [,11]    [,12]    [,13]   [,14]
bids 5.715316 5.715316 5.715316 5.715316 5.74172
bids 5.715316 5.715316 5.715316 5.715316 5.74172
> 	Wfd <- Data2fd(knots,bids.more,basisobj=wbasis)
Error in argvalsy.swap(argvals, y, basisobj) : 
  A dimension of 'argvals' does not match 'y':
  dim(argvals) = 14;  dim(y) = 2 x 14
> 	Wfd <- Data2fd(rbind(knots, knots),bids.more,basisobj=wbasis)
Error in chol.default(temp) : 
  the leading minor of order 15 is not positive definite
In addition: Warning message:
In smooth.basis1(argvals[, i], y = y[, i], fdParobj = fdParobj,  :
  Matrix of basis function values has rank 15 < dim(fdobj$basis)[2] = 16  ignoring null space
> daybasis65 <- create.fourier.basis(c(0, 365), nbasis=65, period=365)
> harmaccelLfd <- vec2Lfd(c(0,(2*pi/365)^2,0), c(0, 365)) harmfdPar <- fdPar(daybasis65, harmaccelLfd, lambda=1e5) daytempfd <- smooth.basis(day.5, CanadianWeather$dailyAv[,,"Temperature.C"], daybasis65, fdnames=list("Day", "Station", "Deg C"))$fd
Error: unexpected symbol in "harmaccelLfd <- vec2Lfd(c(0,(2*pi/365)^2,0), c(0, 365)) harmfdPar"
> daybasis65 <- create.fourier.basis(c(0, 365), nbasis=65, period=365)
> harmaccelLfd <- vec2Lfd(c(0,(2*pi/365)^2,0), c(0, 365))
> harmfdPar <- fdPar(daybasis65, harmaccelLfd, lambda=1e5)
> daytempfd <- smooth.basis(day.5, CanadianWeather$dailyAv[,,"Temperature.C"], daybasis65, fdnames=list("Day", "Station", "Deg C"))$fd
> daytempfd
Functional data object:

 Dimensions of the data:
     

Basis object:

  Type:   fourier 

  Range:  0  to  365 

  Number of basis functions:  65 

  Period:  365 
> daytemppcaobj <- pca.fd(daytempfd, nharm=4, harmfdPar)
> daytemppcaobj
$harmonics
Functional data object:

 Dimensions of the data:
     

Basis object:

  Type:   fourier 

  Range:  0  to  365 

  Number of basis functions:  65 

  Period:  365 

$values
 [1]  1.516914e+04  1.449132e+03  3.236243e+02  8.737189e+01  1.810927e+01
 [6]  1.318761e+01  7.090601e+00  3.541262e+00  2.483552e+00  1.920775e+00
[11]  1.082790e+00  8.968053e-01  6.407081e-01  3.159092e-01  2.316252e-01
[16]  1.615711e-01  1.521233e-01  9.630974e-02  7.573251e-02  6.637917e-02
[21]  3.940460e-02  2.356139e-02  1.545457e-02  1.024712e-02  8.334174e-03
[26]  5.521553e-03  4.715085e-03  3.432148e-03  2.237057e-03  1.586077e-03
[31]  1.137938e-03  7.552754e-04  4.072794e-04  2.532696e-04  3.684082e-17
[36]  1.607951e-17  1.113679e-17  1.037045e-17  1.007672e-17  7.493111e-18
[41]  1.207880e-18  1.686151e-19  1.465683e-19  1.306995e-19  1.026512e-19
[46]  4.328232e-20  4.305718e-20  4.169840e-20 -2.246524e-19 -2.467258e-19
[51] -3.098931e-19 -4.759705e-19 -1.231387e-18 -3.076015e-18 -3.601734e-18
[56] -4.607843e-18 -4.787075e-18 -7.060079e-18 -9.203968e-18 -1.161372e-17
[61] -2.797189e-17 -2.915600e-17 -3.087614e-17 -5.299190e-17 -3.125777e-16

$scores
             [,1]       [,2]        [,3]         [,4]
 [1,]   77.630924  57.992997 -11.8984857  -1.78731913
 [2,]   90.876189  15.156963 -17.2734209   4.08766940
 [3,]   82.913551  32.302250 -24.8833544   3.99265350
 [4,]  114.995552  37.067692 -10.0251010  -3.81570130
 [5,]   70.244687  12.762464 -23.5229893   2.91193588
 [6,]   64.564100 -10.650100 -11.1379406   2.53277757
 [7,] -135.343151  20.322351 -10.8099439 -15.86407469
 [8,]   13.604241 -26.365786 -13.4357623  -6.30114670
 [9,]   -1.584400 -23.312442  -9.8448066  -7.05963157
[10,]   36.486090 -20.990190 -11.7439373   1.21974219
[11,]   42.436655 -11.379150  -6.3953509  -3.59293309
[12,]   73.906659 -31.858631 -14.9403673   4.76578485
[13,]   67.080111 -33.567210 -12.5281620   4.82872235
[14,]  103.036238 -13.044444 -14.5409695   9.53172361
[15,]  104.358358 -13.856447 -13.9100339   8.21187153
[16,]    7.171273 -14.909332  -3.4803226  -7.48420119
[17,]   -8.016106 -54.945286  -4.0625381  -2.97900997
[18,]  -55.990959 -41.691568   0.2366649  -6.41909968
[19,] -181.185208  17.598286 -20.4177815 -12.32030728
[20,]    3.108566 -42.375795   6.3817861  -0.28572370
[21,]  -37.950914 -43.223787  10.7391174  -6.91889737
[22,] -123.554585 -44.352018  -0.5512122  -7.10913097
[23,]    6.955099 -12.211967  22.1636690  -4.49224193
[24,]   49.563143   9.194632  21.9638913   0.96674441
[25,]  136.337502 -18.118734  19.3605712  11.01954220
[26,]  183.933420  41.816894  18.0580228   6.40395480
[27,]  181.516905  52.878933  20.0876408   4.06021730
[28,]   50.752910  13.588851  32.8596384  -6.47303303
[29,]  137.763117  75.320556  24.6366947  -7.48936009
[30,]  -49.335898   1.138629  35.5925592  -6.28299721
[31,] -151.440805 -54.902670  39.2780567  -0.06973225
[32,] -159.408863 -38.555236  -5.1142782   8.65849513
[33,] -216.828722  64.631483 -20.7400975 -13.35707356
[34,] -234.741676   1.621493   3.0560162  37.69563605
[35,] -343.854002  96.916322   6.8425268   9.21414390

$varprop
[1] 0.888152117 0.084846625 0.018948184 0.005115619

$meanfd
Functional data object:

 Dimensions of the data:
     

Basis object:

  Type:   fourier 

  Range:  0  to  365 

  Number of basis functions:  65 

  Period:  365 

attr(,"class")
[1] "pca.fd"
> mss
$fd
Functional data object:

 Dimensions of the data:
    time 
     reps 
     values 

Basis object:

  Type:   bspline 

  Range:  0  to  7 

  Number of basis functions:  16 

  Order of spline:  5 
[1] "  Interior knots"
 [1] 0.5833333 1.1666667 1.7500000 2.3333333 2.9166667 3.5000000 4.0833333 4.6666667
 [9] 5.2500000 5.8333333 6.4166667

$df
[1] 5.291435

$gcv
      rep1 
0.01643674 

$beta
NULL

$SSE
[1] 0.08903912

$penmat
             [,1]        [,2]         [,3]        [,4]       [,5]       [,6]
 [1,]  2842.60986 -4796.90415  2230.659130 -217.143809 -59.221039   0.000000
 [2,] -4796.90415  8172.50336 -3918.458737  454.027965  96.234188  -7.402630
 [3,]  2230.65913 -3918.45874  2072.736360 -381.646695 -12.337716  12.337716
 [4,]  -217.14381   454.02796  -381.646695  210.563694 -86.364015  17.272803
 [5,]   -59.22104    96.23419   -12.337716  -86.364015 123.377164 -83.896472
 [6,]     0.00000    -7.40263    12.337716   17.272803 -83.896472 123.377164
 [7,]     0.00000     0.00000    -3.290058    5.757601  19.740346 -83.896472
 [8,]     0.00000     0.00000     0.000000   -2.467543   4.935087  19.740346
 [9,]     0.00000     0.00000     0.000000    0.000000  -2.467543   4.935087
[10,]     0.00000     0.00000     0.000000    0.000000   0.000000  -2.467543
[11,]     0.00000     0.00000     0.000000    0.000000   0.000000   0.000000
[12,]     0.00000     0.00000     0.000000    0.000000   0.000000   0.000000
[13,]     0.00000     0.00000     0.000000    0.000000   0.000000   0.000000
[14,]     0.00000     0.00000     0.000000    0.000000   0.000000   0.000000
[15,]     0.00000     0.00000     0.000000    0.000000   0.000000   0.000000
[16,]     0.00000     0.00000     0.000000    0.000000   0.000000   0.000000
            [,7]       [,8]       [,9]      [,10]      [,11]      [,12]       [,13]
 [1,]   0.000000   0.000000   0.000000   0.000000   0.000000   0.000000    0.000000
 [2,]   0.000000   0.000000   0.000000   0.000000   0.000000   0.000000    0.000000
 [3,]  -3.290058   0.000000   0.000000   0.000000   0.000000   0.000000    0.000000
 [4,]   5.757601  -2.467543   0.000000   0.000000   0.000000   0.000000    0.000000
 [5,]  19.740346   4.935087  -2.467543   0.000000   0.000000   0.000000    0.000000
 [6,] -83.896472  19.740346   4.935087  -2.467543   0.000000   0.000000    0.000000
 [7,] 123.377164 -83.896472  19.740346   4.935087  -2.467543   0.000000    0.000000
 [8,] -83.896472 123.377164 -83.896472  19.740346   4.935087  -2.467543    0.000000
 [9,]  19.740346 -83.896472 123.377164 -83.896472  19.740346   4.935087   -2.467543
[10,]   4.935087  19.740346 -83.896472 123.377164 -83.896472  19.740346    5.757601
[11,]  -2.467543   4.935087  19.740346 -83.896472 123.377164 -83.896472   17.272803
[12,]   0.000000  -2.467543   4.935087  19.740346 -83.896472 123.377164  -86.364015
[13,]   0.000000   0.000000  -2.467543   5.757601  17.272803 -86.364015  210.563694
[14,]   0.000000   0.000000   0.000000  -3.290058  12.337716 -12.337716 -381.646695
[15,]   0.000000   0.000000   0.000000   0.000000  -7.402630  96.234188  454.027965
[16,]   0.000000   0.000000   0.000000   0.000000   0.000000 -59.221039 -217.143809
             [,14]       [,15]       [,16]
 [1,]     0.000000     0.00000     0.00000
 [2,]     0.000000     0.00000     0.00000
 [3,]     0.000000     0.00000     0.00000
 [4,]     0.000000     0.00000     0.00000
 [5,]     0.000000     0.00000     0.00000
 [6,]     0.000000     0.00000     0.00000
 [7,]     0.000000     0.00000     0.00000
 [8,]     0.000000     0.00000     0.00000
 [9,]     0.000000     0.00000     0.00000
[10,]    -3.290058     0.00000     0.00000
[11,]    12.337716    -7.40263     0.00000
[12,]   -12.337716    96.23419   -59.22104
[13,]  -381.646695   454.02796  -217.14381
[14,]  2072.736360 -3918.45874  2230.65913
[15,] -3918.458737  8172.50336 -4796.90415
[16,]  2230.659130 -4796.90415  2842.60986

$y2cMap
                  [,1]          [,2]         [,3]         [,4]         [,5]
bspl5.1   0.9468725268  0.1320856382 -0.075822765 -0.027672733  0.015380197
bspl5.2   0.7755246326  0.2804467033 -0.013948382 -0.048866977 -0.006066826
bspl5.3   0.4741698900  0.5157301165  0.107338512 -0.072158634 -0.041654766
bspl5.4   0.1468466481  0.6826677223  0.282775520 -0.049393788 -0.073301984
bspl5.5  -0.0546235216  0.5689509101  0.483763272  0.088396477 -0.067962779
bspl5.6  -0.0914941432  0.2947446655  0.549133935  0.298419817  0.005666850
bspl5.7  -0.0557651068  0.0611221566  0.416650605  0.492648357  0.160034813
bspl5.8  -0.0102129245 -0.0597423695  0.203097998  0.523972825  0.367051017
bspl5.9   0.0154638835 -0.0802123314  0.035873871  0.365925172  0.523479673
bspl5.10  0.0201459859 -0.0508423731 -0.045669719  0.160943157  0.491570265
bspl5.11  0.0130774774 -0.0148542329 -0.055274916  0.014829000  0.302271862
bspl5.12  0.0041773641  0.0068680552 -0.032063694 -0.046432840  0.104223113
bspl5.13 -0.0013160406  0.0115662764 -0.006300785 -0.043934431 -0.018302976
bspl5.14 -0.0018228154  0.0063318060  0.003001848 -0.019048832 -0.034196292
bspl5.15 -0.0005626061 -0.0003297448  0.003862990  0.004503982 -0.011116983
bspl5.16  0.0004669294 -0.0044760136  0.002987913  0.018124152  0.008837525
                 [,6]          [,7]          [,8]          [,9]         [,10]
bspl5.1   0.012130242  0.0004439235 -0.0008633639 -0.0013014549 -0.0008577428
bspl5.2   0.010342659  0.0040865157  0.0021386004  0.0005717620 -0.0005215316
bspl5.3   0.004879462  0.0095105890  0.0068936731  0.0037172966  0.0001915551
bspl5.4  -0.009147680  0.0120514285  0.0102872098  0.0066483427  0.0013947678
bspl5.5  -0.036120899  0.0044191344  0.0071280311  0.0066385931  0.0030286577
bspl5.6  -0.055610361 -0.0138077001 -0.0049533136  0.0009527012  0.0035702584
bspl5.7  -0.038859759 -0.0365970499 -0.0241187092 -0.0112010796  0.0013001748
bspl5.8   0.049598656 -0.0471174726 -0.0407455069 -0.0264236204 -0.0052565313
bspl5.9   0.216431141 -0.0185190774 -0.0343208374 -0.0328370498 -0.0145845084
bspl5.10  0.413645267  0.0739320565  0.0199773954 -0.0119206917 -0.0204679088
bspl5.11  0.510109457  0.2205382663  0.1300334125  0.0515150592 -0.0109700209
bspl5.12  0.399555615  0.3572080641  0.2606885562  0.1482402802  0.0249651377
bspl5.13  0.177624933  0.3489168133  0.3112312365  0.2229482154  0.0870103592
bspl5.14  0.038093039  0.1865743034  0.2005221591  0.1864590833  0.1332224158
bspl5.15 -0.030580677  0.0202584393  0.0543220164  0.0969000348  0.1460115008
bspl5.16 -0.059232483 -0.0778315873 -0.0364926599  0.0368168066  0.1481900348
                 [,11]         [,12]         [,13]         [,14]
bspl5.1  -0.0006091320 -3.054771e-04  5.321224e-05  0.0004669294
bspl5.2  -0.0007158761 -8.780032e-04 -1.007838e-03 -0.0011054394
bspl5.3  -0.0007317708 -1.670231e-03 -2.623619e-03 -0.0035920744
bspl5.4  -0.0001540576 -1.794880e-03 -3.527414e-03 -0.0053518366
bspl5.5   0.0016462769  7.297235e-05 -1.691106e-03 -0.0036460192
bspl5.6   0.0036941937  3.603893e-03  3.299119e-03  0.0027800851
bspl5.7   0.0043110054  7.269758e-03  1.017564e-02  0.0130291956
bspl5.8   0.0010339334  7.714741e-03  1.478470e-02  0.0222445531
bspl5.9  -0.0074449865  7.191632e-04  9.907027e-03  0.0201188603
bspl5.10 -0.0189007211 -1.584516e-02 -1.130041e-02 -0.0052671475
bspl5.11 -0.0238408109 -3.558116e-02 -4.618805e-02 -0.0556653416
bspl5.12 -0.0072488582 -3.998063e-02 -7.322318e-02 -0.1069769839
bspl5.13  0.0460192165  2.273200e-03 -4.422970e-02 -0.0935063148
bspl5.14  0.1129050354  8.969528e-02  6.360135e-02  0.0346616233
bspl5.15  0.1590521936  1.723351e-01  1.858312e-01  0.1995125115
bspl5.16  0.1824986839  2.194746e-01  2.591381e-01  0.3014979762

$argvals
        [,1]
 [1,] 0.0000
 [2,] 1.0000
 [3,] 2.0000
 [4,] 3.0000
 [5,] 4.0000
 [6,] 5.0000
 [7,] 6.0000
 [8,] 6.2500
 [9,] 6.5000
[10,] 6.7500
[11,] 6.8125
[12,] 6.8750
[13,] 6.9375
[14,] 7.0000

$y
          [,1]
 [1,] 3.911823
 [2,] 3.911823
 [3,] 4.060443
 [4,] 4.060443
 [5,] 4.649091
 [6,] 4.990297
 [7,] 5.254888
 [8,] 5.254888
 [9,] 5.310740
[10,] 5.715316
[11,] 5.715316
[12,] 5.715316
[13,] 5.715316
[14,] 5.741720

attr(,"class")
[1] "fdSmooth"
> day.5
jan01 jan02 jan03 jan04 jan05 jan06 jan07 jan08 jan09 jan10 jan11 jan12 jan13 jan14 
  0.5   1.5   2.5   3.5   4.5   5.5   6.5   7.5   8.5   9.5  10.5  11.5  12.5  13.5 
jan15 jan16 jan17 jan18 jan19 jan20 jan21 jan22 jan23 jan24 jan25 jan26 jan27 jan28 
 14.5  15.5  16.5  17.5  18.5  19.5  20.5  21.5  22.5  23.5  24.5  25.5  26.5  27.5 
jan29 jan30 jan31 feb01 feb02 feb03 feb04 feb05 feb06 feb07 feb08 feb09 feb10 feb11 
 28.5  29.5  30.5  31.5  32.5  33.5  34.5  35.5  36.5  37.5  38.5  39.5  40.5  41.5 
feb12 feb13 feb14 feb15 feb16 feb17 feb18 feb19 feb20 feb21 feb22 feb23 feb24 feb25 
 42.5  43.5  44.5  45.5  46.5  47.5  48.5  49.5  50.5  51.5  52.5  53.5  54.5  55.5 
feb26 feb27 feb28 mar01 mar02 mar03 mar04 mar05 mar06 mar07 mar08 mar09 mar10 mar11 
 56.5  57.5  58.5  59.5  60.5  61.5  62.5  63.5  64.5  65.5  66.5  67.5  68.5  69.5 
mar12 mar13 mar14 mar15 mar16 mar17 mar18 mar19 mar20 mar21 mar22 mar23 mar24 mar25 
 70.5  71.5  72.5  73.5  74.5  75.5  76.5  77.5  78.5  79.5  80.5  81.5  82.5  83.5 
mar26 mar27 mar28 mar29 mar30 mar31 apr01 apr02 apr03 apr04 apr05 apr06 apr07 apr08 
 84.5  85.5  86.5  87.5  88.5  89.5  90.5  91.5  92.5  93.5  94.5  95.5  96.5  97.5 
apr09 apr10 apr11 apr12 apr13 apr14 apr15 apr16 apr17 apr18 apr19 apr20 apr21 apr22 
 98.5  99.5 100.5 101.5 102.5 103.5 104.5 105.5 106.5 107.5 108.5 109.5 110.5 111.5 
apr23 apr24 apr25 apr26 apr27 apr28 apr29 apr30 may01 may02 may03 may04 may05 may06 
112.5 113.5 114.5 115.5 116.5 117.5 118.5 119.5 120.5 121.5 122.5 123.5 124.5 125.5 
may07 may08 may09 may10 may11 may12 may13 may14 may15 may16 may17 may18 may19 may20 
126.5 127.5 128.5 129.5 130.5 131.5 132.5 133.5 134.5 135.5 136.5 137.5 138.5 139.5 
may21 may22 may23 may24 may25 may26 may27 may28 may29 may30 may31 jun01 jun02 jun03 
140.5 141.5 142.5 143.5 144.5 145.5 146.5 147.5 148.5 149.5 150.5 151.5 152.5 153.5 
jun04 jun05 jun06 jun07 jun08 jun09 jun10 jun11 jun12 jun13 jun14 jun15 jun16 jun17 
154.5 155.5 156.5 157.5 158.5 159.5 160.5 161.5 162.5 163.5 164.5 165.5 166.5 167.5 
jun18 jun19 jun20 jun21 jun22 jun23 jun24 jun25 jun26 jun27 jun28 jun29 jun30 jul01 
168.5 169.5 170.5 171.5 172.5 173.5 174.5 175.5 176.5 177.5 178.5 179.5 180.5 181.5 
jul02 jul03 jul04 jul05 jul06 jul07 jul08 jul09 jul10 jul11 jul12 jul13 jul14 jul15 
182.5 183.5 184.5 185.5 186.5 187.5 188.5 189.5 190.5 191.5 192.5 193.5 194.5 195.5 
jul16 jul17 jul18 jul19 jul20 jul21 jul22 jul23 jul24 jul25 jul26 jul27 jul28 jul29 
196.5 197.5 198.5 199.5 200.5 201.5 202.5 203.5 204.5 205.5 206.5 207.5 208.5 209.5 
jul30 jul31 aug01 aug02 aug03 aug04 aug05 aug06 aug07 aug08 aug09 aug10 aug11 aug12 
210.5 211.5 212.5 213.5 214.5 215.5 216.5 217.5 218.5 219.5 220.5 221.5 222.5 223.5 
aug13 aug14 aug15 aug16 aug17 aug18 aug19 aug20 aug21 aug22 aug23 aug24 aug25 aug26 
224.5 225.5 226.5 227.5 228.5 229.5 230.5 231.5 232.5 233.5 234.5 235.5 236.5 237.5 
aug27 aug28 aug29 aug30 aug31 sep01 sep02 sep03 sep04 sep05 sep06 sep07 sep08 sep09 
238.5 239.5 240.5 241.5 242.5 243.5 244.5 245.5 246.5 247.5 248.5 249.5 250.5 251.5 
sep10 sep11 sep12 sep13 sep14 sep15 sep16 sep17 sep18 sep19 sep20 sep21 sep22 sep23 
252.5 253.5 254.5 255.5 256.5 257.5 258.5 259.5 260.5 261.5 262.5 263.5 264.5 265.5 
sep24 sep25 sep26 sep27 sep28 sep29 sep30 oct01 oct02 oct03 oct04 oct05 oct06 oct07 
266.5 267.5 268.5 269.5 270.5 271.5 272.5 273.5 274.5 275.5 276.5 277.5 278.5 279.5 
oct08 oct09 oct10 oct11 oct12 oct13 oct14 oct15 oct16 oct17 oct18 oct19 oct20 oct21 
280.5 281.5 282.5 283.5 284.5 285.5 286.5 287.5 288.5 289.5 290.5 291.5 292.5 293.5 
oct22 oct23 oct24 oct25 oct26 oct27 oct28 oct29 oct30 oct31 nov01 nov02 nov03 nov04 
294.5 295.5 296.5 297.5 298.5 299.5 300.5 301.5 302.5 303.5 304.5 305.5 306.5 307.5 
nov05 nov06 nov07 nov08 nov09 nov10 nov11 nov12 nov13 nov14 nov15 nov16 nov17 nov18 
308.5 309.5 310.5 311.5 312.5 313.5 314.5 315.5 316.5 317.5 318.5 319.5 320.5 321.5 
nov19 nov20 nov21 nov22 nov23 nov24 nov25 nov26 nov27 nov28 nov29 nov30 dec01 dec02 
322.5 323.5 324.5 325.5 326.5 327.5 328.5 329.5 330.5 331.5 332.5 333.5 334.5 335.5 
dec03 dec04 dec05 dec06 dec07 dec08 dec09 dec10 dec11 dec12 dec13 dec14 dec15 dec16 
336.5 337.5 338.5 339.5 340.5 341.5 342.5 343.5 344.5 345.5 346.5 347.5 348.5 349.5 
dec17 dec18 dec19 dec20 dec21 dec22 dec23 dec24 dec25 dec26 dec27 dec28 dec29 dec30 
350.5 351.5 352.5 353.5 354.5 355.5 356.5 357.5 358.5 359.5 360.5 361.5 362.5 363.5 
dec31 
364.5 
> data(handwrit)
> summary(handwrit)
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
-4.11e-02 -1.13e-02  8.00e-04 -8.97e-06  1.18e-02  3.91e-02 
> head(handwrit)
[1] -0.0316 -0.0314 -0.0312 -0.0311 -0.0308 -0.0306
> fdatime = seq(0,2.3,len=1401)
> fdabasis = create.bspline.basis(c(0,2.3),norder=4,nbasis=503)
> 
> fdaPar = fdPar(fdabasis,int2Lfd(2),1e-8)
> 
> fdafd = smooth.basis(fdatime,handwrit,fdaPar)
> 
> summary(fdafd)
        Length Class  Mode   
fd           3 fd     list   
df           1 -none- numeric
gcv         40 -none- numeric
beta         0 -none- NULL   
SSE          1 -none- numeric
penmat  253009 -none- numeric
y2cMap  704703 -none- numeric
argvals   1401 -none- numeric
y        56040 -none- numeric
> par(mfrow=c(2,1))
> plot(fdafd$fd)
[1] "done"
> ?fdPar
> plot(fdabasis)
> int2LFD(2)
Error: could not find function "int2LFD"
> int2Lfd(2)
Lfd:
nderiv = 2 

bwtlist:

Weight function: 0 

Functional data object:

 Dimensions of the data:
    args 
     reps 
     funs 

Basis object:

  Type:   const 

  Range:  0  to  1 

  Number of basis functions:  1 

Weight function: 1 

Functional data object:

 Dimensions of the data:
    args 
     reps 
     funs 

Basis object:

  Type:   const 

  Range:  0  to  1 

  Number of basis functions:  1 
> plot(growfdPar)
[1] "done"
> length(handwrit)
[1] 56040
> summary(handwrit)
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
-4.11e-02 -1.13e-02  8.00e-04 -8.97e-06  1.18e-02  3.91e-02 
> ?handwrit
> dim(handwrit)
[1] 1401   20    2
> 	bids=rep(0,length(knots)*length(xlist), dim = c(length(knots),length(xlist)))
Error: object 'xlist' not found
> xlist <- NULL
> ylist <- NULL
> for(i in 1:N.auc){
+ 	xlist[[i]] <- EBAY[[i]]$Time
+ 	ylist[[i]] <- log(EBAY[[i]]$Price)
+ }
> length(xlist)
[1] 190
> ylist[[1]]
 [1] 3.911823 3.911823 3.951051 3.988799 4.060443 4.649091 4.990297 5.150397 5.254888
[10] 5.310740 5.541264 5.715316 5.741720
> 	bids=rep(0,length(knots)*length(xlist), dim = c(length(knots),length(xlist)))
> dim(bids)
NULL
> 	bids <- array(0,length(knots)*length(xlist), dim = c(length(knots),length(xlist)))
> dim(bids)
[1]  14 190
> knots <- c(0,1,2,3,4,5,6,6.25,6.5,6.75,6.8125,6.875,6.9375,7)
> 	numk<-length(knots)
> 	numplot <- length(plotpoints)
> 	norder <- 5
> 	nbasis <- numk + 2
> 	lambda <- 0.1
> 	numauct<-N.auc
> 	wbasis <- create.bspline.basis(rangeval=c(0,7),nbasis=nbasis, norder=5)
> 	Wfd <- list(0); length(Wfd) <- numauct
> 	bids <- array(0,length(knots)*length(xlist), dim = c(length(knots),length(xlist)))
> 	for(i in 1:length(xlist)){
+ 		for(j in 1:length(knots)){
+ 		  bids[j, i]=StepCheck(xlist[[i]],ylist[[i]],knots[j])	
+ 		} 
+ 	}
> 	
> 	
> 	Wfd <- Data2fd(knots,bids,basisobj=wbasis)
> plot(Wfd)
[1] "done"
> 	PCA <- pca.fd(Wfd, nharm = 4)
> 	cumsum(PCA$varprop)
[1] 0.5145168 0.9180905 0.9721093 0.9840754
> 	PCA <- pca.fd(Wfd, nharm = 5)
> 	cumsum(PCA$varprop)
[1] 0.5145168 0.9180905 0.9721093 0.9840754 0.9901157
> 	plot.pca.fd(PCA,harm=1,pointplot=FALSE,expand=0.004)
> 	plot.pca.fd(PCA,harm=2,pointplot=FALSE,expand=0.004)
> 	plot.pca.fd(PCA,harm=1,pointplot=FALSE,expand=0.004)
> summary(PCA)
          Length Class  Mode   
harmonics   3    fd     list   
values     16    -none- numeric
scores    950    -none- numeric
varprop     5    -none- numeric
meanfd      3    fd     list   
> summary(PCA$scores)
       V1                 V2               V3                V4          
 Min.   :-13.7473   Min.   :-9.370   Min.   :-6.6727   Min.   :-1.65063  
 1st Qu.: -2.2623   1st Qu.:-2.654   1st Qu.:-0.5903   1st Qu.:-0.29965  
 Median :  0.0236   Median :-0.531   Median : 0.5838   Median :-0.04838  
 Mean   :  0.0000   Mean   : 0.000   Mean   : 0.0000   Mean   : 0.00000  
 3rd Qu.:  2.3699   3rd Qu.: 3.290   3rd Qu.: 0.8558   3rd Qu.: 0.20421  
 Max.   : 15.5960   Max.   : 6.991   Max.   : 1.3410   Max.   : 1.69748  
       V5          
 Min.   :-2.35566  
 1st Qu.:-0.22069  
 Median :-0.05447  
 Mean   : 0.00000  
 3rd Qu.: 0.22003  
 Max.   : 1.16399  
> dim(PCA$scores)
[1] 190   5
> Ypca = pca.fd(fdafd$fd[,2],nharm=8)
> cumsum(Ypca$varprop)
[1] 0.3604863 0.5537488 0.6983377 0.7908719 0.8503734 0.8915819 0.9158854 0.9381744
> 
> # Seven components required to fit the data well. 
> 
> plot.pca.fd(Ypca,harm=1,pointplot=FALSE,expand=0.004)
> 
> # First principle component is positive at the heights of the 
> # f and d and negative at the bottoms, this is reversed for the smaller
> # letters a and the first part of the d. So this is more about the relative
> # height of the long strokes than the over-all size. 
> 
> plot.pca.fd(Ypca,harm=2,pointplot=FALSE,expand=0.004)
> 
> # Second component is focussed much more on the total 
> # height of the top of the f and d
> 
> plot.pca.fd(Ypca,harm=3,pointplot=FALSE,expand=0.004)
> head(bids)
         [,1]     [,2]     [,3]      [,4]     [,5]     [,6]     [,7]     [,8]
[1,] 3.911823 2.301585 3.912023 0.0000000 3.911823 4.317488 3.198673 2.301585
[2,] 3.911823 2.351375 3.912023 0.0000000 3.911823 4.317488 3.433987 3.020425
[3,] 4.060443 2.442347 3.912023 0.8109302 3.911823 4.317488 3.481240 4.330733
[4,] 4.060443 3.258097 3.912023 2.7408400 3.911823 4.317488 3.931826 4.510860
[5,] 4.649091 3.713572 3.912023 3.4339872 3.911823 4.317488 3.931826 4.510860
[6,] 4.990297 3.828641 3.912023 3.4339872 3.931826 4.317488 4.110874 4.510860
         [,9]    [,10]    [,11]    [,12]    [,13]    [,14]       [,15]    [,16]
[1,] 4.382027 1.609438 4.382027 2.301585 4.317488 3.912023 -0.01005034 2.564180
[2,] 4.382027 2.014903 4.382027 2.301585 4.317488 3.912023  3.25809654 2.564180
[3,] 4.382027 2.014903 4.382027 2.708050 4.317488 3.912023  3.25809654 2.564180
[4,] 4.382027 3.433987 4.418841 2.708050 4.317488 3.912023  3.43398720 2.564180
[5,] 4.382027 3.912223 4.418841 2.740840 4.317488 3.912023  3.43398720 2.564180
[6,] 4.382027 3.951436 4.418841 3.713084 4.317488 4.330733  3.43398720 3.113515
        [,17]    [,18]    [,19]    [,20]    [,21]    [,22]    [,23]    [,24]
[1,] 3.912023 2.301585 3.688879 3.218876 3.400864 4.442651 4.317488 5.010635
[2,] 3.912023 2.350422 3.688879 3.663562 3.400864 4.442651 4.317488 5.010635
[3,] 3.912023 2.350422 3.828641 3.663562 3.400864 4.442651 4.317488 5.010635
[4,] 3.912023 3.020425 3.828641 3.713572 3.400864 4.442651 4.317488 5.010635
[5,] 4.025352 3.286534 3.828641 3.737670 3.400864 4.442651 4.317488 5.010635
[6,] 4.189655 3.286534 3.828641 3.737670 3.433665 4.442651 4.317488 5.010635
           [,25]    [,26]       [,27]    [,28]    [,29]    [,30]     [,31]    [,32]
[1,] -0.01005034 1.098612 -0.01005034 0.000000 4.382027 4.248352 -4.605170 1.098612
[2,]  1.32175584 3.401197  0.22314355 1.704748 4.382027 4.248352  2.351375 2.351375
[3,]  3.02042489 3.610918  2.30258509 2.351375 4.382027 4.248352  3.912223 3.583519
[4,]  3.02042489 4.110874  2.35137526 4.330733 4.382027 4.248352  3.912223 3.663562
[5,]  3.02042489 4.629863  2.35137526 4.330733 4.382027 4.248352  3.912223 3.931826
[6,]  3.02042489 4.629863  2.35137526 4.394449 4.382027 4.248352  3.912223 3.931826
        [,33]     [,34]     [,35]    [,36]     [,37]     [,38]    [,39]    [,40]
[1,] 3.911823 0.0000000 -4.605170 4.094178 -4.605170 -4.605170 0.000000 1.098612
[2,] 3.911823 0.0000000  1.704748 4.094178  3.931826  2.351375 3.020425 2.351375
[3,] 3.911823 0.0000000  2.674149 4.094178  4.532707  3.828641 3.331847 2.946542
[4,] 3.911823 0.0000000  2.674149 4.094178  5.120983  3.912023 3.555348 4.189655
[5,] 3.911823 0.2231436  2.674149 4.094178  5.178971  3.931826 3.555348 4.189655
[6,] 3.911823 1.7047481  2.741485 4.094178  5.178971  4.043051 3.583519 4.189655
         [,41]   [,42]    [,43]    [,44]       [,45]    [,46]    [,47]    [,48]
[1,] 0.6931472 4.59512 2.302585 2.302585 -0.01005034 0.000000 3.912023 5.164786
[2,] 0.6931472 4.59512 2.302585 3.020425  3.23828622 0.000000 3.912023 5.164786
[3,] 0.6931472 4.59512 2.302585 3.020425  3.71357207 0.000000 3.951244 5.164786
[4,] 0.6931472 4.59512 2.302585 3.068053  3.71357207 2.354228 3.951244 5.164786
[5,] 0.6931472 4.60517 2.302585 3.068053  3.93182563 2.354228 3.951244 5.164786
[6,] 0.8109302 4.60517 2.302585 3.433987  3.93182563 2.740840 3.951244 5.164786
        [,49]    [,50]    [,51]       [,52]    [,53]    [,54]    [,55]    [,56]
[1,] 4.094345 4.094345 4.094178 -0.01005034 4.248495 3.911823 3.912023 2.302585
[2,] 4.094345 4.094345 4.094178  3.58435192 4.248495 3.911823 3.912023 2.302585
[3,] 4.094345 4.094345 4.094178  3.93182563 4.248495 3.911823 3.912023 2.302585
[4,] 4.094345 4.094345 4.094178  3.93182563 4.248495 3.911823 3.912023 2.302585
[5,] 4.094345 4.094345 4.094178  3.93182563 4.248495 3.911823 3.912023 2.302585
[6,] 4.094345 4.094345 4.094178  4.18965474 4.248495 3.911823 3.912023 2.970414
        [,57]    [,58]    [,59]       [,60]     [,61]    [,62]      [,63]    [,64]
[1,] 4.488636 2.995732 0.000000 -0.01005034 0.6881346 1.609438 -4.6051702 2.301585
[2,] 4.488636 3.433987 2.923699  4.11087386 1.6094379 1.609438  0.2231436 2.301585
[3,] 4.488636 3.713572 3.931826  4.11087386 2.3513753 1.609438  5.3107399 2.301585
[4,] 4.488636 3.784190 4.110874  4.11087386 4.0253517 1.871802  5.3107399 2.301585
[5,] 4.488636 3.850148 4.290459  4.11087386 4.0253517 2.014903  5.3107399 2.397895
[6,] 4.488636 3.850148 4.290459  4.11087386 4.1108739 3.496508  5.3107399 4.330733
           [,65]    [,66]    [,67]   [,68]    [,69]    [,70]       [,71]    [,72]
[1,] -0.01005034 4.381902 4.828314 3.89182 3.688629 4.442651 -0.01005034 4.488636
[2,]  2.35137526 4.381902 4.828314 3.89182 3.688629 4.442651  4.80811103 4.488636
[3,]  3.43398720 4.381902 4.828314 3.89182 3.688629 4.442651  4.80811103 4.488636
[4,]  3.43398720 4.381902 4.828314 3.89182 3.688629 4.442651  5.29831737 4.488636
[5,]  3.43398720 4.381902 4.828314 3.89182 3.688629 4.442651  5.29831737 4.488636
[6,]  3.71357207 4.381902 4.828314 3.89182 3.688629 4.684443  5.31073989 4.488636
        [,73]    [,74]       [,75]       [,76]    [,77]    [,78]    [,79]    [,80]
[1,] 4.382027 2.995232 -0.01005034 -0.01005034 2.301585 3.218476 4.605170 2.301585
[2,] 4.382027 2.995232  2.35137526  3.46573590 3.020425 3.218476 4.605170 2.301585
[3,] 4.382027 3.020425  2.80336038  3.49650756 3.020425 3.218476 4.605170 2.350422
[4,] 4.382027 3.020425  3.02042489  3.71357207 4.330733 3.218476 4.605170 4.007333
[5,] 4.382027 3.020425  3.02042489  4.39444915 4.330733 3.238286 4.808111 4.025352
[6,] 4.382027 3.258097  3.02042489  4.39444915 4.330733 3.433987 4.808111 4.025352
        [,81]    [,82]    [,83]    [,84]    [,85]   [,86]     [,87]    [,88]
[1,] 4.317488 0.000000 3.218476 2.301585 3.400864 4.59512 0.0000000 3.912023
[2,] 4.317488 3.496204 3.218476 2.301585 3.806662 4.59512 0.2231436 3.912023
[3,] 4.317488 4.007333 3.218476 2.301585 3.806662 4.59512 1.0116009 3.912023
[4,] 4.317488 4.366532 3.218476 2.301585 3.806662 4.59512 2.3513753 3.912023
[5,] 4.317488 4.366532 3.218476 2.301585 3.806662 4.59512 2.3513753 3.931826
[6,] 4.317488 4.366532 3.218476 2.350422 3.806662 4.59512 3.0209126 3.931826
        [,89]    [,90]    [,91]    [,92]     [,93]    [,94]    [,95]    [,96]
[1,] 3.688879 3.912023 4.007333 4.007333 -4.605170 2.302585 1.383791 1.609438
[2,] 3.688879 3.912023 4.007333 4.007333  3.583519 2.302585 1.383791 1.609438
[3,] 3.688879 3.912023 4.094345 4.007333  3.583519 2.302585 1.383791 1.609438
[4,] 3.688879 3.912023 4.110874 4.007333  3.583519 2.302585 1.656321 1.609438
[5,] 3.688879 3.912023 4.127134 4.007333  3.583519 2.302585 1.656321 1.609438
[6,] 4.394449 3.912023 4.454347 4.007333  3.583519 2.302585 1.656321 1.609438
        [,97]      [,98]    [,99]   [,100]   [,101]   [,102]   [,103]    [,104]
[1,] 1.871802 -4.6051702 1.383791 2.301585 2.301585 1.790091 1.609438 -4.605170
[2,] 1.871802  0.8109302 1.383791 2.301585 2.301585 1.790091 1.609438  1.818077
[3,] 1.871802  0.8109302 1.383791 2.301585 2.301585 1.790091 1.609438  1.818077
[4,] 1.871802  0.8109302 1.383791 2.301585 2.301585 1.790091 1.609438  1.818077
[5,] 1.871802  1.7047481 1.383791 2.301585 2.301585 1.790091 1.609438  1.818077
[6,] 1.871802  1.7047481 1.383791 2.301585 2.301585 1.790091 1.609438  1.818077
       [,105]      [,106]    [,107]    [,108]    [,109]      [,110]  [,111]   [,112]
[1,] 1.790091 -0.01005034 -4.605170 -4.605170 -4.605170 -0.01005034 1.94591 1.504077
[2,] 1.790091  1.44691898  1.105257  1.105257  1.105257  0.81536481 1.94591 1.504077
[3,] 1.790091  1.44691898  1.105257  1.105257  1.105257  1.44926916 1.94591 1.504077
[4,] 1.790091  1.44691898  1.105257  1.105257  1.105257  1.44926916 1.94591 1.504077
[5,] 1.790091  1.44691898  1.105257  1.105257  1.105257  1.44926916 1.94591 1.504077
[6,] 1.790091  1.71379793  1.609438  1.105257  1.105257  1.44926916 1.94591 1.504077
       [,113]   [,114]   [,115]  [,116]      [,117]   [,118]      [,119]    [,120]
[1,] 1.938742 1.609438 2.196113 1.94591 -0.01005034 1.891605 -0.01005034 0.9162907
[2,] 1.938742 1.609438 2.196113 1.94591 -0.01005034 1.891605 -0.01005034 0.9162907
[3,] 1.938742 1.609438 2.196113 1.94591 -0.01005034 1.891605 -0.01005034 0.9162907
[4,] 1.938742 1.609438 2.196113 1.94591  0.03922071 1.891605 -0.01005034 0.9162907
[5,] 1.938742 1.609438 2.196113 1.94591  0.55961579 1.891605 -0.01005034 0.9162907
[6,] 1.938742 1.609438 2.196113 1.94591  1.60943791 1.891605  1.17865500 0.9162907
       [,121]   [,122]   [,123]     [,124]      [,125]   [,126]      [,127]
[1,] 1.871802 1.609438 2.079442 -0.6931472 -0.01005034 2.302585 -0.01005034
[2,] 1.871802 1.609438 2.079442 -0.6931472 -0.01005034 2.302585 -0.01005034
[3,] 1.871802 1.609438 2.079442  1.4469190  0.55388511 2.302585  1.01160091
[4,] 1.871802 1.609438 2.079442  1.6094379  0.68813464 2.302585  1.01160091
[5,] 1.871802 1.609438 2.079442  1.6094379  1.55814462 2.302585  1.01160091
[6,] 1.871802 1.609438 2.079442  1.6094379  1.55814462 2.302585  1.09861229
          [,128]    [,129]   [,130]    [,131]      [,132]   [,133]   [,134]   [,135]
[1,] -0.01005034 0.6881346 2.301585 0.6881346 -0.01005034 2.301585 1.386294 2.079442
[2,]  2.07819076 0.6881346 2.301585 0.6881346 -0.01005034 2.301585 1.386294 2.079442
[3,]  2.07819076 0.6881346 2.301585 0.6881346 -0.01005034 2.301585 1.386294 2.079442
[4,]  2.07819076 0.6881346 2.301585 0.6881346 -0.01005034 2.301585 1.386294 2.079442
[5,]  2.07819076 0.9122827 2.301585 0.6881346 -0.01005034 2.301585 1.386294 2.079442
[6,]  2.40694511 0.9122827 2.301585 0.6881346  0.81093022 2.301585 1.386294 2.079442
        [,136]   [,137]      [,138]   [,139]   [,140]   [,141]      [,142]   [,143]
[1,] 0.9162907 2.191654 -0.05129329 1.790091 1.871802 2.301585 -0.01005034 1.383791
[2,] 0.9162907 2.191654 -0.05129329 1.790091 1.871802 2.301585 -0.01005034 1.383791
[3,] 0.9162907 2.191654 -0.05129329 1.790091 1.871802 2.301585 -0.01005034 1.383791
[4,] 0.9162907 2.191654 -0.05129329 1.790091 1.871802 2.301585  0.25464222 1.383791
[5,] 0.9162907 2.191654 -0.05129329 1.790091 1.871802 2.301585  0.25464222 1.383791
[6,] 0.9162907 2.191654 -0.05129329 1.790091 1.871802 2.301585  1.17865500 1.383791
       [,144]   [,145]     [,146]   [,147]      [,148]   [,149]      [,150]   [,151]
[1,] 1.607436 2.301585 -4.6051702 1.098612 -0.01005034 2.301585 -0.01005034 1.446919
[2,] 1.607436 2.301585 -4.6051702 1.098612 -0.01005034 2.301585 -0.01005034 1.446919
[3,] 1.607436 2.301585  0.2231436 1.098612 -0.01005034 2.301585 -0.01005034 1.446919
[4,] 1.607436 2.301585  0.2231436 1.098612 -0.01005034 2.301585 -0.01005034 1.446919
[5,] 1.607436 2.301585  1.7047481 1.098612 -0.01005034 2.301585 -0.01005034 1.446919
[6,] 1.607436 2.301585  1.7047481 1.098612 -0.01005034 2.301585 -0.01005034 1.446919
       [,152]      [,153]    [,154]   [,155]   [,156]   [,157]    [,158]     [,159]
[1,] 1.944481 -0.01005034 -1.386294 1.095273 1.252763 1.871802 -4.605170 -4.6051702
[2,] 1.944481 -0.01005034 -1.386294 1.095273 1.252763 1.871802  1.704748  0.2231436
[3,] 1.944481 -0.01005034 -1.386294 1.095273 1.252763 1.871802  1.704748  0.8109302
[4,] 1.944481 -0.01005034 -1.386294 1.095273 1.252763 1.871802  1.704748  0.8109302
[5,] 1.944481  1.01160091  1.011601 1.095273 1.252763 1.871802  1.704748  0.8109302
[6,] 1.944481  2.35137526  1.011601 1.095273 1.252763 1.871802  1.704748  1.7047481
      [,160]    [,161]      [,162]   [,163]  [,164]      [,165]   [,166]      [,167]
[1,] 1.94591 -4.605170 -0.01005034 1.790091 1.94591 -0.01005034 1.790091 -0.01005034
[2,] 1.94591 -4.605170 -0.01005034 1.790091 1.94591 -0.01005034 1.790091  0.81536481
[3,] 1.94591  1.558145 -0.01005034 1.790091 1.94591 -0.01005034 1.790091  1.17865500
[4,] 1.94591  1.558145 -0.01005034 1.790091 1.94591 -0.01005034 1.790091  1.17865500
[5,] 1.94591  1.558145 -0.01005034 1.790091 1.94591 -0.01005034 1.790091  1.17865500
[6,] 1.94591  1.558145 -0.01005034 1.790091 1.94591 -0.01005034 1.790091  2.52812577
          [,168]   [,169]      [,170]   [,171]   [,172]   [,173]   [,174]   [,175]
[1,] -0.01005034 1.609438 -0.01005034 1.609438 1.599388 1.791759 1.607436 1.098612
[2,] -0.01005034 1.609438  0.25464222 1.609438 1.599388 1.791759 1.607436 1.178655
[3,] -0.01005034 1.609438  2.35137526 1.609438 1.599388 1.791759 1.607436 1.178655
[4,] -0.01005034 1.609438  2.35137526 1.609438 1.599388 1.791759 1.607436 1.178655
[5,] -0.01005034 1.609438  2.35137526 1.609438 1.599388 1.791759 1.607436 1.609438
[6,]  0.03922071 1.609438  2.35137526 1.609438 1.974081 1.791759 1.607436 2.351375
          [,176]   [,177]    [,178]  [,179]   [,180]   [,181]      [,182]   [,183]
[1,] -0.01005034 1.609438 0.6881346 1.94591 2.396986 2.079442 -0.01005034 1.386294
[2,]  0.03922071 1.609438 0.6881346 1.94591 2.396986 2.079442 -0.01005034 1.386294
[3,]  0.03922071 1.609438 0.6881346 1.94591 2.396986 2.079442 -0.01005034 1.386294
[4,]  0.03922071 1.609438 0.6881346 1.94591 2.396986 2.079442 -0.01005034 1.386294
[5,]  1.44691898 1.609438 0.8109302 1.94591 2.396986 2.079442 -0.01005034 1.386294
[6,]  1.87180218 1.609438 0.8109302 1.94591 2.396986 2.079442  0.81093022 1.386294
       [,184]   [,185]   [,186]   [,187]    [,188]      [,189]      [,190]
[1,] 1.938742 1.607436 0.000000 1.098612 -4.605170 -0.01005034 -0.01005034
[2,] 1.938742 1.607436 0.000000 1.098612  1.704748 -0.01005034 -0.01005034
[3,] 1.938742 1.607436 0.000000 1.098612  1.704748  0.22314355 -0.01005034
[4,] 1.938742 1.607436 0.000000 1.098612  1.791759  2.07944154 -0.01005034
[5,] 1.938742 1.607436 1.321756 1.098612  1.968510  2.25129180  1.70837786
[6,] 1.938742 1.607436 1.945910 1.098612  1.968510  2.39789527  1.70837786
> ?plot.pca
No documentation for ‘plot.pca’ in specified packages and libraries:
you could try ‘??plot.pca’
> ?plot.pca.fd
> 
> 	plot.pca.fd(PCA,harm=1,pointplot=FALSE)
> 	plot.pca.fd(PCA,harm=2,pointplot=FALSE)
> 
> 	plot.pca.fd(PCA,harm=1,pointplot=FALSE)
> 	plot.pca.fd(PCA,harm=2,pointplot=FALSE)
> 
> 	par(mfrow = c(4, 1))
> 	plot.pca.fd(PCA,harm=1,pointplot=FALSE)
> 	plot.pca.fd(PCA,harm=2,pointplot=FALSE)
> 	plot.pca.fd(PCA,harm=3,pointplot=FALSE)
> 	plot.pca.fd(PCA,harm=4,pointplot=FALSE)
> 	cumsum(PCA$varprop)
[1] 0.5145168 0.9180905 0.9721093 0.9840754 0.9901157
> ?pca.fd
> dim(PCA$scores)
[1] 190   5
> xlist <- NULL
> ylist <- NULL
> for(i in 1:N.auc){
+ 	xlist[[i]] <- EBAY[[i]]$Time
+ 	ylist[[i]] <- log(EBAY[[i]]$Price)
+ }
> 
> 
> pca.spline <- function(xlist, ylist, ncomp = 3){
+ 	knots <- c(0,1,2,3,4,5,6,6.25,6.5,6.75,6.8125,6.875,6.9375,7)
+ 	numk<-length(knots)
+ 	numplot <- length(plotpoints)
+ 	norder <- 5
+ 	nbasis <- numk + 2
+ 	lambda <- 0.1
+ 	numauct<-N.auc
+ 	wbasis <- create.bspline.basis(rangeval=c(0,7),nbasis=nbasis, norder=5)
+ 	Wfd <- list(0); length(Wfd) <- numauct
+ 	bids <- array(0,length(knots)*length(xlist), dim = c(length(knots),length(xlist)))
+ 	for(i in 1:length(xlist)){
+ 		for(j in 1:length(knots)){
+ 		  bids[j, i]=StepCheck(xlist[[i]],ylist[[i]],knots[j])	
+ 		} 
+ 	}
+ 	
+ 	
+ 	Wfd <- Data2fd(knots,bids,basisobj=wbasis)
+ 	PCA <- pca.fd(Wfd, nharm = ncomp)
+     
+     # cumsum(PCA$varprop)
+ 	# par(mfrow = c(4, 1))
+ 	# plot.pca.fd(PCA,harm=1,pointplot=FALSE)
+ 	# plot.pca.fd(PCA,harm=2,pointplot=FALSE)
+ 	# plot.pca.fd(PCA,harm=3,pointplot=FALSE)
+ 	# plot.pca.fd(PCA,harm=4,pointplot=FALSE)
+ 
+ 	return(PCA)
+ 	
+ }
> pca.ebay <- pca.spline(xlist, ylist, ncomp = 3)
> dim(pca.ebay)
NULL
> dim(pca.ebay$scores)
[1] 190   3
> dim(Wfd)
NULL
> summary(Wfd)
Functional data object:

 Dimensions of the data:
    time 
     reps 
     values 

Basis object:

  Type:   bspline 

  Range:  0  to  7 

  Number of basis functions:  16 

  Order of spline:  5 
[1] "  Interior knots"
 [1] 0.5833333 1.1666667 1.7500000 2.3333333 2.9166667 3.5000000 4.0833333 4.6666667
 [9] 5.2500000 5.8333333 6.4166667

Coefficient matrix:

              [,1]     [,2]     [,3]          [,4]       [,5]      [,6]       [,7]
bspl5.1   3.911823 2.301585 3.912023  1.524790e-07  3.9118232  4.317488  3.1986733
bspl5.2   4.228227 2.392244 3.935896  4.275252e-01  4.4914354  4.606385  3.8332894
bspl5.3   4.593161 2.503089 3.963491  9.178130e-01  5.1613654  4.940301  4.5967873
bspl5.4   4.312370 2.451222 3.942637  5.220683e-01  4.6545786  4.687765  4.1804212
bspl5.5   2.884372 2.103692 3.834187 -1.372058e+00  2.0232014  3.375999  1.5809363
bspl5.6   3.761077 2.328567 3.889361  3.193468e-01  3.3553986  4.040943  2.9023470
bspl5.7   6.771818 3.313336 4.101290  5.608878e+00  8.5282401  6.615742  8.1898629
bspl5.8   2.961797 3.325797 3.839275  1.813968e+00  2.0846530  3.414495  2.3194194
bspl5.9  -2.383743 2.754921 3.433700 -5.143380e+00 -7.3646573 -1.345637 -6.8433229
bspl5.10 14.723210 5.114627 4.601961  1.565849e+01 19.8573808 12.368091 19.2068522
bspl5.11  1.971547 3.372777 3.516038 -1.558475e-01  0.3778963  1.770171 -0.5202687
bspl5.12  5.801346 4.070958 4.444142  3.935324e+00  1.6723216  5.125009  5.2477911
bspl5.13  5.011221 4.453418 3.534502  3.195236e+00  5.1069457  3.816833  3.4671280
bspl5.14  5.280732 4.499480 4.202410  3.567790e+00  4.6744512  4.671496  4.4801326
bspl5.15  5.883656 4.268213 4.088014  3.705728e+00  4.3090750  4.060657  4.0942805
bspl5.16  5.711381 4.918305 5.087839  4.050761e+00  5.0418245  4.564057  4.7654086
              [,8]      [,9]      [,10]      [,11]     [,12]     [,13]    [,14]
bspl5.1   2.301585  4.382027  1.6094379  4.3820267  2.301585  4.317488 3.912023
bspl5.2   2.085010  4.062727  1.5215287  4.6333887  2.444150  4.830471 3.893502
bspl5.3   1.920006  3.693671  1.4721355  4.9239275  2.606817  5.423393 3.872094
bspl5.4   2.498298  3.972788  1.7901508  4.7042077  2.470622  4.974973 3.888252
bspl5.5   4.412218  5.422584  2.6700294  3.5629057  1.847284  2.645724 3.972455
bspl5.6   4.700689  4.687731  2.1176696  4.1394269  2.576890  3.826438 3.929303
bspl5.7   2.935928  1.841721  0.7184147  6.3882764  4.388027  8.398406 3.766218
bspl5.8   5.102522  5.380601  4.6820969  3.6487062  2.029299  2.714078 3.966668
bspl5.9   8.591636 10.638059  9.3100884 -0.4476218 -1.316329 -5.738298 4.290884
bspl5.10 -1.303141 -4.508514 -3.7286054 11.3262876  8.457081 18.612624 3.329743
bspl5.11  6.751385  7.142851  6.0708097  2.3926448  1.994939 -0.205682 4.845134
bspl5.12  2.887955  3.626576  3.9759707  4.6982739  4.748581  5.751371 3.721849
bspl5.13  5.377773  4.827942  4.6219563  4.1908586  3.855107  3.428495 4.657100
bspl5.14  4.905024  4.099069  4.2875006  4.8368987  4.422818  4.946086 4.795035
bspl5.15  4.887419  4.485704  4.3182513  4.1790612  4.005015  3.861443 4.700789
bspl5.16  5.739046  5.169182  4.9434166  5.0105416  4.917339  4.755312 4.725656
                [,15]    [,16]     [,17]    [,18]      [,19]     [,20]      [,21]
bspl5.1   -0.01005001 2.564180  3.912023 2.301585  3.6888796  3.218876  3.4008641
bspl5.2    1.73973058 2.613881  4.347852 2.267220  4.2631817  3.908987  3.7185842
bspl5.3    4.18095028 2.671326  4.851593 2.233884  4.9262503  4.763623  4.0858160
bspl5.4    4.58896176 2.627860  4.470543 2.293313  4.4202091  4.423986  3.8080942
bspl5.5    0.52354971 2.402257  2.491860 2.506830  1.8209169  1.818464  2.3654181
bspl5.6    2.27437860 2.516298  3.494109 2.362438  3.2801998  3.095333  3.0968613
bspl5.7   10.57199666 2.960604  7.381629 2.081631  8.5868300  8.260325  5.9279603
bspl5.8    0.67823737 2.407342  2.535376 3.478296  1.9481944  1.932390  2.4091419
bspl5.9  -14.41934456 1.595395 -4.538373 4.921474 -7.8230128 -7.506306 -2.8349150
bspl5.10  28.77380195 3.899046 16.156313 1.025811 20.3632556 19.695347 12.2714704
bspl5.11  -4.19913610 2.857289  1.300401 3.158425 -0.8439586 -0.828079  0.4868081
bspl5.12   4.96971541 3.218218  3.056116 5.256903  4.0287369  4.077321  4.7046807
bspl5.13   2.77737983 3.046340  5.038197 1.849895  3.9363573  3.728372  3.0080792
bspl5.14   3.70296984 3.162538  4.675616 4.380324  3.4313385  3.464022  4.4704219
bspl5.15   4.58063600 3.072278  4.795712 4.636153  5.0483855  4.755585  4.5398049
bspl5.16   4.54166928 3.319845  5.012187 4.560643  4.5776004  4.360664  4.8059666
            [,22]     [,23]    [,24]        [,25]    [,26]        [,27]
bspl5.1  4.442651  4.317488 5.010635  -0.01005055 1.098612  -0.01005002
bspl5.2  4.324442  4.722178 5.003976  -0.51927622 1.668636   0.89249523
bspl5.3  4.187812  5.189932 4.996279  -0.94604749 2.621509   1.95475501
bspl5.4  4.291136  4.836177 5.002100   0.24044680 3.482635   1.24483729
bspl5.5  4.827901  2.998636 5.032337   4.23333359 3.639841  -2.45358967
bspl5.6  4.555713  3.930123 5.017015   3.81765239 3.538435   1.51297568
bspl5.7  3.502583  7.536833 4.957641  -1.46132983 3.827768  11.81076645
bspl5.8  4.811221  3.052778 5.031496   4.73181079 4.279404  -1.45701194
bspl5.9  6.764899 -3.616659 5.140925  14.34725828 4.577862 -20.37595534
bspl5.10 1.136553 15.597669 4.825661 -12.99988956 4.767641  34.60390977
bspl5.11 5.574931  0.728111 5.064830   7.02180753 4.599240  -6.33095433
bspl5.12 3.886238  5.501573 5.003383   4.20492017 4.609631   1.62110884
bspl5.13 4.823576  3.575533 5.013449   1.48828488 4.644817   3.10227561
bspl5.14 4.123139  4.852168 5.010804   6.02909937 4.620324   1.90617851
bspl5.15 4.821621  3.904202 5.005062   4.27061329 4.612534   4.61527584
bspl5.16 4.885416  4.777056 5.029473   5.24186519 5.386405   4.28937483
                 [,28]    [,29]    [,30]      [,31]     [,32]      [,33]
bspl5.1  -8.219951e-08 4.382027 4.248352 -4.6051701  1.098612  3.9118231
bspl5.2   7.167172e-02 4.406701 4.394014 -3.0156796  1.445747  4.3453495
bspl5.3   3.699423e-01 4.435221 4.562375 -0.2953005  2.001094  4.8464324
bspl5.4   1.300594e+00 4.413652 4.435038  2.3949893  2.405373  4.4674370
bspl5.5   3.036365e+00 4.301615 3.773672  3.5279101  2.388789  2.4990718
bspl5.6   2.559263e+00 4.358407 4.108811  3.9019771  3.533328  3.4964216
bspl5.7   6.506128e-01 4.578318 5.407500  4.5266599  5.463849  7.3620472
bspl5.8   6.037617e+00 4.304903 3.792011  3.6588198  2.914501  2.5527401
bspl5.9   1.217650e+01 3.898344 1.398811  2.4664136 -0.492446 -4.5641670
bspl5.10 -6.913228e+00 5.069621 8.293652  5.9274032 10.278437 15.9398868
bspl5.11  7.963998e+00 4.164463 3.067594  4.0182479  1.952840  0.4853864
bspl5.12  3.274673e+00 4.450996 4.395240  2.1840829  4.479704  4.1280668
bspl5.13  5.517396e+00 4.339266 4.202295  4.8119632  4.243755  3.9708910
bspl5.14  3.943364e+00 4.412262 4.212279  4.3646533  4.960488  4.1913802
bspl5.15  5.288705e+00 4.360091 4.535622  4.2361949  4.394195  4.2975929
bspl5.16  5.347347e+00 4.403086 4.492923  4.7554850  5.360597  4.8381415
                 [,34]      [,35]     [,36]     [,37]      [,38]         [,39]
bspl5.1   3.607970e-07 -4.6051701 4.0941779 -4.605170 -4.6051702  1.020645e-07
bspl5.2   1.148638e+00 -3.1441797 4.2641339 -2.364173 -3.0941249  9.708542e-01
bspl5.3   2.476262e+00 -0.6520966 4.4605745  1.316839 -0.4639634  2.478415e+00
bspl5.4   1.471954e+00  1.7840451 4.3120048  4.402245  2.2973656  3.411645e+00
bspl5.5  -3.742782e+00  2.6977959 3.5403157  4.396160  3.7813711  2.607234e+00
bspl5.6  -1.102186e+00  2.6410554 3.9314355  4.196325  3.8888773  3.042767e+00
bspl5.7   9.146830e+00  2.7836237 5.4464054  5.926550  3.7183876  5.376883e+00
bspl5.8  -3.627561e+00  2.6450046 3.5624386  4.931480  3.9954547  2.881638e+00
bspl5.9  -2.228955e+01  2.3084370 0.7654348  2.461760  4.3496619 -1.149648e+00
bspl5.10  3.202114e+01  3.1881345 8.8234569  9.006807  3.3222037  1.021552e+01
bspl5.11 -5.574946e+00  2.5181905 2.6477385  3.965316  4.3956122  1.680920e+00
bspl5.12 -1.254196e+00  2.9665477 4.4390855  5.569520  3.6418516  3.738281e+00
bspl5.13  3.643212e+00  4.3354433 3.8568662  4.936329  4.6239026  3.569384e+00
bspl5.14  1.470020e+00  4.1632695 4.3607301  5.350727  4.4160303  3.479285e+00
bspl5.15  4.203591e+00  4.1639696 3.8963862  5.054296  4.5523564  3.993517e+00
bspl5.16  3.405298e+00  4.8738224 4.8021113  5.298693  5.1725928  3.830708e+00
            [,40]      [,41]    [,42]       [,43]      [,44]       [,45]
bspl5.1  1.098612  0.6931473 4.595120   2.3025854  2.3025852 -0.01005019
bspl5.2  1.565084  1.2188701 4.642551   3.1625109  2.8064338  1.14662490
bspl5.3  2.261891  1.8265125 4.697372   4.1564404  3.4807812  2.89726993
bspl5.4  2.580462  1.3668235 4.655892   3.4047219  3.4659339  3.79840538
bspl5.5  1.984543 -1.0198321 4.440590  -0.4997864  2.0303048  2.43051415
bspl5.6  2.714099  0.1881843 4.549492   1.4791449  2.6894965  3.30917983
bspl5.7  5.118922  4.8812810 4.973214   9.1444899  5.5791718  6.95569103
bspl5.8  3.972097 -0.9665905 4.443975  -0.3879986  2.0941868  2.43474209
bspl5.9  1.244020 -9.5217661 3.682596 -14.5390162 -3.1894888 -4.23416569
bspl5.10 8.262782 15.1195282 5.905217  26.2296605 11.9384043 15.55461905
bspl5.11 4.017085 -2.1858961 4.430070  -5.0068150  0.6083599  0.63325398
bspl5.12 1.691535 -1.7434221 4.119783   4.0219206  4.6123242  4.10456421
bspl5.13 5.974526  2.9664243 4.983274   1.2829791  4.1959546  4.20660413
bspl5.14 4.318366  2.0886720 4.748600   3.0521449  4.4064386  4.07618092
bspl5.15 5.361008  3.3387031 4.791715   2.1194190  4.5819413  4.72916914
bspl5.16 5.196815  3.4883446 4.808600   3.6385376  4.8607262  4.78334795
                 [,46]      [,47]    [,48]    [,49]     [,50]     [,51]       [,52]
bspl5.1   3.891695e-07  3.9120231 5.164786 4.094345  4.094344  4.094178 -0.01005027
bspl5.2   1.246651e+00  4.1454355 5.179031 4.185210  3.772376  3.900231  0.95367840
bspl5.3   2.688009e+00  4.4150178 5.195495 4.290235  3.400234  3.676061  2.52631524
bspl5.4   1.599402e+00  4.2098797 5.183043 4.210809  3.681670  3.845605  3.80489768
bspl5.5  -4.061534e+00  3.1523148 5.118364 3.798215  5.143635  4.726218  3.71644023
bspl5.6  -1.310619e+00  3.7285062 5.151150 4.007413  4.402414  4.279918  3.78387495
bspl5.7   1.030627e+01  5.8601479 5.278105 4.817035  1.533450  2.550987  4.76716662
bspl5.8  -4.536727e-01  3.2008855 5.120262 3.810782  5.099407  4.701226  3.61698366
bspl5.9  -1.871589e+01 -0.7521738 4.885556 2.310707 10.412952  7.891414  1.78993923
bspl5.10  3.212065e+01 10.6474004 5.561734 6.632880 -4.894978 -1.299481  6.93625759
bspl5.11 -5.686915e+00  1.6688921 5.039186 3.239183  7.061740  5.721816  3.57314542
bspl5.12  3.427391e+00  5.0359894 5.204602 4.478443  2.871772  3.759193  3.79819622
bspl5.13  2.679101e+00  3.9126079 5.140100 4.143415  4.900503  4.268191  5.10745621
bspl5.14  2.274823e+00  4.6013192 5.182241 4.331700  3.461891  4.019215  4.71238574
bspl5.15  4.572334e+00  4.3014821 5.152122 4.253265  4.712635  4.002243  4.88252499
bspl5.16  3.844980e+00  4.7315793 5.176943 4.616296  5.129999  4.845098  4.94400307
                [,53]      [,54]      [,55]     [,56]     [,57]       [,58]
bspl5.1   4.248495193  3.9118232  3.9120231 2.3025851  4.488636  2.99573233
bspl5.2   4.092111226  4.4566381  4.2624510 2.4015642  4.260597  3.26312914
bspl5.3   3.911359926  5.0863532  4.6674873 2.5159664  3.997025  3.62690711
bspl5.4   4.048122886  4.6101078  4.3611672 2.4294118  4.196428  3.64510501
bspl5.5   4.757996514  2.1363192  2.7700013 1.9800978  5.231648  2.96753703
bspl5.6   4.398979796  3.3903016  3.5766249 2.2073571  4.707754  3.55244377
bspl5.7   3.001730895  8.2459770  6.6996129 3.0916296  2.671695  5.33530540
bspl5.8   4.745004421  2.2089154  2.8171158 1.9903193  5.209521  3.17688651
bspl5.9   7.271453760 -6.7679632 -2.9594566 0.3749721  8.913974 -0.03942452
bspl5.10 -0.007917244 19.0940265 13.6837491 4.9858517 -1.759239  9.41287187
bspl5.11  4.864399394 -0.8920271  0.7617582 2.4220765  5.696548  1.69953851
bspl5.12  5.726052864  5.4346836  5.0319285 2.9444892  5.866007  5.39868553
bspl5.13  3.120210505  2.9676648  3.8365479 3.1355393  3.398893  4.16427916
bspl5.14  5.192130212  4.5794277  4.5037010 3.4363811  5.450358  4.95592464
bspl5.15  4.724816022  3.4274785  4.2544394 3.8563044  4.686434  4.49755724
bspl5.16  5.517019102  4.3768150  4.5866881 3.8789004  4.866629  4.85743827
                 [,59]      [,60]     [,61]    [,62]      [,63]     [,64]
bspl5.1   1.039082e-07 -0.0100503 0.6881347 1.609438 -4.6051702 2.3015846
bspl5.2   9.000275e-01  1.0279706 1.0478426 1.611769 -3.8567894 2.3889204
bspl5.3   2.309700e+00  2.7557461 1.5781025 1.614510 -2.3996124 2.4898630
bspl5.4   3.227681e+00  4.2914418 1.7896417 1.612546 -0.3359827 2.4134491
bspl5.5   2.671032e+00  4.4701184 1.2932246 1.602089  2.2971430 2.0171242
bspl5.6   3.702075e+00  4.0003121 2.1320544 1.593645  5.6985260 2.2171269
bspl5.7   6.534866e+00  4.0007385 4.6106215 1.673008  8.2816217 2.9992899
bspl5.8   3.156597e+00  4.1894149 4.0038222 1.975059  3.9725407 2.0188707
bspl5.9  -1.811217e+00  4.1614393 1.6240158 2.271877 -0.9856319 0.6457899
bspl5.10  1.298334e+01  4.0254202 7.3674305 1.537847 14.3227121 4.7532071
bspl5.11  1.733114e+00  4.1424311 3.0250669 4.289669  2.4913249 4.2321963
bspl5.12  4.652964e+00  4.0857489 4.5735212 2.853135  6.1299235 4.3020874
bspl5.13  4.425571e+00  4.3771144 4.3000845 4.508610  4.8574269 4.3682238
bspl5.14  4.301749e+00  4.1286784 4.3945484 4.048384  5.6575611 4.2682220
bspl5.15  4.990730e+00  4.3869740 4.5043176 4.007980  5.1244025 4.4914670
bspl5.16  4.827103e+00  4.7269387 4.6508136 4.940247  5.9365451 4.6052055
               [,65]    [,66]      [,67]     [,68]     [,69]     [,70]       [,71]
bspl5.1  -0.01005033 4.381902  4.8283137 3.8918203  3.688629  4.442651 -0.01005031
bspl5.2   0.46221719 4.524079  4.6192878 4.0429831  3.462346  4.156323  1.12738719
bspl5.3   1.30500776 4.688413  4.3776889 4.2177027  3.200802  3.825376  3.05950021
bspl5.4   2.26133144 4.564136  4.5604095 4.0855815  3.398660  4.075665  4.92196956
bspl5.5   2.98404201 3.918544  5.5095050 3.3991563  4.425943  5.375773  5.47655306
bspl5.6   3.50227865 4.245878  5.0284342 3.7473339  3.905940  4.716691  4.72848489
bspl5.7   3.84908866 5.512706  3.1653474 5.0936336  1.886085  2.164990  4.15024303
bspl5.8   3.24283428 3.938242  5.4819668 3.4213709  4.402781  5.337829  5.86574271
bspl5.9   2.58056242 1.590765  8.9240567 0.9174998  8.086451 10.053021  7.49377380
bspl5.10  4.61883765 8.353659 -0.9924909 8.1321615 -2.526683 -3.546988  2.18307011
bspl5.11  3.70715305 3.055165  6.6409324 2.3358136  5.003208  7.203431  5.50152640
bspl5.12  3.07298808 4.962840  4.3205177 4.8619225  4.763673  4.084503  7.07959983
bspl5.13  4.43417082 3.996540  5.1307100 3.9325277  2.861357  5.020958  3.94709879
bspl5.14  3.21931861 4.683122  4.6322429 4.5601158  4.491463  4.495487  6.53596314
bspl5.15  4.76183458 4.137333  4.9165425 4.0369071  3.752127  4.676024  5.55834924
bspl5.16  4.53826416 4.797418  4.9882554 4.7618837  4.510363  5.324948  5.95300122
              [,72]     [,73]    [,74]       [,75]        [,76]    [,77]      [,78]
bspl5.1   4.4886365 4.3820267 2.995232 -0.01005019  -0.01005007 2.301585  3.2184757
bspl5.2   5.0576996 4.5613900 3.061331  0.94914245   1.61927590 2.547831  2.9354117
bspl5.3   5.7154411 4.7687039 3.137599  2.35805303   3.94771843 2.924799  2.6082381
bspl5.4   5.2179914 4.6119127 3.079096  2.90667017   4.58329725 3.136397  2.8557083
bspl5.5   2.6341287 3.7975027 2.780474  1.38160130   1.31297634 2.871216  4.1408817
bspl5.6   3.9437996 4.2103026 2.957388  2.38489444   2.67285645 2.874214  3.4898822
bspl5.7   9.0160457 5.8090119 3.580409  6.28655092   9.47219310 3.733618  0.9651057
bspl5.8   2.7089182 3.8211092 2.798947  1.75343272   1.47498891 4.753283  4.1066225
bspl5.9  -6.6608430 0.8676338 1.649946 -5.07081693 -10.54344779 4.900624  8.7503464
bspl5.10 20.3331526 9.3765017 4.954478 14.41827184  25.69958470 3.462908 -4.5808595
bspl5.11 -0.4285114 2.8289440 2.655161  1.08868666  -1.81408781 4.523086  5.4664150
bspl5.12  5.8268364 4.8119653 3.568451 -0.19399766   5.14688724 4.458385  3.9092799
bspl5.13  3.6996124 4.1268083 4.841159  5.18477618   3.88155098 4.220358  4.8011249
bspl5.14  4.9890977 4.5467012 4.622847  4.36562863   5.38558189 4.448131  4.2271012
bspl5.15  4.2975890 4.3087295 4.440537  4.31341214   4.06199889 4.146822  4.5357581
bspl5.16  5.1130692 4.5408699 5.289311  4.72565431   5.49077090 4.751413  4.7698021
            [,79]     [,80]     [,81]         [,82]      [,83]      [,84]      [,85]
bspl5.1  4.605170  2.301585  4.317488  1.368308e-07  3.2184759  2.3015848  3.4008642
bspl5.2  4.767069  2.770710  4.600636  1.171700e+00  3.8216561  2.8107414  3.9915545
bspl5.3  4.954194  3.312995  4.927908  2.971353e+00  4.5188269  3.3992361  4.7262827
bspl5.4  4.812623  2.902378  4.680399  4.005466e+00  3.9914443  2.9540260  4.4503981
bspl5.5  4.077654  0.774707  3.394728  2.865626e+00  1.2530347  0.6425976  2.2504058
bspl5.6  4.450021  1.820180  4.046480  3.623912e+00  2.6395710  1.8124555  3.3267257
bspl5.7  5.893735  6.419215  6.569893  6.974251e+00  8.0221092  6.3580128  7.6867474
bspl5.8  4.083484  3.284258  3.432781  3.397733e+00  1.3183053  0.6932643  2.2733415
bspl5.9  1.543512 -2.990489 -1.234675 -2.334577e+00 -8.5234526 -7.5863528 -5.6850679
bspl5.10 9.443961 13.918155 12.212282  1.385697e+01 19.8319589 16.2641338 17.2216361
bspl5.11 4.070081  1.054643  1.785266  1.646800e+00 -0.6351732 -0.4450042  0.9340728
bspl5.12 3.380159  4.597951  5.195855  4.582434e+00  1.2260422 -0.4285077  1.5887906
bspl5.13 5.579543  3.942382  3.899826  4.225290e+00  5.0045231  3.8943495  4.9691365
bspl5.14 5.043639  4.504480  4.743362  4.850564e+00  3.6948066  3.0863769  4.4500475
bspl5.15 5.086056  4.193420  4.141610  4.413839e+00  4.8354546  2.9016395  4.1862614
bspl5.16 5.194343  4.749870  4.637058  4.913444e+00  4.5936746  3.3744384  4.7257062
              [,86]         [,87]     [,88]     [,89]    [,90]     [,91]     [,92]
bspl5.1   4.5951199  7.250855e-08  3.912023  3.688880 3.912023  4.007333 4.0073332
bspl5.2   4.8491846  2.223597e-01  4.267356  3.951526 4.032502  3.793522 4.1971782
bspl5.3   5.1428410  5.041110e-01  4.678061  4.255099 4.171757  3.545944 4.4166073
bspl5.4   4.9207525  4.203043e-01  4.367449  4.025454 4.066480  3.730413 4.2506570
bspl5.5   3.7671454 -2.783798e-01  2.754026  2.833066 3.519305  4.706253 3.3886429
bspl5.6   4.3519177  7.910893e-01  3.571915  3.436700 3.797193  4.299816 3.8256183
bspl5.7   6.6162751  3.604212e+00  6.738684  5.780905 4.868766  2.511324 5.5175571
bspl5.8   3.8009993  2.013562e+00  2.800255  2.862389 3.540310  4.741398 3.4140715
bspl5.9  -0.3852075 -1.427763e+00 -3.044611 -1.432552 1.523482  8.038282 0.2851652
bspl5.10 11.6750691  7.633586e+00 13.852895 10.895800 7.333629 -1.425385 9.2993990
bspl5.11  2.3549302  1.351829e+00  0.794913  2.670682 2.364146  5.788195 2.3204697
bspl5.12  5.3052787  4.022870e+00  4.902510  4.184683 5.464956  5.240424 4.5703619
bspl5.13  4.1548285  3.072748e+00  4.289296  4.665714 2.946363  3.803492 3.6579998
bspl5.14  4.9064454  3.692370e+00  4.429563  4.001779 4.694932  5.051608 4.2468270
bspl5.15  4.3692545  3.232099e+00  4.871637  5.302422 4.894751  4.564715 3.9331788
bspl5.16  4.8119606  3.665867e+00  4.814130  4.981024 4.795794  4.830853 4.4802218
                [,93]      [,94]        [,95]       [,96]     [,97]      [,98]
bspl5.1  -4.605170239  2.3025851  1.383791408   1.6094381 1.8718022 -4.6051701
bspl5.2  -2.956898943  2.2036678  1.947687952   2.3545081 1.9462231 -3.2315140
bspl5.3  -0.002586779  2.0893361  2.599505472   3.2156845 2.0322412 -0.9498562
bspl5.4   3.411309030  2.1758054  2.106629340   2.5643879 1.9671868  1.0603965
bspl5.5   5.647601477  2.6249438 -0.453569902  -0.8186792 1.6292711  1.2521627
bspl5.6   3.761611187  2.3972948  0.829365727   0.8962234 1.8005632  0.6600335
bspl5.7   0.064314554  1.5155972  5.918385153   7.5366759 2.4638408  0.7293866
bspl5.8   5.045823493  2.6119789  0.009310495  -0.7193992 1.6391877  0.8565333
bspl5.9  11.746032810  4.2404484 -8.949574184 -12.9958655 0.4129601  0.9621922
bspl5.10 -7.988388270 -0.4511268 16.657937562  22.3720905 3.9456674  2.9396882
bspl5.11  6.206189048  3.1538796 -1.966376574  -4.9601401 1.2156038  0.6199981
bspl5.12  5.118779913  2.0785830  0.241972770   3.6920490 2.0798226  3.6236254
bspl5.13  2.901185261  2.4329306  2.356533999   0.3182400 1.7428316  0.9730097
bspl5.14  4.840569252  2.2226033  2.368962957   2.5224309 1.9629959  2.9916700
bspl5.15  4.334552329  2.3235318  1.833164175   0.9470653 1.8056415  2.0404996
bspl5.16  4.523642748  2.4504021  2.496317501   2.2453448 1.9353194  2.5112180
              [,99]     [,100]     [,101]     [,102]    [,103]     [,104]
bspl5.1   1.3837913  2.3015846  2.3015847  1.7900915 1.6094379 -4.6051702
bspl5.2   1.6923689  2.4429414  2.4848435  2.0339849 1.5641107 -3.1385722
bspl5.3   2.0490355  2.6063262  2.6966602  2.3158851 1.5117197 -0.6204439
bspl5.4   1.7793589  2.4827604  2.5364660  2.1026912 1.5513326  1.9055952
bspl5.5   0.3780181  1.8409154  1.7043601  0.9952565 1.7571769  2.8711505
bspl5.6   1.0892272  2.1662715  2.1261609  1.5566697 1.6527053  1.7913713
bspl5.7   3.8358102  3.4261169  3.7594598  3.7301806 1.2492638  0.4398009
bspl5.8   0.4273142  1.8597511  1.7287792  1.0281950 1.7499208  2.4208799
bspl5.9  -4.7095024 -0.4693747 -1.2907647 -2.9932397 2.5045694  4.8234935
bspl5.10 10.0886593  6.2407335  7.4084077  8.5922840 0.3306088 -2.4374676
bspl5.11 -2.1329675  1.0551857  0.6857182 -0.4030671 2.1269353  2.4919258
bspl5.12  4.2432710  2.6967034  2.8138277  2.5789250 1.1868106  3.1443820
bspl5.13 -0.5919367  2.0566149  1.9839990  1.2851597 1.9181795  0.7861004
bspl5.14  2.8771419  2.4748002  2.5261461  2.1674721 1.3264985  2.7256779
bspl5.15  1.9933766  2.1759174  2.1386661  1.4649223 2.0017137  1.8353310
bspl5.16  2.4840486  2.4222306  2.4579935  2.2294072 2.4701280  2.4010969
              [,105]      [,106]      [,107]      [,108]      [,109]      [,110]
bspl5.1    1.7900917 -0.01005024  -4.6051703 -4.60517016 -4.60517010 -0.01005030
bspl5.2    2.5632743  0.63194395  -3.7674309 -3.25934822 -3.06006515  0.23169280
bspl5.3    3.4569437  1.56065301  -2.0674907 -0.97214690 -0.54252770  0.61356866
bspl5.4    2.7810560  1.86310680   0.5856159  1.23689039  1.49226411  0.87359528
bspl5.5   -0.7296045  0.67799228   3.5605584  1.90460794  1.25526288  0.79303783
bspl5.6    1.0497522  1.14314186   1.5270661  1.04160900  0.85028014  1.40366458
bspl5.7    7.9417046  3.60060412  -3.8259156  0.21294312  1.80022795  2.54538660
bspl5.8   -0.6287143  0.60174521   3.0933014  1.51265753  0.88427366  1.00139878
bspl5.9  -13.3547012 -3.85331920  12.9376712  2.93931743 -0.93689830 -1.15218698
bspl5.10  23.3085661  8.88770221 -15.7569464 -1.47205503  4.00789540  5.16886429
bspl5.11  -4.8204699  0.66358805   6.8138419  1.05706320 -0.13577967  0.01869175
bspl5.12   3.4316426 -0.73110706   0.6267845  3.09199648  2.24435301  2.47166643
bspl5.13   0.8552993  3.02243388   2.3051840 -0.09957099 -0.06800973  1.34072341
bspl5.14   2.3349026  2.14348411   1.3237333  2.36007875  3.06532136  2.15770719
bspl5.15   1.7377575  2.14083068   2.4676094  1.85129647  1.47265109  1.39943646
bspl5.16   2.5851940  2.50518047   2.4556132  2.02996922  2.28971905  2.48495405
             [,111]    [,112]     [,113]       [,114]     [,115]     [,116]
bspl5.1   1.9459102  1.504077  1.9387418   1.60943768  2.1961130  1.9459101
bspl5.2   2.0533960  1.644746  2.3041214   0.85508119  2.6044064  1.6418740
bspl5.3   2.1776318  1.807335  2.7264393  -0.01682849  3.0763255  1.2904588
bspl5.4   2.0836779  1.684359  2.4070457   0.64259629  2.7194192  1.5562208
bspl5.5   1.5956144  1.045678  0.7480017   4.06779513  0.8655205  2.9367564
bspl5.6   1.8430707  1.369272  1.5889838   2.33167644  1.8052759  2.2368373
bspl5.7   2.8008162  2.623651  4.8454381  -4.39213652  5.4442007 -0.4724057
bspl5.8   1.6104434  1.062909  0.7966882   3.96862037  0.9199253  2.8951476
bspl5.9  -0.1638404 -1.245176 -5.2236472  16.38949370 -5.8074984  7.9117538
bspl5.10  4.9477321  5.404616 12.1206726 -19.39465826 13.5739113 -6.5407456
bspl5.11  0.9490585  0.408357 -1.2829560   8.13084531 -1.4039732  4.7331232
bspl5.12  2.3696728  1.532911  2.9600467  -0.17248341  3.3373702  0.8289499
bspl5.13  1.6643779  1.609688  1.3055428   2.66167456  1.4885448  2.6739017
bspl5.14  2.1699789  1.868180  2.3864702   0.93958060  2.6964270  1.3923111
bspl5.15  1.7157377  1.491556  1.6139165   1.87356525  1.8331370  2.4079900
bspl5.16  2.3882967  2.226098  2.2505882   2.32190925  2.5445857  2.5520032
               [,117]      [,118]       [,119]     [,120]     [,121]     [,122]
bspl5.1   -0.01005048  1.89160473  -0.01005066  0.9162908  1.8718021  1.6094381
bspl5.2   -0.46352410  1.66453973  -1.03121397  1.2894815  1.7807379  2.1628465
bspl5.3   -0.98765731  1.40209024  -2.21150669  1.7208209  1.6754814  2.8024910
bspl5.4   -0.59121914  1.60057039  -1.31883570  1.3944317  1.7550489  2.3186545
bspl5.5    1.46774187  2.63160516   3.31776564 -0.2995204  2.1686540 -0.1938896
bspl5.6    0.42283021  2.10887440   0.96773027  0.5568981  1.9585163  1.0786706
bspl5.7   -3.61362877  0.08553767  -8.13463967  3.8924936  1.1489202  6.0154374
bspl5.8    1.45865171  2.60047837   3.18772948 -0.2712344  2.1519828 -0.1302835
bspl5.9    9.17403776  6.34739221  19.96845645 -6.2830152  3.6814819 -9.1838738
bspl5.10 -11.66432793 -4.44720471 -28.45394177 11.0369998 -0.7249084 16.8993093
bspl5.11   5.55514229  3.97823491   9.66693788 -0.2598627  3.1228577 -2.2711943
bspl5.12   0.95371861  1.04476762   0.53313164 -3.3303834  0.4965806  0.6568048
bspl5.13   1.82978414  2.44481935   1.29812780  3.2155619  2.6318625  2.0571676
bspl5.14   1.82590042  1.46958292   1.34012369  1.5111748  1.8670578  2.2995850
bspl5.15   1.97655027  2.24578602   1.85871969  1.7162753  2.2500051  1.6989504
bspl5.16   2.18001275  2.38525203   2.22203547  2.0823709  2.5562573  2.5194523
             [,123]      [,124]      [,125]    [,126]      [,127]      [,128]
bspl5.1   2.0794416 -0.69314717 -0.01005043  2.302585 -0.01005019 -0.01005024
bspl5.2   2.3283242 -0.83707918 -0.36133780  2.442937  0.36716379  0.76976792
bspl5.3   2.6159909 -1.01453950 -0.77027822  2.605161  0.79784565  1.93866442
bspl5.4   2.3984323 -0.94947554 -0.47910303  2.482473  0.43902748  2.49498055
bspl5.5   1.2683552 -0.16996461  1.14886676  1.845190 -1.21346991  1.43312986
bspl5.6   1.8411999  1.60589390  0.89396244  2.168234  0.66398569  1.77895087
bspl5.7   4.0593714  3.19801423 -1.47181736  3.419125  5.38396239  4.04238213
bspl5.8   1.3015186  0.91818486  1.49494681  1.863892 -0.75280091  1.32307692
bspl5.9  -2.7993025 -1.86969299  6.33557933 -0.448679 -9.47614930 -2.86442322
bspl5.10  9.0149816  6.58008788 -5.07012086  6.213736 15.90657380  9.06839631
bspl5.11 -0.1150551  0.05310395  3.53051303  1.065045 -3.17265102  0.36643905
bspl5.12  2.7751153  2.05227505  1.21838068  2.694896  1.50923695  2.90324527
bspl5.13  1.6481308  1.99901455  1.71765023  2.059357  0.77533219  2.12754869
bspl5.14  2.3844170  2.15675711  1.51467030  2.474570  1.77502576  2.56456973
bspl5.15  1.8581831  2.08220636  1.40017018  2.177811  2.21001116  2.40599580
bspl5.16  2.2918594  2.23001016  2.53602414  2.422374  2.36013248  2.70909722
             [,129]   [,130]      [,131]       [,132]    [,133]     [,134]
bspl5.1   0.6881347 2.301585  0.68813480  -0.01005015 2.3015846  1.3862944
bspl5.2   1.0190283 2.350629  1.19450472   0.58695616 2.3973886  1.5020679
bspl5.3   1.4014850 2.407315  1.77978393   1.27698551 2.5081220  1.6358796
bspl5.4   1.1122505 2.364444  1.33714902   0.75485591 2.4243758  1.5346014
bspl5.5  -0.3902632 2.141754 -0.96208952  -1.95503980 1.9893679  1.0091727
bspl5.6   0.3720621 2.254637  0.20346659  -0.58496852 2.2098767  1.2744953
bspl5.7   3.3182122 2.691743  4.71627010   4.75103166 3.0637318  2.3106351
bspl5.8  -0.3550670 2.148290 -0.89409629  -1.90740193 2.0021337  1.0149032
bspl5.9  -5.7204042 1.340194 -9.24085118 -11.54424110 0.4235781 -0.8306132
bspl5.10 10.3827802 3.668281 14.80571128  16.16647552 4.9713268  4.4864596
bspl5.11 -2.1172678 1.869144 -3.82700128  -1.26139039 1.4568428  1.3205437
bspl5.12  1.9251621 2.438672  2.22983767  -4.87633932 2.5693748 -0.6800740
bspl5.13  1.4495240 2.216592 -0.29039210   3.89430075 2.1355574  2.5509111
bspl5.14  1.4970343 2.361682  1.41563872   1.63774270 2.4189808  1.4672164
bspl5.15  1.9466816 2.257984  0.03633748   1.93761350 2.2164142  1.9749729
bspl5.16  2.5583746 2.343443  2.23427867   2.24261642 2.3833520  2.4657337
             [,135]     [,136]   [,137]      [,138]     [,139]     [,140]     [,141]
bspl5.1   2.0794417  0.9162908 2.191654 -0.05129316  1.7900914  1.8718022  2.3015846
bspl5.2   2.6491218  1.0198592 2.167626  0.38835256  1.6686474  2.0697384  2.4558104
bspl5.3   3.3075762  1.1395678 2.139854  0.89651184  1.5282787  2.2985215  2.6340696
bspl5.4   2.8095783  1.0490535 2.160859  0.51225677  1.6344435  2.1255452  2.4992556
bspl5.5   0.2229430  0.5787263 2.269954 -1.48419178  2.1858538  1.2266359  1.7989740
bspl5.6   1.5339008  0.8173992 2.214671 -0.47139538  1.9064151  1.6829440  2.1539669
bspl5.7   6.6121467  1.7393569 2.000450  3.44366146  0.8237247  3.4443387  3.5284450
bspl5.8   0.2966843  0.5949331 2.266921 -1.41841436  2.1703906  1.2591473  1.8196651
bspl5.9  -9.0759981 -1.1268343 2.661743 -8.70805497  4.1668059 -2.0415598 -0.7224029
bspl5.10 17.9265508  3.8350370 1.524259 12.29827336 -1.5848595  7.4670012  6.6011659
bspl5.11 -2.7336141 -0.2598772 2.387189 -4.72392279  2.7911370 -0.4699444  0.9280853
bspl5.12  3.1442793  1.8490894 2.165486  3.12012318  1.6258116  3.9220169  2.7668994
bspl5.13  1.5030132  1.2073644 2.201806  0.90002934  1.8676586  0.4255041  2.0080253
bspl5.14  2.3704093  1.6164334 2.192263  2.26276374  1.7636923  3.0365043  2.5156596
bspl5.15  2.2094164  1.3182946 2.171546  1.33382752  1.7511516  1.6921718  2.1298556
bspl5.16  2.6081967  2.3454025 2.259619  2.27558275  2.4127102  2.4661842  2.5070783
              [,142]      [,143]    [,144]     [,145]     [,146]     [,147]
bspl5.1  -0.01005022   1.3837911 1.6074359  2.3015846 -4.6051702  1.0986125
bspl5.2   0.34715843   0.8388458 1.5914641  2.4420678 -5.1111419  1.6616388
bspl5.3   0.76007773   0.2089862 1.5730020  2.6044428 -5.7210763  2.3124030
bspl5.4   0.44786423   0.6854963 1.5869325  2.4816407 -5.4159544  1.8202357
bspl5.5  -1.17381706   3.1593741 1.6595582  1.8437624 -2.8346053 -0.7362347
bspl5.6  -0.36641986   1.9073755 1.6223236  2.1671078  0.7778523  0.5596264
bspl5.7   2.87961811  -2.9580173 1.4817455  3.4191670  2.6570727  5.5777512
bspl5.8  -0.74923326   3.1060904 1.6534402  1.8624817 -0.9993874 -0.6616169
bspl5.9  -6.31950141  11.9612425 1.9421525 -0.4522496 -4.0807656 -9.9357974
bspl5.10  9.47111271 -13.5520312 1.1105100  6.2163887 10.2649200 16.7848447
bspl5.11 -0.64089160   4.3097604 2.1407100  1.0628888 -0.9902444 -3.8606310
bspl5.12 -0.06384767   4.5762575 0.5803804  2.6942615  2.5206864  2.6397997
bspl5.13  1.58819613  -1.1412805 2.2162890  2.0581289  1.5087582  1.2569705
bspl5.14  2.42058663   3.5982973 1.8177249  2.4737297  2.0805501  1.8550214
bspl5.15  1.86166465   2.0300680 2.0569558  2.1766940  1.8596107  2.0685503
bspl5.16  2.33360117   2.4918642 2.5881386  2.4214850  2.3290951  2.3424102
               [,148]     [,149]     [,150]       [,151]   [,152]      [,153]
bspl5.1   -0.01005014  2.3015847 -0.0100503   1.44691939 1.944481 -0.01005033
bspl5.2    0.62685690  2.4856807  0.1119292   2.75156983 2.015200  0.01743176
bspl5.3    1.36300381  2.6984650  0.2529177   4.25952641 2.096941  0.04919171
bspl5.4    0.80597527  2.5375390  0.1463046   3.11904200 2.035122  0.02520996
bspl5.5   -2.08502889  1.7016317 -0.4076034  -2.80474073 1.714011 -0.09976935
bspl5.6   -0.62334876  2.1253595 -0.1266319   0.19759512 1.876784 -0.03366568
bspl5.7    5.06909029  3.7661199  0.9597066  11.82732429 2.507076  0.19950521
bspl5.8   -2.03616698  1.7261624 -0.3895257  -2.63542559 1.723434 -0.13631541
bspl5.9  -12.29993386 -1.3071760 -2.4110660 -24.10303301 0.558189 -0.20363287
bspl5.10  17.27034333  7.4317377  3.4126753  37.74474840 3.915209  2.83703330
bspl5.11  -2.07931593  0.6783363 -1.2622382  -9.61799398 1.320916  1.81024274
bspl5.12  -7.10478020  2.8161679  0.7745886   3.99182772 2.142156  3.42348989
bspl5.13   3.95388116  1.9825481 -0.5686499   0.04405009 1.821924  1.56824145
bspl5.14   0.54992907  2.5271720  0.4879185   2.19529315 2.031139  2.99935129
bspl5.15   2.17206512  2.1379218 -0.6847476   1.61636626 1.881610  2.31507793
bspl5.16   2.09342330  2.4587081  2.0571200   2.64927499 2.004839  2.66188728
              [,154]     [,155]     [,156]      [,157]     [,158]     [,159]
bspl5.1   -1.3862945 1.09527339  1.2527630   1.8718020 -4.6051702 -4.6051701
bspl5.2   -1.9085364 1.11125396  1.2628964   1.3604277 -3.2640065 -3.3437201
bspl5.3   -2.5121709 1.12972599  1.2746131   0.7693666 -0.9053806 -1.2701188
bspl5.4   -2.0555168 1.11578565  1.2658610   1.2164374  1.6630962  0.4729478
bspl5.5    0.3151688 1.04312786  1.2194966   3.5381950  3.0637444  0.5114183
bspl5.6   -0.8792260 1.08034693  1.2444234   2.3620475  1.7735311  0.6462318
bspl5.7   -5.5650093 1.22113683  1.3287313  -2.1988317 -0.4402532  1.8295222
bspl5.8    0.1509117 1.04898597  1.2343961   3.4773830  2.6053161  0.4309961
bspl5.9    9.6790899 0.76172294  0.9806378  11.8563010  6.6241287 -1.8351210
bspl5.10 -10.8853540 1.58822700  1.7107911 -12.2837368 -5.2867659  4.5289342
bspl5.11   4.7578503 0.60343749 -0.1613448   5.6683945  3.5203804  0.2306954
bspl5.12  -0.1362723 2.02701195  4.6013770   2.2302645  2.0372191  3.5043800
bspl5.13   1.7134834 0.05267035 -0.9592919   1.4435209  1.3683335  0.7190361
bspl5.14   0.5307428 2.94574937  3.2995055   2.3340851  2.0679486  2.7814621
bspl5.15   1.3194496 2.03974263  1.7934217   2.4663791  1.6395919  2.0197902
bspl5.16   2.0762200 2.48778533  2.4264253   2.6544548  2.3157767  2.4207582
             [,160]     [,161]       [,162]     [,163]     [,164]       [,165]
bspl5.1   1.9459100 -4.6051704  -0.01005058  1.7900914  1.9459102  -0.01004977
bspl5.2   1.5261158 -5.8802797  -0.77313411  1.6525001  2.2525813   1.80477977
bspl5.3   1.0409039 -7.3861443  -1.65512839  1.4934676  2.6070417   3.90241698
bspl5.4   1.4078680 -6.4467043  -0.98801358  1.6137435  2.3389679   2.31593384
bspl5.5   3.3139722 -0.2940893   2.47660682  2.2384856  0.9464964  -5.92427000
bspl5.6   2.3478146  2.8631815   0.72133886  1.9218208  1.6523508  -1.74812581
bspl5.7  -1.3938691 -0.3225881  -6.08377094  0.6954436  4.3855632  14.43028653
bspl5.8   3.2586182  2.0420159   2.38394678  2.2203590  0.9873601  -5.69082326
bspl5.9  10.1718003  7.7314429  14.89992708  4.4861123 -4.0656374 -35.53993327
bspl5.10 -9.7448441 -7.1112039 -21.15266653 -2.0414496 10.4918246  50.45516412
bspl5.11  5.5909163  4.0995728   5.73860410  2.9832285 -0.7581303 -15.20223889
bspl5.12  0.9143867  1.2140628   0.25685669  1.4558933  2.8031136   3.02772124
bspl5.13  2.5622504  1.6920091   2.89162622  1.9885077  1.4144527  -1.51575123
bspl5.14  1.5434296  1.5666026   1.20073757  1.6632104  2.3216983   0.43982101
bspl5.15  2.1336127  1.2906108   2.18354809  1.8372328  1.6732774   2.40526012
bspl5.16  2.6656267  2.4621462   2.44027722  2.5962875  2.2076496   2.17984713
             [,166]      [,167]     [,168]     [,169]      [,170]     [,171]
bspl5.1   1.7900915 -0.01005027 -0.0100502  1.6094379 -0.01005039  1.6094380
bspl5.2   2.1156941  0.34086790  0.4086304  1.4341329 -0.27471107  1.9239177
bspl5.3   2.4920365  0.85033681  0.8925548  1.2315096 -0.55760399  2.2874028
bspl5.4   2.2074189  1.02255271  0.5265563  1.3847490 -0.22891947  2.0124807
bspl5.5   0.7289696  0.43057311 -1.3744652  2.1807457  1.41042319  0.5846276
bspl5.6   1.4784762  1.02383824 -0.4109896  1.7772225  2.69029046  1.3081173
bspl5.7   4.3801240  2.78387794  3.3212142  0.2149245  2.51910899  4.1121895
bspl5.8   0.7730168  0.53726361 -1.3202455  2.1571353  2.20192074  0.6236339
bspl5.9  -4.5961507 -2.71005479 -8.2087997  5.0472318  2.44033676 -4.5393784
bspl5.10 10.8721056  6.60583321 11.6365059 -3.2789886  2.26767917 10.3362863
bspl5.11 -1.1449582  1.21667457 -3.5414518  3.1796837  2.17906833 -0.8973928
bspl5.12  2.8611270  3.00690862  0.9434163  1.0579650  2.84526273  1.8116501
bspl5.13  1.1022279  2.22579994  0.9511486  1.9553469  2.79096552  2.0777501
bspl5.14  2.3070444  2.74392662  0.3918865  1.3680664  2.80709027  2.4522811
bspl5.15  1.3378494  2.37084231  2.4282879  1.7304521  2.80244887  1.9593535
bspl5.16  2.4152770  2.67943584  2.1837422  2.8880069  2.80345942  2.5074744
             [,172]     [,173]     [,174]     [,175]       [,176]     [,177]
bspl5.1   1.5993876  1.7917594  1.6074359  1.0986124  -0.01005011  1.6094380
bspl5.2   1.7095863  1.6762319  1.4825656  1.3562506   0.71663572  1.8607632
bspl5.3   1.8369567  1.5427013  1.3382384  1.6642903   1.56286806  2.1512556
bspl5.4   1.7406041  1.6436895  1.4474438  1.4865320   0.95688209  1.9316216
bspl5.5   1.2403144  2.1682520  2.0142603  0.4116906  -2.28440152  0.7902543
bspl5.6   1.4935665  1.9023577  1.7276228  0.9500910  -0.64234963  1.3696258
bspl5.7   2.4771871  0.8726713  0.6118200  3.0626594   5.70842114  3.6061785
bspl5.8   1.2527126  2.1529357  2.0041591  0.4191371  -2.25409983  0.8313997
bspl5.9  -0.5503734  4.0560207  4.0197408 -3.3211921 -13.44564357 -3.3587356
bspl5.10  4.6197760 -1.4261623 -1.7877385  8.6393219  22.80956018  8.7120756
bspl5.11  1.2525181  2.7942432  2.0731118  0.3169203  -4.32851661 -1.3508522
bspl5.12  1.9458132  1.5044830  2.8530070  3.1067528   2.86789498  4.1797702
bspl5.13  1.8462663  2.2456022  0.6452958  1.8652845   1.43017678 -0.2012487
bspl5.14  2.5517620  1.7030653  2.4490250  2.7178620   1.93931754  3.0625853
bspl5.15  2.0366274  2.2049780  1.6160934  2.0186068   2.53844782  1.4164483
bspl5.16  2.5187436  2.4036556  2.2076530  2.9724341   2.60296902  2.6997546
             [,178]     [,179]    [,180]     [,181]       [,182]       [,183]
bspl5.1   0.6881348  1.9459103 2.3969858  2.0794416  -0.01005045  1.386294502
bspl5.2   1.0634313  2.2804844 2.4852779  2.3620607  -0.38288864  1.833638205
bspl5.3   1.4972121  2.6671959 2.5873288  2.6887212  -0.81382311  2.350695091
bspl5.4   1.1691853  2.3747235 2.5101490  2.4416735  -0.48780993  1.959710504
bspl5.5  -0.5350131  0.8555792 2.1092496  1.1584079   1.20476970 -0.071690091
bspl5.6   0.3296175  1.6255475 2.3124686  1.8089230   0.34806037  0.958810424
bspl5.7   3.6712331  4.6078584 3.0993739  4.3276960  -2.98022791  4.942532659
bspl5.8  -0.4863174  0.8992310 2.1210145  1.1962379   1.16934789 -0.004765109
bspl5.9  -6.6451892 -4.6075632 0.6662316 -3.4615542   7.21707646 -7.422505801
bspl5.10 11.4535171 11.2573807 4.8573966  9.9573184 -10.25862638 13.946925536
bspl5.11 -2.9349310 -0.9140683 1.6184792 -0.4291184   2.72298257 -3.269291175
bspl5.12  2.8334954  2.6548331 2.6437789  2.9110869   3.83030452  4.421546982
bspl5.13  1.0399312  1.5421885 2.2439765  1.5576581  -0.30660558 -0.704409565
bspl5.14  2.1508946  2.1817177 2.5051770  2.4563064   3.09725861  3.033966744
bspl5.15  1.4353810  1.9191690 2.3184934  1.7860368   1.83142037  0.984234255
bspl5.16  2.3151880  2.3973148 2.4723419  2.4105893   2.12990299  2.275365287
            [,184]     [,185]        [,186]     [,187]     [,188]      [,189]
bspl5.1  1.9387416  1.6074359 -7.049687e-08  1.0986122 -4.6051700 -0.01005037
bspl5.2  1.8845812  1.5397085 -2.246069e-01  0.7967598 -2.5247263 -0.14280397
bspl5.3  1.8219809  1.4614234 -4.842228e-01  0.4478706  0.6883982 -0.29711155
bspl5.4  1.8693277  1.5205376 -2.878657e-01  0.7117751  2.6106647 -0.18673206
bspl5.5  2.1152390  1.8283576  7.318473e-01  2.0822243  0.6545680  0.42925633
bspl5.6  1.9906245  1.6711218  2.181368e-01  1.3881121  1.0616996  0.26214340
bspl5.7  1.5077505  1.0725583 -1.797348e+00 -1.3045956  5.4547198 -0.21777647
bspl5.8  2.1084017  1.8079398  6.433822e-01  2.0474338  0.4113202  3.21975133
bspl5.9  2.9983669  2.9968248  4.890519e+00  6.9863930 -7.5757979  6.65053879
bspl5.10 0.4343719 -0.4279567 -3.590040e+00 -7.2410643 15.5450746 -4.07228444
bspl5.11 2.3794973  3.3254830  4.114355e+00  3.1992830 -2.3582138  4.57506005
bspl5.12 1.8797566 -1.3874826  3.142846e-01  1.6436184  3.4109210  1.41192122
bspl5.13 1.9616264  3.3695189  2.871649e+00  1.6704309  1.0617791  3.05956866
bspl5.14 1.9401156  1.3018184  1.796709e+00  1.8119892  2.6264062  1.86591314
bspl5.15 1.8934167  2.6230264  2.270511e+00  1.7301972  1.4445774  2.93530195
bspl5.16 2.0919429  2.5378949  2.320586e+00  2.3153548  2.6398141  2.82925988
              [,190]
bspl5.1  -0.01005033
bspl5.2   0.01800916
bspl5.3   0.05043314
bspl5.4   0.02598725
bspl5.5  -0.10179229
bspl5.6  -0.03202365
bspl5.7   0.19669678
bspl5.8  -0.16834806
bspl5.9   0.04674408
bspl5.10  4.36309100
bspl5.11  1.06578780
bspl5.12  1.44741005
bspl5.13  2.52514617
bspl5.14  2.26798243
bspl5.15  2.28235184
bspl5.16  2.34185373
> pca.spline <- function(xlist, ylist, ncomp = 3){
+ 	knots <- c(0,1,2,3,4,5,6,6.25,6.5,6.75,6.8125,6.875,6.9375,7)
+ 	numk<-length(knots)
+ 	numplot <- length(plotpoints)
+ 	norder <- 5
+ 	nbasis <- numk + 2
+ 	lambda <- 0.1
+ 	numauct<-N.auc
+ 	wbasis <- create.bspline.basis(rangeval=c(0,7),nbasis=nbasis, norder=5)
+ 	Wfd <- list(0); length(Wfd) <- numauct
+ 	bids <- array(0,length(knots)*length(xlist), dim = c(length(knots),length(xlist)))
+ 	for(i in 1:length(xlist)){
+ 		for(j in 1:length(knots)){
+ 		  bids[j, i]=StepCheck(xlist[[i]],ylist[[i]],knots[j])	
+ 		} 
+ 	}
+ 	
+ 	
+ 	Wfd <- Data2fd(knots,bids,basisobj=wbasis)
+ 	PCA <- pca.fd(Wfd, nharm = ncomp)
+     
+     # cumsum(PCA$varprop)
+ 	# par(mfrow = c(4, 1))
+ 	# plot.pca.fd(PCA,harm=1,pointplot=FALSE)
+ 	# plot.pca.fd(PCA,harm=2,pointplot=FALSE)
+ 	# plot.pca.fd(PCA,harm=3,pointplot=FALSE)
+ 	# plot.pca.fd(PCA,harm=4,pointplot=FALSE)
+ 
+ 	return(list(Wfd, PCA))
+ 	
+ }
> pca.all <- pca.spline(xlist, ylist, ncomp = 3)
> coef.mat <- pca.all$Wfd
> pca.ebay <- pca.all$PCA
> scores.mat <- pca.ebay$scores
> dim(coef.mat)
NULL
> coef.mat
NULL
> summary(pca.all)
     Length Class  Mode
[1,] 3      fd     list
[2,] 5      pca.fd list
> coef.mat <- pca.all[[1]]
> pca.ebay <- pca.all[[2]]
> dim(coef.mat)
NULL
> coef.mat
Functional data object:

 Dimensions of the data:
    time 
     reps 
     values 

Basis object:

  Type:   bspline 

  Range:  0  to  7 

  Number of basis functions:  16 

  Order of spline:  5 
[1] "  Interior knots"
 [1] 0.5833333 1.1666667 1.7500000 2.3333333 2.9166667 3.5000000 4.0833333 4.6666667
 [9] 5.2500000 5.8333333 6.4166667
> Wfd
Functional data object:

 Dimensions of the data:
    time 
     reps 
     values 

Basis object:

  Type:   bspline 

  Range:  0  to  7 

  Number of basis functions:  16 

  Order of spline:  5 
[1] "  Interior knots"
 [1] 0.5833333 1.1666667 1.7500000 2.3333333 2.9166667 3.5000000 4.0833333 4.6666667
 [9] 5.2500000 5.8333333 6.4166667
> knots <- c(0,1,2,3,4,5,6,6.25,6.5,6.75,6.8125,6.875,6.9375,7)
> 	numk<-length(knots)
> 	numplot <- length(plotpoints)
> 	norder <- 5
> 	nbasis <- numk + 2
> 	lambda <- 0.1
> 	numauct<-N.auc
> 	wbasis <- create.bspline.basis(rangeval=c(0,7),nbasis=nbasis, norder=5)
> 	Wfd <- list(0); length(Wfd) <- numauct
> 	bids <- array(0,length(knots)*length(xlist), dim = c(length(knots),length(xlist)))
> 	for(i in 1:length(xlist)){
+ 		for(j in 1:length(knots)){
+ 		  bids[j, i]=StepCheck(xlist[[i]],ylist[[i]],knots[j])	
+ 		} 
+ 	}
> 	
> 	
> 	Wfd <- Data2fd(knots,bids,basisobj=wbasis)
> 	PCA <- pca.fd(Wfd, nharm = ncomp)
Error in as.matrix(result$vectors[, 1:nharm]) : 
  error in evaluating the argument 'x' in selecting a method for function 'as.matrix': Error: object 'ncomp' not found
> summary(Wfd)
Functional data object:

 Dimensions of the data:
    time 
     reps 
     values 

Basis object:

  Type:   bspline 

  Range:  0  to  7 

  Number of basis functions:  16 

  Order of spline:  5 
[1] "  Interior knots"
 [1] 0.5833333 1.1666667 1.7500000 2.3333333 2.9166667 3.5000000 4.0833333 4.6666667
 [9] 5.2500000 5.8333333 6.4166667

Coefficient matrix:

              [,1]     [,2]     [,3]          [,4]       [,5]      [,6]       [,7]
bspl5.1   3.911823 2.301585 3.912023  1.524790e-07  3.9118232  4.317488  3.1986733
bspl5.2   4.228227 2.392244 3.935896  4.275252e-01  4.4914354  4.606385  3.8332894
bspl5.3   4.593161 2.503089 3.963491  9.178130e-01  5.1613654  4.940301  4.5967873
bspl5.4   4.312370 2.451222 3.942637  5.220683e-01  4.6545786  4.687765  4.1804212
bspl5.5   2.884372 2.103692 3.834187 -1.372058e+00  2.0232014  3.375999  1.5809363
bspl5.6   3.761077 2.328567 3.889361  3.193468e-01  3.3553986  4.040943  2.9023470
bspl5.7   6.771818 3.313336 4.101290  5.608878e+00  8.5282401  6.615742  8.1898629
bspl5.8   2.961797 3.325797 3.839275  1.813968e+00  2.0846530  3.414495  2.3194194
bspl5.9  -2.383743 2.754921 3.433700 -5.143380e+00 -7.3646573 -1.345637 -6.8433229
bspl5.10 14.723210 5.114627 4.601961  1.565849e+01 19.8573808 12.368091 19.2068522
bspl5.11  1.971547 3.372777 3.516038 -1.558475e-01  0.3778963  1.770171 -0.5202687
bspl5.12  5.801346 4.070958 4.444142  3.935324e+00  1.6723216  5.125009  5.2477911
bspl5.13  5.011221 4.453418 3.534502  3.195236e+00  5.1069457  3.816833  3.4671280
bspl5.14  5.280732 4.499480 4.202410  3.567790e+00  4.6744512  4.671496  4.4801326
bspl5.15  5.883656 4.268213 4.088014  3.705728e+00  4.3090750  4.060657  4.0942805
bspl5.16  5.711381 4.918305 5.087839  4.050761e+00  5.0418245  4.564057  4.7654086
              [,8]      [,9]      [,10]      [,11]     [,12]     [,13]    [,14]
bspl5.1   2.301585  4.382027  1.6094379  4.3820267  2.301585  4.317488 3.912023
bspl5.2   2.085010  4.062727  1.5215287  4.6333887  2.444150  4.830471 3.893502
bspl5.3   1.920006  3.693671  1.4721355  4.9239275  2.606817  5.423393 3.872094
bspl5.4   2.498298  3.972788  1.7901508  4.7042077  2.470622  4.974973 3.888252
bspl5.5   4.412218  5.422584  2.6700294  3.5629057  1.847284  2.645724 3.972455
bspl5.6   4.700689  4.687731  2.1176696  4.1394269  2.576890  3.826438 3.929303
bspl5.7   2.935928  1.841721  0.7184147  6.3882764  4.388027  8.398406 3.766218
bspl5.8   5.102522  5.380601  4.6820969  3.6487062  2.029299  2.714078 3.966668
bspl5.9   8.591636 10.638059  9.3100884 -0.4476218 -1.316329 -5.738298 4.290884
bspl5.10 -1.303141 -4.508514 -3.7286054 11.3262876  8.457081 18.612624 3.329743
bspl5.11  6.751385  7.142851  6.0708097  2.3926448  1.994939 -0.205682 4.845134
bspl5.12  2.887955  3.626576  3.9759707  4.6982739  4.748581  5.751371 3.721849
bspl5.13  5.377773  4.827942  4.6219563  4.1908586  3.855107  3.428495 4.657100
bspl5.14  4.905024  4.099069  4.2875006  4.8368987  4.422818  4.946086 4.795035
bspl5.15  4.887419  4.485704  4.3182513  4.1790612  4.005015  3.861443 4.700789
bspl5.16  5.739046  5.169182  4.9434166  5.0105416  4.917339  4.755312 4.725656
                [,15]    [,16]     [,17]    [,18]      [,19]     [,20]      [,21]
bspl5.1   -0.01005001 2.564180  3.912023 2.301585  3.6888796  3.218876  3.4008641
bspl5.2    1.73973058 2.613881  4.347852 2.267220  4.2631817  3.908987  3.7185842
bspl5.3    4.18095028 2.671326  4.851593 2.233884  4.9262503  4.763623  4.0858160
bspl5.4    4.58896176 2.627860  4.470543 2.293313  4.4202091  4.423986  3.8080942
bspl5.5    0.52354971 2.402257  2.491860 2.506830  1.8209169  1.818464  2.3654181
bspl5.6    2.27437860 2.516298  3.494109 2.362438  3.2801998  3.095333  3.0968613
bspl5.7   10.57199666 2.960604  7.381629 2.081631  8.5868300  8.260325  5.9279603
bspl5.8    0.67823737 2.407342  2.535376 3.478296  1.9481944  1.932390  2.4091419
bspl5.9  -14.41934456 1.595395 -4.538373 4.921474 -7.8230128 -7.506306 -2.8349150
bspl5.10  28.77380195 3.899046 16.156313 1.025811 20.3632556 19.695347 12.2714704
bspl5.11  -4.19913610 2.857289  1.300401 3.158425 -0.8439586 -0.828079  0.4868081
bspl5.12   4.96971541 3.218218  3.056116 5.256903  4.0287369  4.077321  4.7046807
bspl5.13   2.77737983 3.046340  5.038197 1.849895  3.9363573  3.728372  3.0080792
bspl5.14   3.70296984 3.162538  4.675616 4.380324  3.4313385  3.464022  4.4704219
bspl5.15   4.58063600 3.072278  4.795712 4.636153  5.0483855  4.755585  4.5398049
bspl5.16   4.54166928 3.319845  5.012187 4.560643  4.5776004  4.360664  4.8059666
            [,22]     [,23]    [,24]        [,25]    [,26]        [,27]
bspl5.1  4.442651  4.317488 5.010635  -0.01005055 1.098612  -0.01005002
bspl5.2  4.324442  4.722178 5.003976  -0.51927622 1.668636   0.89249523
bspl5.3  4.187812  5.189932 4.996279  -0.94604749 2.621509   1.95475501
bspl5.4  4.291136  4.836177 5.002100   0.24044680 3.482635   1.24483729
bspl5.5  4.827901  2.998636 5.032337   4.23333359 3.639841  -2.45358967
bspl5.6  4.555713  3.930123 5.017015   3.81765239 3.538435   1.51297568
bspl5.7  3.502583  7.536833 4.957641  -1.46132983 3.827768  11.81076645
bspl5.8  4.811221  3.052778 5.031496   4.73181079 4.279404  -1.45701194
bspl5.9  6.764899 -3.616659 5.140925  14.34725828 4.577862 -20.37595534
bspl5.10 1.136553 15.597669 4.825661 -12.99988956 4.767641  34.60390977
bspl5.11 5.574931  0.728111 5.064830   7.02180753 4.599240  -6.33095433
bspl5.12 3.886238  5.501573 5.003383   4.20492017 4.609631   1.62110884
bspl5.13 4.823576  3.575533 5.013449   1.48828488 4.644817   3.10227561
bspl5.14 4.123139  4.852168 5.010804   6.02909937 4.620324   1.90617851
bspl5.15 4.821621  3.904202 5.005062   4.27061329 4.612534   4.61527584
bspl5.16 4.885416  4.777056 5.029473   5.24186519 5.386405   4.28937483
                 [,28]    [,29]    [,30]      [,31]     [,32]      [,33]
bspl5.1  -8.219951e-08 4.382027 4.248352 -4.6051701  1.098612  3.9118231
bspl5.2   7.167172e-02 4.406701 4.394014 -3.0156796  1.445747  4.3453495
bspl5.3   3.699423e-01 4.435221 4.562375 -0.2953005  2.001094  4.8464324
bspl5.4   1.300594e+00 4.413652 4.435038  2.3949893  2.405373  4.4674370
bspl5.5   3.036365e+00 4.301615 3.773672  3.5279101  2.388789  2.4990718
bspl5.6   2.559263e+00 4.358407 4.108811  3.9019771  3.533328  3.4964216
bspl5.7   6.506128e-01 4.578318 5.407500  4.5266599  5.463849  7.3620472
bspl5.8   6.037617e+00 4.304903 3.792011  3.6588198  2.914501  2.5527401
bspl5.9   1.217650e+01 3.898344 1.398811  2.4664136 -0.492446 -4.5641670
bspl5.10 -6.913228e+00 5.069621 8.293652  5.9274032 10.278437 15.9398868
bspl5.11  7.963998e+00 4.164463 3.067594  4.0182479  1.952840  0.4853864
bspl5.12  3.274673e+00 4.450996 4.395240  2.1840829  4.479704  4.1280668
bspl5.13  5.517396e+00 4.339266 4.202295  4.8119632  4.243755  3.9708910
bspl5.14  3.943364e+00 4.412262 4.212279  4.3646533  4.960488  4.1913802
bspl5.15  5.288705e+00 4.360091 4.535622  4.2361949  4.394195  4.2975929
bspl5.16  5.347347e+00 4.403086 4.492923  4.7554850  5.360597  4.8381415
                 [,34]      [,35]     [,36]     [,37]      [,38]         [,39]
bspl5.1   3.607970e-07 -4.6051701 4.0941779 -4.605170 -4.6051702  1.020645e-07
bspl5.2   1.148638e+00 -3.1441797 4.2641339 -2.364173 -3.0941249  9.708542e-01
bspl5.3   2.476262e+00 -0.6520966 4.4605745  1.316839 -0.4639634  2.478415e+00
bspl5.4   1.471954e+00  1.7840451 4.3120048  4.402245  2.2973656  3.411645e+00
bspl5.5  -3.742782e+00  2.6977959 3.5403157  4.396160  3.7813711  2.607234e+00
bspl5.6  -1.102186e+00  2.6410554 3.9314355  4.196325  3.8888773  3.042767e+00
bspl5.7   9.146830e+00  2.7836237 5.4464054  5.926550  3.7183876  5.376883e+00
bspl5.8  -3.627561e+00  2.6450046 3.5624386  4.931480  3.9954547  2.881638e+00
bspl5.9  -2.228955e+01  2.3084370 0.7654348  2.461760  4.3496619 -1.149648e+00
bspl5.10  3.202114e+01  3.1881345 8.8234569  9.006807  3.3222037  1.021552e+01
bspl5.11 -5.574946e+00  2.5181905 2.6477385  3.965316  4.3956122  1.680920e+00
bspl5.12 -1.254196e+00  2.9665477 4.4390855  5.569520  3.6418516  3.738281e+00
bspl5.13  3.643212e+00  4.3354433 3.8568662  4.936329  4.6239026  3.569384e+00
bspl5.14  1.470020e+00  4.1632695 4.3607301  5.350727  4.4160303  3.479285e+00
bspl5.15  4.203591e+00  4.1639696 3.8963862  5.054296  4.5523564  3.993517e+00
bspl5.16  3.405298e+00  4.8738224 4.8021113  5.298693  5.1725928  3.830708e+00
            [,40]      [,41]    [,42]       [,43]      [,44]       [,45]
bspl5.1  1.098612  0.6931473 4.595120   2.3025854  2.3025852 -0.01005019
bspl5.2  1.565084  1.2188701 4.642551   3.1625109  2.8064338  1.14662490
bspl5.3  2.261891  1.8265125 4.697372   4.1564404  3.4807812  2.89726993
bspl5.4  2.580462  1.3668235 4.655892   3.4047219  3.4659339  3.79840538
bspl5.5  1.984543 -1.0198321 4.440590  -0.4997864  2.0303048  2.43051415
bspl5.6  2.714099  0.1881843 4.549492   1.4791449  2.6894965  3.30917983
bspl5.7  5.118922  4.8812810 4.973214   9.1444899  5.5791718  6.95569103
bspl5.8  3.972097 -0.9665905 4.443975  -0.3879986  2.0941868  2.43474209
bspl5.9  1.244020 -9.5217661 3.682596 -14.5390162 -3.1894888 -4.23416569
bspl5.10 8.262782 15.1195282 5.905217  26.2296605 11.9384043 15.55461905
bspl5.11 4.017085 -2.1858961 4.430070  -5.0068150  0.6083599  0.63325398
bspl5.12 1.691535 -1.7434221 4.119783   4.0219206  4.6123242  4.10456421
bspl5.13 5.974526  2.9664243 4.983274   1.2829791  4.1959546  4.20660413
bspl5.14 4.318366  2.0886720 4.748600   3.0521449  4.4064386  4.07618092
bspl5.15 5.361008  3.3387031 4.791715   2.1194190  4.5819413  4.72916914
bspl5.16 5.196815  3.4883446 4.808600   3.6385376  4.8607262  4.78334795
                 [,46]      [,47]    [,48]    [,49]     [,50]     [,51]       [,52]
bspl5.1   3.891695e-07  3.9120231 5.164786 4.094345  4.094344  4.094178 -0.01005027
bspl5.2   1.246651e+00  4.1454355 5.179031 4.185210  3.772376  3.900231  0.95367840
bspl5.3   2.688009e+00  4.4150178 5.195495 4.290235  3.400234  3.676061  2.52631524
bspl5.4   1.599402e+00  4.2098797 5.183043 4.210809  3.681670  3.845605  3.80489768
bspl5.5  -4.061534e+00  3.1523148 5.118364 3.798215  5.143635  4.726218  3.71644023
bspl5.6  -1.310619e+00  3.7285062 5.151150 4.007413  4.402414  4.279918  3.78387495
bspl5.7   1.030627e+01  5.8601479 5.278105 4.817035  1.533450  2.550987  4.76716662
bspl5.8  -4.536727e-01  3.2008855 5.120262 3.810782  5.099407  4.701226  3.61698366
bspl5.9  -1.871589e+01 -0.7521738 4.885556 2.310707 10.412952  7.891414  1.78993923
bspl5.10  3.212065e+01 10.6474004 5.561734 6.632880 -4.894978 -1.299481  6.93625759
bspl5.11 -5.686915e+00  1.6688921 5.039186 3.239183  7.061740  5.721816  3.57314542
bspl5.12  3.427391e+00  5.0359894 5.204602 4.478443  2.871772  3.759193  3.79819622
bspl5.13  2.679101e+00  3.9126079 5.140100 4.143415  4.900503  4.268191  5.10745621
bspl5.14  2.274823e+00  4.6013192 5.182241 4.331700  3.461891  4.019215  4.71238574
bspl5.15  4.572334e+00  4.3014821 5.152122 4.253265  4.712635  4.002243  4.88252499
bspl5.16  3.844980e+00  4.7315793 5.176943 4.616296  5.129999  4.845098  4.94400307
                [,53]      [,54]      [,55]     [,56]     [,57]       [,58]
bspl5.1   4.248495193  3.9118232  3.9120231 2.3025851  4.488636  2.99573233
bspl5.2   4.092111226  4.4566381  4.2624510 2.4015642  4.260597  3.26312914
bspl5.3   3.911359926  5.0863532  4.6674873 2.5159664  3.997025  3.62690711
bspl5.4   4.048122886  4.6101078  4.3611672 2.4294118  4.196428  3.64510501
bspl5.5   4.757996514  2.1363192  2.7700013 1.9800978  5.231648  2.96753703
bspl5.6   4.398979796  3.3903016  3.5766249 2.2073571  4.707754  3.55244377
bspl5.7   3.001730895  8.2459770  6.6996129 3.0916296  2.671695  5.33530540
bspl5.8   4.745004421  2.2089154  2.8171158 1.9903193  5.209521  3.17688651
bspl5.9   7.271453760 -6.7679632 -2.9594566 0.3749721  8.913974 -0.03942452
bspl5.10 -0.007917244 19.0940265 13.6837491 4.9858517 -1.759239  9.41287187
bspl5.11  4.864399394 -0.8920271  0.7617582 2.4220765  5.696548  1.69953851
bspl5.12  5.726052864  5.4346836  5.0319285 2.9444892  5.866007  5.39868553
bspl5.13  3.120210505  2.9676648  3.8365479 3.1355393  3.398893  4.16427916
bspl5.14  5.192130212  4.5794277  4.5037010 3.4363811  5.450358  4.95592464
bspl5.15  4.724816022  3.4274785  4.2544394 3.8563044  4.686434  4.49755724
bspl5.16  5.517019102  4.3768150  4.5866881 3.8789004  4.866629  4.85743827
                 [,59]      [,60]     [,61]    [,62]      [,63]     [,64]
bspl5.1   1.039082e-07 -0.0100503 0.6881347 1.609438 -4.6051702 2.3015846
bspl5.2   9.000275e-01  1.0279706 1.0478426 1.611769 -3.8567894 2.3889204
bspl5.3   2.309700e+00  2.7557461 1.5781025 1.614510 -2.3996124 2.4898630
bspl5.4   3.227681e+00  4.2914418 1.7896417 1.612546 -0.3359827 2.4134491
bspl5.5   2.671032e+00  4.4701184 1.2932246 1.602089  2.2971430 2.0171242
bspl5.6   3.702075e+00  4.0003121 2.1320544 1.593645  5.6985260 2.2171269
bspl5.7   6.534866e+00  4.0007385 4.6106215 1.673008  8.2816217 2.9992899
bspl5.8   3.156597e+00  4.1894149 4.0038222 1.975059  3.9725407 2.0188707
bspl5.9  -1.811217e+00  4.1614393 1.6240158 2.271877 -0.9856319 0.6457899
bspl5.10  1.298334e+01  4.0254202 7.3674305 1.537847 14.3227121 4.7532071
bspl5.11  1.733114e+00  4.1424311 3.0250669 4.289669  2.4913249 4.2321963
bspl5.12  4.652964e+00  4.0857489 4.5735212 2.853135  6.1299235 4.3020874
bspl5.13  4.425571e+00  4.3771144 4.3000845 4.508610  4.8574269 4.3682238
bspl5.14  4.301749e+00  4.1286784 4.3945484 4.048384  5.6575611 4.2682220
bspl5.15  4.990730e+00  4.3869740 4.5043176 4.007980  5.1244025 4.4914670
bspl5.16  4.827103e+00  4.7269387 4.6508136 4.940247  5.9365451 4.6052055
               [,65]    [,66]      [,67]     [,68]     [,69]     [,70]       [,71]
bspl5.1  -0.01005033 4.381902  4.8283137 3.8918203  3.688629  4.442651 -0.01005031
bspl5.2   0.46221719 4.524079  4.6192878 4.0429831  3.462346  4.156323  1.12738719
bspl5.3   1.30500776 4.688413  4.3776889 4.2177027  3.200802  3.825376  3.05950021
bspl5.4   2.26133144 4.564136  4.5604095 4.0855815  3.398660  4.075665  4.92196956
bspl5.5   2.98404201 3.918544  5.5095050 3.3991563  4.425943  5.375773  5.47655306
bspl5.6   3.50227865 4.245878  5.0284342 3.7473339  3.905940  4.716691  4.72848489
bspl5.7   3.84908866 5.512706  3.1653474 5.0936336  1.886085  2.164990  4.15024303
bspl5.8   3.24283428 3.938242  5.4819668 3.4213709  4.402781  5.337829  5.86574271
bspl5.9   2.58056242 1.590765  8.9240567 0.9174998  8.086451 10.053021  7.49377380
bspl5.10  4.61883765 8.353659 -0.9924909 8.1321615 -2.526683 -3.546988  2.18307011
bspl5.11  3.70715305 3.055165  6.6409324 2.3358136  5.003208  7.203431  5.50152640
bspl5.12  3.07298808 4.962840  4.3205177 4.8619225  4.763673  4.084503  7.07959983
bspl5.13  4.43417082 3.996540  5.1307100 3.9325277  2.861357  5.020958  3.94709879
bspl5.14  3.21931861 4.683122  4.6322429 4.5601158  4.491463  4.495487  6.53596314
bspl5.15  4.76183458 4.137333  4.9165425 4.0369071  3.752127  4.676024  5.55834924
bspl5.16  4.53826416 4.797418  4.9882554 4.7618837  4.510363  5.324948  5.95300122
              [,72]     [,73]    [,74]       [,75]        [,76]    [,77]      [,78]
bspl5.1   4.4886365 4.3820267 2.995232 -0.01005019  -0.01005007 2.301585  3.2184757
bspl5.2   5.0576996 4.5613900 3.061331  0.94914245   1.61927590 2.547831  2.9354117
bspl5.3   5.7154411 4.7687039 3.137599  2.35805303   3.94771843 2.924799  2.6082381
bspl5.4   5.2179914 4.6119127 3.079096  2.90667017   4.58329725 3.136397  2.8557083
bspl5.5   2.6341287 3.7975027 2.780474  1.38160130   1.31297634 2.871216  4.1408817
bspl5.6   3.9437996 4.2103026 2.957388  2.38489444   2.67285645 2.874214  3.4898822
bspl5.7   9.0160457 5.8090119 3.580409  6.28655092   9.47219310 3.733618  0.9651057
bspl5.8   2.7089182 3.8211092 2.798947  1.75343272   1.47498891 4.753283  4.1066225
bspl5.9  -6.6608430 0.8676338 1.649946 -5.07081693 -10.54344779 4.900624  8.7503464
bspl5.10 20.3331526 9.3765017 4.954478 14.41827184  25.69958470 3.462908 -4.5808595
bspl5.11 -0.4285114 2.8289440 2.655161  1.08868666  -1.81408781 4.523086  5.4664150
bspl5.12  5.8268364 4.8119653 3.568451 -0.19399766   5.14688724 4.458385  3.9092799
bspl5.13  3.6996124 4.1268083 4.841159  5.18477618   3.88155098 4.220358  4.8011249
bspl5.14  4.9890977 4.5467012 4.622847  4.36562863   5.38558189 4.448131  4.2271012
bspl5.15  4.2975890 4.3087295 4.440537  4.31341214   4.06199889 4.146822  4.5357581
bspl5.16  5.1130692 4.5408699 5.289311  4.72565431   5.49077090 4.751413  4.7698021
            [,79]     [,80]     [,81]         [,82]      [,83]      [,84]      [,85]
bspl5.1  4.605170  2.301585  4.317488  1.368308e-07  3.2184759  2.3015848  3.4008642
bspl5.2  4.767069  2.770710  4.600636  1.171700e+00  3.8216561  2.8107414  3.9915545
bspl5.3  4.954194  3.312995  4.927908  2.971353e+00  4.5188269  3.3992361  4.7262827
bspl5.4  4.812623  2.902378  4.680399  4.005466e+00  3.9914443  2.9540260  4.4503981
bspl5.5  4.077654  0.774707  3.394728  2.865626e+00  1.2530347  0.6425976  2.2504058
bspl5.6  4.450021  1.820180  4.046480  3.623912e+00  2.6395710  1.8124555  3.3267257
bspl5.7  5.893735  6.419215  6.569893  6.974251e+00  8.0221092  6.3580128  7.6867474
bspl5.8  4.083484  3.284258  3.432781  3.397733e+00  1.3183053  0.6932643  2.2733415
bspl5.9  1.543512 -2.990489 -1.234675 -2.334577e+00 -8.5234526 -7.5863528 -5.6850679
bspl5.10 9.443961 13.918155 12.212282  1.385697e+01 19.8319589 16.2641338 17.2216361
bspl5.11 4.070081  1.054643  1.785266  1.646800e+00 -0.6351732 -0.4450042  0.9340728
bspl5.12 3.380159  4.597951  5.195855  4.582434e+00  1.2260422 -0.4285077  1.5887906
bspl5.13 5.579543  3.942382  3.899826  4.225290e+00  5.0045231  3.8943495  4.9691365
bspl5.14 5.043639  4.504480  4.743362  4.850564e+00  3.6948066  3.0863769  4.4500475
bspl5.15 5.086056  4.193420  4.141610  4.413839e+00  4.8354546  2.9016395  4.1862614
bspl5.16 5.194343  4.749870  4.637058  4.913444e+00  4.5936746  3.3744384  4.7257062
              [,86]         [,87]     [,88]     [,89]    [,90]     [,91]     [,92]
bspl5.1   4.5951199  7.250855e-08  3.912023  3.688880 3.912023  4.007333 4.0073332
bspl5.2   4.8491846  2.223597e-01  4.267356  3.951526 4.032502  3.793522 4.1971782
bspl5.3   5.1428410  5.041110e-01  4.678061  4.255099 4.171757  3.545944 4.4166073
bspl5.4   4.9207525  4.203043e-01  4.367449  4.025454 4.066480  3.730413 4.2506570
bspl5.5   3.7671454 -2.783798e-01  2.754026  2.833066 3.519305  4.706253 3.3886429
bspl5.6   4.3519177  7.910893e-01  3.571915  3.436700 3.797193  4.299816 3.8256183
bspl5.7   6.6162751  3.604212e+00  6.738684  5.780905 4.868766  2.511324 5.5175571
bspl5.8   3.8009993  2.013562e+00  2.800255  2.862389 3.540310  4.741398 3.4140715
bspl5.9  -0.3852075 -1.427763e+00 -3.044611 -1.432552 1.523482  8.038282 0.2851652
bspl5.10 11.6750691  7.633586e+00 13.852895 10.895800 7.333629 -1.425385 9.2993990
bspl5.11  2.3549302  1.351829e+00  0.794913  2.670682 2.364146  5.788195 2.3204697
bspl5.12  5.3052787  4.022870e+00  4.902510  4.184683 5.464956  5.240424 4.5703619
bspl5.13  4.1548285  3.072748e+00  4.289296  4.665714 2.946363  3.803492 3.6579998
bspl5.14  4.9064454  3.692370e+00  4.429563  4.001779 4.694932  5.051608 4.2468270
bspl5.15  4.3692545  3.232099e+00  4.871637  5.302422 4.894751  4.564715 3.9331788
bspl5.16  4.8119606  3.665867e+00  4.814130  4.981024 4.795794  4.830853 4.4802218
                [,93]      [,94]        [,95]       [,96]     [,97]      [,98]
bspl5.1  -4.605170239  2.3025851  1.383791408   1.6094381 1.8718022 -4.6051701
bspl5.2  -2.956898943  2.2036678  1.947687952   2.3545081 1.9462231 -3.2315140
bspl5.3  -0.002586779  2.0893361  2.599505472   3.2156845 2.0322412 -0.9498562
bspl5.4   3.411309030  2.1758054  2.106629340   2.5643879 1.9671868  1.0603965
bspl5.5   5.647601477  2.6249438 -0.453569902  -0.8186792 1.6292711  1.2521627
bspl5.6   3.761611187  2.3972948  0.829365727   0.8962234 1.8005632  0.6600335
bspl5.7   0.064314554  1.5155972  5.918385153   7.5366759 2.4638408  0.7293866
bspl5.8   5.045823493  2.6119789  0.009310495  -0.7193992 1.6391877  0.8565333
bspl5.9  11.746032810  4.2404484 -8.949574184 -12.9958655 0.4129601  0.9621922
bspl5.10 -7.988388270 -0.4511268 16.657937562  22.3720905 3.9456674  2.9396882
bspl5.11  6.206189048  3.1538796 -1.966376574  -4.9601401 1.2156038  0.6199981
bspl5.12  5.118779913  2.0785830  0.241972770   3.6920490 2.0798226  3.6236254
bspl5.13  2.901185261  2.4329306  2.356533999   0.3182400 1.7428316  0.9730097
bspl5.14  4.840569252  2.2226033  2.368962957   2.5224309 1.9629959  2.9916700
bspl5.15  4.334552329  2.3235318  1.833164175   0.9470653 1.8056415  2.0404996
bspl5.16  4.523642748  2.4504021  2.496317501   2.2453448 1.9353194  2.5112180
              [,99]     [,100]     [,101]     [,102]    [,103]     [,104]
bspl5.1   1.3837913  2.3015846  2.3015847  1.7900915 1.6094379 -4.6051702
bspl5.2   1.6923689  2.4429414  2.4848435  2.0339849 1.5641107 -3.1385722
bspl5.3   2.0490355  2.6063262  2.6966602  2.3158851 1.5117197 -0.6204439
bspl5.4   1.7793589  2.4827604  2.5364660  2.1026912 1.5513326  1.9055952
bspl5.5   0.3780181  1.8409154  1.7043601  0.9952565 1.7571769  2.8711505
bspl5.6   1.0892272  2.1662715  2.1261609  1.5566697 1.6527053  1.7913713
bspl5.7   3.8358102  3.4261169  3.7594598  3.7301806 1.2492638  0.4398009
bspl5.8   0.4273142  1.8597511  1.7287792  1.0281950 1.7499208  2.4208799
bspl5.9  -4.7095024 -0.4693747 -1.2907647 -2.9932397 2.5045694  4.8234935
bspl5.10 10.0886593  6.2407335  7.4084077  8.5922840 0.3306088 -2.4374676
bspl5.11 -2.1329675  1.0551857  0.6857182 -0.4030671 2.1269353  2.4919258
bspl5.12  4.2432710  2.6967034  2.8138277  2.5789250 1.1868106  3.1443820
bspl5.13 -0.5919367  2.0566149  1.9839990  1.2851597 1.9181795  0.7861004
bspl5.14  2.8771419  2.4748002  2.5261461  2.1674721 1.3264985  2.7256779
bspl5.15  1.9933766  2.1759174  2.1386661  1.4649223 2.0017137  1.8353310
bspl5.16  2.4840486  2.4222306  2.4579935  2.2294072 2.4701280  2.4010969
              [,105]      [,106]      [,107]      [,108]      [,109]      [,110]
bspl5.1    1.7900917 -0.01005024  -4.6051703 -4.60517016 -4.60517010 -0.01005030
bspl5.2    2.5632743  0.63194395  -3.7674309 -3.25934822 -3.06006515  0.23169280
bspl5.3    3.4569437  1.56065301  -2.0674907 -0.97214690 -0.54252770  0.61356866
bspl5.4    2.7810560  1.86310680   0.5856159  1.23689039  1.49226411  0.87359528
bspl5.5   -0.7296045  0.67799228   3.5605584  1.90460794  1.25526288  0.79303783
bspl5.6    1.0497522  1.14314186   1.5270661  1.04160900  0.85028014  1.40366458
bspl5.7    7.9417046  3.60060412  -3.8259156  0.21294312  1.80022795  2.54538660
bspl5.8   -0.6287143  0.60174521   3.0933014  1.51265753  0.88427366  1.00139878
bspl5.9  -13.3547012 -3.85331920  12.9376712  2.93931743 -0.93689830 -1.15218698
bspl5.10  23.3085661  8.88770221 -15.7569464 -1.47205503  4.00789540  5.16886429
bspl5.11  -4.8204699  0.66358805   6.8138419  1.05706320 -0.13577967  0.01869175
bspl5.12   3.4316426 -0.73110706   0.6267845  3.09199648  2.24435301  2.47166643
bspl5.13   0.8552993  3.02243388   2.3051840 -0.09957099 -0.06800973  1.34072341
bspl5.14   2.3349026  2.14348411   1.3237333  2.36007875  3.06532136  2.15770719
bspl5.15   1.7377575  2.14083068   2.4676094  1.85129647  1.47265109  1.39943646
bspl5.16   2.5851940  2.50518047   2.4556132  2.02996922  2.28971905  2.48495405
             [,111]    [,112]     [,113]       [,114]     [,115]     [,116]
bspl5.1   1.9459102  1.504077  1.9387418   1.60943768  2.1961130  1.9459101
bspl5.2   2.0533960  1.644746  2.3041214   0.85508119  2.6044064  1.6418740
bspl5.3   2.1776318  1.807335  2.7264393  -0.01682849  3.0763255  1.2904588
bspl5.4   2.0836779  1.684359  2.4070457   0.64259629  2.7194192  1.5562208
bspl5.5   1.5956144  1.045678  0.7480017   4.06779513  0.8655205  2.9367564
bspl5.6   1.8430707  1.369272  1.5889838   2.33167644  1.8052759  2.2368373
bspl5.7   2.8008162  2.623651  4.8454381  -4.39213652  5.4442007 -0.4724057
bspl5.8   1.6104434  1.062909  0.7966882   3.96862037  0.9199253  2.8951476
bspl5.9  -0.1638404 -1.245176 -5.2236472  16.38949370 -5.8074984  7.9117538
bspl5.10  4.9477321  5.404616 12.1206726 -19.39465826 13.5739113 -6.5407456
bspl5.11  0.9490585  0.408357 -1.2829560   8.13084531 -1.4039732  4.7331232
bspl5.12  2.3696728  1.532911  2.9600467  -0.17248341  3.3373702  0.8289499
bspl5.13  1.6643779  1.609688  1.3055428   2.66167456  1.4885448  2.6739017
bspl5.14  2.1699789  1.868180  2.3864702   0.93958060  2.6964270  1.3923111
bspl5.15  1.7157377  1.491556  1.6139165   1.87356525  1.8331370  2.4079900
bspl5.16  2.3882967  2.226098  2.2505882   2.32190925  2.5445857  2.5520032
               [,117]      [,118]       [,119]     [,120]     [,121]     [,122]
bspl5.1   -0.01005048  1.89160473  -0.01005066  0.9162908  1.8718021  1.6094381
bspl5.2   -0.46352410  1.66453973  -1.03121397  1.2894815  1.7807379  2.1628465
bspl5.3   -0.98765731  1.40209024  -2.21150669  1.7208209  1.6754814  2.8024910
bspl5.4   -0.59121914  1.60057039  -1.31883570  1.3944317  1.7550489  2.3186545
bspl5.5    1.46774187  2.63160516   3.31776564 -0.2995204  2.1686540 -0.1938896
bspl5.6    0.42283021  2.10887440   0.96773027  0.5568981  1.9585163  1.0786706
bspl5.7   -3.61362877  0.08553767  -8.13463967  3.8924936  1.1489202  6.0154374
bspl5.8    1.45865171  2.60047837   3.18772948 -0.2712344  2.1519828 -0.1302835
bspl5.9    9.17403776  6.34739221  19.96845645 -6.2830152  3.6814819 -9.1838738
bspl5.10 -11.66432793 -4.44720471 -28.45394177 11.0369998 -0.7249084 16.8993093
bspl5.11   5.55514229  3.97823491   9.66693788 -0.2598627  3.1228577 -2.2711943
bspl5.12   0.95371861  1.04476762   0.53313164 -3.3303834  0.4965806  0.6568048
bspl5.13   1.82978414  2.44481935   1.29812780  3.2155619  2.6318625  2.0571676
bspl5.14   1.82590042  1.46958292   1.34012369  1.5111748  1.8670578  2.2995850
bspl5.15   1.97655027  2.24578602   1.85871969  1.7162753  2.2500051  1.6989504
bspl5.16   2.18001275  2.38525203   2.22203547  2.0823709  2.5562573  2.5194523
             [,123]      [,124]      [,125]    [,126]      [,127]      [,128]
bspl5.1   2.0794416 -0.69314717 -0.01005043  2.302585 -0.01005019 -0.01005024
bspl5.2   2.3283242 -0.83707918 -0.36133780  2.442937  0.36716379  0.76976792
bspl5.3   2.6159909 -1.01453950 -0.77027822  2.605161  0.79784565  1.93866442
bspl5.4   2.3984323 -0.94947554 -0.47910303  2.482473  0.43902748  2.49498055
bspl5.5   1.2683552 -0.16996461  1.14886676  1.845190 -1.21346991  1.43312986
bspl5.6   1.8411999  1.60589390  0.89396244  2.168234  0.66398569  1.77895087
bspl5.7   4.0593714  3.19801423 -1.47181736  3.419125  5.38396239  4.04238213
bspl5.8   1.3015186  0.91818486  1.49494681  1.863892 -0.75280091  1.32307692
bspl5.9  -2.7993025 -1.86969299  6.33557933 -0.448679 -9.47614930 -2.86442322
bspl5.10  9.0149816  6.58008788 -5.07012086  6.213736 15.90657380  9.06839631
bspl5.11 -0.1150551  0.05310395  3.53051303  1.065045 -3.17265102  0.36643905
bspl5.12  2.7751153  2.05227505  1.21838068  2.694896  1.50923695  2.90324527
bspl5.13  1.6481308  1.99901455  1.71765023  2.059357  0.77533219  2.12754869
bspl5.14  2.3844170  2.15675711  1.51467030  2.474570  1.77502576  2.56456973
bspl5.15  1.8581831  2.08220636  1.40017018  2.177811  2.21001116  2.40599580
bspl5.16  2.2918594  2.23001016  2.53602414  2.422374  2.36013248  2.70909722
             [,129]   [,130]      [,131]       [,132]    [,133]     [,134]
bspl5.1   0.6881347 2.301585  0.68813480  -0.01005015 2.3015846  1.3862944
bspl5.2   1.0190283 2.350629  1.19450472   0.58695616 2.3973886  1.5020679
bspl5.3   1.4014850 2.407315  1.77978393   1.27698551 2.5081220  1.6358796
bspl5.4   1.1122505 2.364444  1.33714902   0.75485591 2.4243758  1.5346014
bspl5.5  -0.3902632 2.141754 -0.96208952  -1.95503980 1.9893679  1.0091727
bspl5.6   0.3720621 2.254637  0.20346659  -0.58496852 2.2098767  1.2744953
bspl5.7   3.3182122 2.691743  4.71627010   4.75103166 3.0637318  2.3106351
bspl5.8  -0.3550670 2.148290 -0.89409629  -1.90740193 2.0021337  1.0149032
bspl5.9  -5.7204042 1.340194 -9.24085118 -11.54424110 0.4235781 -0.8306132
bspl5.10 10.3827802 3.668281 14.80571128  16.16647552 4.9713268  4.4864596
bspl5.11 -2.1172678 1.869144 -3.82700128  -1.26139039 1.4568428  1.3205437
bspl5.12  1.9251621 2.438672  2.22983767  -4.87633932 2.5693748 -0.6800740
bspl5.13  1.4495240 2.216592 -0.29039210   3.89430075 2.1355574  2.5509111
bspl5.14  1.4970343 2.361682  1.41563872   1.63774270 2.4189808  1.4672164
bspl5.15  1.9466816 2.257984  0.03633748   1.93761350 2.2164142  1.9749729
bspl5.16  2.5583746 2.343443  2.23427867   2.24261642 2.3833520  2.4657337
             [,135]     [,136]   [,137]      [,138]     [,139]     [,140]     [,141]
bspl5.1   2.0794417  0.9162908 2.191654 -0.05129316  1.7900914  1.8718022  2.3015846
bspl5.2   2.6491218  1.0198592 2.167626  0.38835256  1.6686474  2.0697384  2.4558104
bspl5.3   3.3075762  1.1395678 2.139854  0.89651184  1.5282787  2.2985215  2.6340696
bspl5.4   2.8095783  1.0490535 2.160859  0.51225677  1.6344435  2.1255452  2.4992556
bspl5.5   0.2229430  0.5787263 2.269954 -1.48419178  2.1858538  1.2266359  1.7989740
bspl5.6   1.5339008  0.8173992 2.214671 -0.47139538  1.9064151  1.6829440  2.1539669
bspl5.7   6.6121467  1.7393569 2.000450  3.44366146  0.8237247  3.4443387  3.5284450
bspl5.8   0.2966843  0.5949331 2.266921 -1.41841436  2.1703906  1.2591473  1.8196651
bspl5.9  -9.0759981 -1.1268343 2.661743 -8.70805497  4.1668059 -2.0415598 -0.7224029
bspl5.10 17.9265508  3.8350370 1.524259 12.29827336 -1.5848595  7.4670012  6.6011659
bspl5.11 -2.7336141 -0.2598772 2.387189 -4.72392279  2.7911370 -0.4699444  0.9280853
bspl5.12  3.1442793  1.8490894 2.165486  3.12012318  1.6258116  3.9220169  2.7668994
bspl5.13  1.5030132  1.2073644 2.201806  0.90002934  1.8676586  0.4255041  2.0080253
bspl5.14  2.3704093  1.6164334 2.192263  2.26276374  1.7636923  3.0365043  2.5156596
bspl5.15  2.2094164  1.3182946 2.171546  1.33382752  1.7511516  1.6921718  2.1298556
bspl5.16  2.6081967  2.3454025 2.259619  2.27558275  2.4127102  2.4661842  2.5070783
              [,142]      [,143]    [,144]     [,145]     [,146]     [,147]
bspl5.1  -0.01005022   1.3837911 1.6074359  2.3015846 -4.6051702  1.0986125
bspl5.2   0.34715843   0.8388458 1.5914641  2.4420678 -5.1111419  1.6616388
bspl5.3   0.76007773   0.2089862 1.5730020  2.6044428 -5.7210763  2.3124030
bspl5.4   0.44786423   0.6854963 1.5869325  2.4816407 -5.4159544  1.8202357
bspl5.5  -1.17381706   3.1593741 1.6595582  1.8437624 -2.8346053 -0.7362347
bspl5.6  -0.36641986   1.9073755 1.6223236  2.1671078  0.7778523  0.5596264
bspl5.7   2.87961811  -2.9580173 1.4817455  3.4191670  2.6570727  5.5777512
bspl5.8  -0.74923326   3.1060904 1.6534402  1.8624817 -0.9993874 -0.6616169
bspl5.9  -6.31950141  11.9612425 1.9421525 -0.4522496 -4.0807656 -9.9357974
bspl5.10  9.47111271 -13.5520312 1.1105100  6.2163887 10.2649200 16.7848447
bspl5.11 -0.64089160   4.3097604 2.1407100  1.0628888 -0.9902444 -3.8606310
bspl5.12 -0.06384767   4.5762575 0.5803804  2.6942615  2.5206864  2.6397997
bspl5.13  1.58819613  -1.1412805 2.2162890  2.0581289  1.5087582  1.2569705
bspl5.14  2.42058663   3.5982973 1.8177249  2.4737297  2.0805501  1.8550214
bspl5.15  1.86166465   2.0300680 2.0569558  2.1766940  1.8596107  2.0685503
bspl5.16  2.33360117   2.4918642 2.5881386  2.4214850  2.3290951  2.3424102
               [,148]     [,149]     [,150]       [,151]   [,152]      [,153]
bspl5.1   -0.01005014  2.3015847 -0.0100503   1.44691939 1.944481 -0.01005033
bspl5.2    0.62685690  2.4856807  0.1119292   2.75156983 2.015200  0.01743176
bspl5.3    1.36300381  2.6984650  0.2529177   4.25952641 2.096941  0.04919171
bspl5.4    0.80597527  2.5375390  0.1463046   3.11904200 2.035122  0.02520996
bspl5.5   -2.08502889  1.7016317 -0.4076034  -2.80474073 1.714011 -0.09976935
bspl5.6   -0.62334876  2.1253595 -0.1266319   0.19759512 1.876784 -0.03366568
bspl5.7    5.06909029  3.7661199  0.9597066  11.82732429 2.507076  0.19950521
bspl5.8   -2.03616698  1.7261624 -0.3895257  -2.63542559 1.723434 -0.13631541
bspl5.9  -12.29993386 -1.3071760 -2.4110660 -24.10303301 0.558189 -0.20363287
bspl5.10  17.27034333  7.4317377  3.4126753  37.74474840 3.915209  2.83703330
bspl5.11  -2.07931593  0.6783363 -1.2622382  -9.61799398 1.320916  1.81024274
bspl5.12  -7.10478020  2.8161679  0.7745886   3.99182772 2.142156  3.42348989
bspl5.13   3.95388116  1.9825481 -0.5686499   0.04405009 1.821924  1.56824145
bspl5.14   0.54992907  2.5271720  0.4879185   2.19529315 2.031139  2.99935129
bspl5.15   2.17206512  2.1379218 -0.6847476   1.61636626 1.881610  2.31507793
bspl5.16   2.09342330  2.4587081  2.0571200   2.64927499 2.004839  2.66188728
              [,154]     [,155]     [,156]      [,157]     [,158]     [,159]
bspl5.1   -1.3862945 1.09527339  1.2527630   1.8718020 -4.6051702 -4.6051701
bspl5.2   -1.9085364 1.11125396  1.2628964   1.3604277 -3.2640065 -3.3437201
bspl5.3   -2.5121709 1.12972599  1.2746131   0.7693666 -0.9053806 -1.2701188
bspl5.4   -2.0555168 1.11578565  1.2658610   1.2164374  1.6630962  0.4729478
bspl5.5    0.3151688 1.04312786  1.2194966   3.5381950  3.0637444  0.5114183
bspl5.6   -0.8792260 1.08034693  1.2444234   2.3620475  1.7735311  0.6462318
bspl5.7   -5.5650093 1.22113683  1.3287313  -2.1988317 -0.4402532  1.8295222
bspl5.8    0.1509117 1.04898597  1.2343961   3.4773830  2.6053161  0.4309961
bspl5.9    9.6790899 0.76172294  0.9806378  11.8563010  6.6241287 -1.8351210
bspl5.10 -10.8853540 1.58822700  1.7107911 -12.2837368 -5.2867659  4.5289342
bspl5.11   4.7578503 0.60343749 -0.1613448   5.6683945  3.5203804  0.2306954
bspl5.12  -0.1362723 2.02701195  4.6013770   2.2302645  2.0372191  3.5043800
bspl5.13   1.7134834 0.05267035 -0.9592919   1.4435209  1.3683335  0.7190361
bspl5.14   0.5307428 2.94574937  3.2995055   2.3340851  2.0679486  2.7814621
bspl5.15   1.3194496 2.03974263  1.7934217   2.4663791  1.6395919  2.0197902
bspl5.16   2.0762200 2.48778533  2.4264253   2.6544548  2.3157767  2.4207582
             [,160]     [,161]       [,162]     [,163]     [,164]       [,165]
bspl5.1   1.9459100 -4.6051704  -0.01005058  1.7900914  1.9459102  -0.01004977
bspl5.2   1.5261158 -5.8802797  -0.77313411  1.6525001  2.2525813   1.80477977
bspl5.3   1.0409039 -7.3861443  -1.65512839  1.4934676  2.6070417   3.90241698
bspl5.4   1.4078680 -6.4467043  -0.98801358  1.6137435  2.3389679   2.31593384
bspl5.5   3.3139722 -0.2940893   2.47660682  2.2384856  0.9464964  -5.92427000
bspl5.6   2.3478146  2.8631815   0.72133886  1.9218208  1.6523508  -1.74812581
bspl5.7  -1.3938691 -0.3225881  -6.08377094  0.6954436  4.3855632  14.43028653
bspl5.8   3.2586182  2.0420159   2.38394678  2.2203590  0.9873601  -5.69082326
bspl5.9  10.1718003  7.7314429  14.89992708  4.4861123 -4.0656374 -35.53993327
bspl5.10 -9.7448441 -7.1112039 -21.15266653 -2.0414496 10.4918246  50.45516412
bspl5.11  5.5909163  4.0995728   5.73860410  2.9832285 -0.7581303 -15.20223889
bspl5.12  0.9143867  1.2140628   0.25685669  1.4558933  2.8031136   3.02772124
bspl5.13  2.5622504  1.6920091   2.89162622  1.9885077  1.4144527  -1.51575123
bspl5.14  1.5434296  1.5666026   1.20073757  1.6632104  2.3216983   0.43982101
bspl5.15  2.1336127  1.2906108   2.18354809  1.8372328  1.6732774   2.40526012
bspl5.16  2.6656267  2.4621462   2.44027722  2.5962875  2.2076496   2.17984713
             [,166]      [,167]     [,168]     [,169]      [,170]     [,171]
bspl5.1   1.7900915 -0.01005027 -0.0100502  1.6094379 -0.01005039  1.6094380
bspl5.2   2.1156941  0.34086790  0.4086304  1.4341329 -0.27471107  1.9239177
bspl5.3   2.4920365  0.85033681  0.8925548  1.2315096 -0.55760399  2.2874028
bspl5.4   2.2074189  1.02255271  0.5265563  1.3847490 -0.22891947  2.0124807
bspl5.5   0.7289696  0.43057311 -1.3744652  2.1807457  1.41042319  0.5846276
bspl5.6   1.4784762  1.02383824 -0.4109896  1.7772225  2.69029046  1.3081173
bspl5.7   4.3801240  2.78387794  3.3212142  0.2149245  2.51910899  4.1121895
bspl5.8   0.7730168  0.53726361 -1.3202455  2.1571353  2.20192074  0.6236339
bspl5.9  -4.5961507 -2.71005479 -8.2087997  5.0472318  2.44033676 -4.5393784
bspl5.10 10.8721056  6.60583321 11.6365059 -3.2789886  2.26767917 10.3362863
bspl5.11 -1.1449582  1.21667457 -3.5414518  3.1796837  2.17906833 -0.8973928
bspl5.12  2.8611270  3.00690862  0.9434163  1.0579650  2.84526273  1.8116501
bspl5.13  1.1022279  2.22579994  0.9511486  1.9553469  2.79096552  2.0777501
bspl5.14  2.3070444  2.74392662  0.3918865  1.3680664  2.80709027  2.4522811
bspl5.15  1.3378494  2.37084231  2.4282879  1.7304521  2.80244887  1.9593535
bspl5.16  2.4152770  2.67943584  2.1837422  2.8880069  2.80345942  2.5074744
             [,172]     [,173]     [,174]     [,175]       [,176]     [,177]
bspl5.1   1.5993876  1.7917594  1.6074359  1.0986124  -0.01005011  1.6094380
bspl5.2   1.7095863  1.6762319  1.4825656  1.3562506   0.71663572  1.8607632
bspl5.3   1.8369567  1.5427013  1.3382384  1.6642903   1.56286806  2.1512556
bspl5.4   1.7406041  1.6436895  1.4474438  1.4865320   0.95688209  1.9316216
bspl5.5   1.2403144  2.1682520  2.0142603  0.4116906  -2.28440152  0.7902543
bspl5.6   1.4935665  1.9023577  1.7276228  0.9500910  -0.64234963  1.3696258
bspl5.7   2.4771871  0.8726713  0.6118200  3.0626594   5.70842114  3.6061785
bspl5.8   1.2527126  2.1529357  2.0041591  0.4191371  -2.25409983  0.8313997
bspl5.9  -0.5503734  4.0560207  4.0197408 -3.3211921 -13.44564357 -3.3587356
bspl5.10  4.6197760 -1.4261623 -1.7877385  8.6393219  22.80956018  8.7120756
bspl5.11  1.2525181  2.7942432  2.0731118  0.3169203  -4.32851661 -1.3508522
bspl5.12  1.9458132  1.5044830  2.8530070  3.1067528   2.86789498  4.1797702
bspl5.13  1.8462663  2.2456022  0.6452958  1.8652845   1.43017678 -0.2012487
bspl5.14  2.5517620  1.7030653  2.4490250  2.7178620   1.93931754  3.0625853
bspl5.15  2.0366274  2.2049780  1.6160934  2.0186068   2.53844782  1.4164483
bspl5.16  2.5187436  2.4036556  2.2076530  2.9724341   2.60296902  2.6997546
             [,178]     [,179]    [,180]     [,181]       [,182]       [,183]
bspl5.1   0.6881348  1.9459103 2.3969858  2.0794416  -0.01005045  1.386294502
bspl5.2   1.0634313  2.2804844 2.4852779  2.3620607  -0.38288864  1.833638205
bspl5.3   1.4972121  2.6671959 2.5873288  2.6887212  -0.81382311  2.350695091
bspl5.4   1.1691853  2.3747235 2.5101490  2.4416735  -0.48780993  1.959710504
bspl5.5  -0.5350131  0.8555792 2.1092496  1.1584079   1.20476970 -0.071690091
bspl5.6   0.3296175  1.6255475 2.3124686  1.8089230   0.34806037  0.958810424
bspl5.7   3.6712331  4.6078584 3.0993739  4.3276960  -2.98022791  4.942532659
bspl5.8  -0.4863174  0.8992310 2.1210145  1.1962379   1.16934789 -0.004765109
bspl5.9  -6.6451892 -4.6075632 0.6662316 -3.4615542   7.21707646 -7.422505801
bspl5.10 11.4535171 11.2573807 4.8573966  9.9573184 -10.25862638 13.946925536
bspl5.11 -2.9349310 -0.9140683 1.6184792 -0.4291184   2.72298257 -3.269291175
bspl5.12  2.8334954  2.6548331 2.6437789  2.9110869   3.83030452  4.421546982
bspl5.13  1.0399312  1.5421885 2.2439765  1.5576581  -0.30660558 -0.704409565
bspl5.14  2.1508946  2.1817177 2.5051770  2.4563064   3.09725861  3.033966744
bspl5.15  1.4353810  1.9191690 2.3184934  1.7860368   1.83142037  0.984234255
bspl5.16  2.3151880  2.3973148 2.4723419  2.4105893   2.12990299  2.275365287
            [,184]     [,185]        [,186]     [,187]     [,188]      [,189]
bspl5.1  1.9387416  1.6074359 -7.049687e-08  1.0986122 -4.6051700 -0.01005037
bspl5.2  1.8845812  1.5397085 -2.246069e-01  0.7967598 -2.5247263 -0.14280397
bspl5.3  1.8219809  1.4614234 -4.842228e-01  0.4478706  0.6883982 -0.29711155
bspl5.4  1.8693277  1.5205376 -2.878657e-01  0.7117751  2.6106647 -0.18673206
bspl5.5  2.1152390  1.8283576  7.318473e-01  2.0822243  0.6545680  0.42925633
bspl5.6  1.9906245  1.6711218  2.181368e-01  1.3881121  1.0616996  0.26214340
bspl5.7  1.5077505  1.0725583 -1.797348e+00 -1.3045956  5.4547198 -0.21777647
bspl5.8  2.1084017  1.8079398  6.433822e-01  2.0474338  0.4113202  3.21975133
bspl5.9  2.9983669  2.9968248  4.890519e+00  6.9863930 -7.5757979  6.65053879
bspl5.10 0.4343719 -0.4279567 -3.590040e+00 -7.2410643 15.5450746 -4.07228444
bspl5.11 2.3794973  3.3254830  4.114355e+00  3.1992830 -2.3582138  4.57506005
bspl5.12 1.8797566 -1.3874826  3.142846e-01  1.6436184  3.4109210  1.41192122
bspl5.13 1.9616264  3.3695189  2.871649e+00  1.6704309  1.0617791  3.05956866
bspl5.14 1.9401156  1.3018184  1.796709e+00  1.8119892  2.6264062  1.86591314
bspl5.15 1.8934167  2.6230264  2.270511e+00  1.7301972  1.4445774  2.93530195
bspl5.16 2.0919429  2.5378949  2.320586e+00  2.3153548  2.6398141  2.82925988
              [,190]
bspl5.1  -0.01005033
bspl5.2   0.01800916
bspl5.3   0.05043314
bspl5.4   0.02598725
bspl5.5  -0.10179229
bspl5.6  -0.03202365
bspl5.7   0.19669678
bspl5.8  -0.16834806
bspl5.9   0.04674408
bspl5.10  4.36309100
bspl5.11  1.06578780
bspl5.12  1.44741005
bspl5.13  2.52514617
bspl5.14  2.26798243
bspl5.15  2.28235184
bspl5.16  2.34185373
> names(Wfd)
[1] "coefs"   "basis"   "fdnames"
> Wfd$coefs
              [,1]     [,2]     [,3]          [,4]       [,5]      [,6]       [,7]
bspl5.1   3.911823 2.301585 3.912023  1.524790e-07  3.9118232  4.317488  3.1986733
bspl5.2   4.228227 2.392244 3.935896  4.275252e-01  4.4914354  4.606385  3.8332894
bspl5.3   4.593161 2.503089 3.963491  9.178130e-01  5.1613654  4.940301  4.5967873
bspl5.4   4.312370 2.451222 3.942637  5.220683e-01  4.6545786  4.687765  4.1804212
bspl5.5   2.884372 2.103692 3.834187 -1.372058e+00  2.0232014  3.375999  1.5809363
bspl5.6   3.761077 2.328567 3.889361  3.193468e-01  3.3553986  4.040943  2.9023470
bspl5.7   6.771818 3.313336 4.101290  5.608878e+00  8.5282401  6.615742  8.1898629
bspl5.8   2.961797 3.325797 3.839275  1.813968e+00  2.0846530  3.414495  2.3194194
bspl5.9  -2.383743 2.754921 3.433700 -5.143380e+00 -7.3646573 -1.345637 -6.8433229
bspl5.10 14.723210 5.114627 4.601961  1.565849e+01 19.8573808 12.368091 19.2068522
bspl5.11  1.971547 3.372777 3.516038 -1.558475e-01  0.3778963  1.770171 -0.5202687
bspl5.12  5.801346 4.070958 4.444142  3.935324e+00  1.6723216  5.125009  5.2477911
bspl5.13  5.011221 4.453418 3.534502  3.195236e+00  5.1069457  3.816833  3.4671280
bspl5.14  5.280732 4.499480 4.202410  3.567790e+00  4.6744512  4.671496  4.4801326
bspl5.15  5.883656 4.268213 4.088014  3.705728e+00  4.3090750  4.060657  4.0942805
bspl5.16  5.711381 4.918305 5.087839  4.050761e+00  5.0418245  4.564057  4.7654086
              [,8]      [,9]      [,10]      [,11]     [,12]     [,13]    [,14]
bspl5.1   2.301585  4.382027  1.6094379  4.3820267  2.301585  4.317488 3.912023
bspl5.2   2.085010  4.062727  1.5215287  4.6333887  2.444150  4.830471 3.893502
bspl5.3   1.920006  3.693671  1.4721355  4.9239275  2.606817  5.423393 3.872094
bspl5.4   2.498298  3.972788  1.7901508  4.7042077  2.470622  4.974973 3.888252
bspl5.5   4.412218  5.422584  2.6700294  3.5629057  1.847284  2.645724 3.972455
bspl5.6   4.700689  4.687731  2.1176696  4.1394269  2.576890  3.826438 3.929303
bspl5.7   2.935928  1.841721  0.7184147  6.3882764  4.388027  8.398406 3.766218
bspl5.8   5.102522  5.380601  4.6820969  3.6487062  2.029299  2.714078 3.966668
bspl5.9   8.591636 10.638059  9.3100884 -0.4476218 -1.316329 -5.738298 4.290884
bspl5.10 -1.303141 -4.508514 -3.7286054 11.3262876  8.457081 18.612624 3.329743
bspl5.11  6.751385  7.142851  6.0708097  2.3926448  1.994939 -0.205682 4.845134
bspl5.12  2.887955  3.626576  3.9759707  4.6982739  4.748581  5.751371 3.721849
bspl5.13  5.377773  4.827942  4.6219563  4.1908586  3.855107  3.428495 4.657100
bspl5.14  4.905024  4.099069  4.2875006  4.8368987  4.422818  4.946086 4.795035
bspl5.15  4.887419  4.485704  4.3182513  4.1790612  4.005015  3.861443 4.700789
bspl5.16  5.739046  5.169182  4.9434166  5.0105416  4.917339  4.755312 4.725656
                [,15]    [,16]     [,17]    [,18]      [,19]     [,20]      [,21]
bspl5.1   -0.01005001 2.564180  3.912023 2.301585  3.6888796  3.218876  3.4008641
bspl5.2    1.73973058 2.613881  4.347852 2.267220  4.2631817  3.908987  3.7185842
bspl5.3    4.18095028 2.671326  4.851593 2.233884  4.9262503  4.763623  4.0858160
bspl5.4    4.58896176 2.627860  4.470543 2.293313  4.4202091  4.423986  3.8080942
bspl5.5    0.52354971 2.402257  2.491860 2.506830  1.8209169  1.818464  2.3654181
bspl5.6    2.27437860 2.516298  3.494109 2.362438  3.2801998  3.095333  3.0968613
bspl5.7   10.57199666 2.960604  7.381629 2.081631  8.5868300  8.260325  5.9279603
bspl5.8    0.67823737 2.407342  2.535376 3.478296  1.9481944  1.932390  2.4091419
bspl5.9  -14.41934456 1.595395 -4.538373 4.921474 -7.8230128 -7.506306 -2.8349150
bspl5.10  28.77380195 3.899046 16.156313 1.025811 20.3632556 19.695347 12.2714704
bspl5.11  -4.19913610 2.857289  1.300401 3.158425 -0.8439586 -0.828079  0.4868081
bspl5.12   4.96971541 3.218218  3.056116 5.256903  4.0287369  4.077321  4.7046807
bspl5.13   2.77737983 3.046340  5.038197 1.849895  3.9363573  3.728372  3.0080792
bspl5.14   3.70296984 3.162538  4.675616 4.380324  3.4313385  3.464022  4.4704219
bspl5.15   4.58063600 3.072278  4.795712 4.636153  5.0483855  4.755585  4.5398049
bspl5.16   4.54166928 3.319845  5.012187 4.560643  4.5776004  4.360664  4.8059666
            [,22]     [,23]    [,24]        [,25]    [,26]        [,27]
bspl5.1  4.442651  4.317488 5.010635  -0.01005055 1.098612  -0.01005002
bspl5.2  4.324442  4.722178 5.003976  -0.51927622 1.668636   0.89249523
bspl5.3  4.187812  5.189932 4.996279  -0.94604749 2.621509   1.95475501
bspl5.4  4.291136  4.836177 5.002100   0.24044680 3.482635   1.24483729
bspl5.5  4.827901  2.998636 5.032337   4.23333359 3.639841  -2.45358967
bspl5.6  4.555713  3.930123 5.017015   3.81765239 3.538435   1.51297568
bspl5.7  3.502583  7.536833 4.957641  -1.46132983 3.827768  11.81076645
bspl5.8  4.811221  3.052778 5.031496   4.73181079 4.279404  -1.45701194
bspl5.9  6.764899 -3.616659 5.140925  14.34725828 4.577862 -20.37595534
bspl5.10 1.136553 15.597669 4.825661 -12.99988956 4.767641  34.60390977
bspl5.11 5.574931  0.728111 5.064830   7.02180753 4.599240  -6.33095433
bspl5.12 3.886238  5.501573 5.003383   4.20492017 4.609631   1.62110884
bspl5.13 4.823576  3.575533 5.013449   1.48828488 4.644817   3.10227561
bspl5.14 4.123139  4.852168 5.010804   6.02909937 4.620324   1.90617851
bspl5.15 4.821621  3.904202 5.005062   4.27061329 4.612534   4.61527584
bspl5.16 4.885416  4.777056 5.029473   5.24186519 5.386405   4.28937483
                 [,28]    [,29]    [,30]      [,31]     [,32]      [,33]
bspl5.1  -8.219951e-08 4.382027 4.248352 -4.6051701  1.098612  3.9118231
bspl5.2   7.167172e-02 4.406701 4.394014 -3.0156796  1.445747  4.3453495
bspl5.3   3.699423e-01 4.435221 4.562375 -0.2953005  2.001094  4.8464324
bspl5.4   1.300594e+00 4.413652 4.435038  2.3949893  2.405373  4.4674370
bspl5.5   3.036365e+00 4.301615 3.773672  3.5279101  2.388789  2.4990718
bspl5.6   2.559263e+00 4.358407 4.108811  3.9019771  3.533328  3.4964216
bspl5.7   6.506128e-01 4.578318 5.407500  4.5266599  5.463849  7.3620472
bspl5.8   6.037617e+00 4.304903 3.792011  3.6588198  2.914501  2.5527401
bspl5.9   1.217650e+01 3.898344 1.398811  2.4664136 -0.492446 -4.5641670
bspl5.10 -6.913228e+00 5.069621 8.293652  5.9274032 10.278437 15.9398868
bspl5.11  7.963998e+00 4.164463 3.067594  4.0182479  1.952840  0.4853864
bspl5.12  3.274673e+00 4.450996 4.395240  2.1840829  4.479704  4.1280668
bspl5.13  5.517396e+00 4.339266 4.202295  4.8119632  4.243755  3.9708910
bspl5.14  3.943364e+00 4.412262 4.212279  4.3646533  4.960488  4.1913802
bspl5.15  5.288705e+00 4.360091 4.535622  4.2361949  4.394195  4.2975929
bspl5.16  5.347347e+00 4.403086 4.492923  4.7554850  5.360597  4.8381415
                 [,34]      [,35]     [,36]     [,37]      [,38]         [,39]
bspl5.1   3.607970e-07 -4.6051701 4.0941779 -4.605170 -4.6051702  1.020645e-07
bspl5.2   1.148638e+00 -3.1441797 4.2641339 -2.364173 -3.0941249  9.708542e-01
bspl5.3   2.476262e+00 -0.6520966 4.4605745  1.316839 -0.4639634  2.478415e+00
bspl5.4   1.471954e+00  1.7840451 4.3120048  4.402245  2.2973656  3.411645e+00
bspl5.5  -3.742782e+00  2.6977959 3.5403157  4.396160  3.7813711  2.607234e+00
bspl5.6  -1.102186e+00  2.6410554 3.9314355  4.196325  3.8888773  3.042767e+00
bspl5.7   9.146830e+00  2.7836237 5.4464054  5.926550  3.7183876  5.376883e+00
bspl5.8  -3.627561e+00  2.6450046 3.5624386  4.931480  3.9954547  2.881638e+00
bspl5.9  -2.228955e+01  2.3084370 0.7654348  2.461760  4.3496619 -1.149648e+00
bspl5.10  3.202114e+01  3.1881345 8.8234569  9.006807  3.3222037  1.021552e+01
bspl5.11 -5.574946e+00  2.5181905 2.6477385  3.965316  4.3956122  1.680920e+00
bspl5.12 -1.254196e+00  2.9665477 4.4390855  5.569520  3.6418516  3.738281e+00
bspl5.13  3.643212e+00  4.3354433 3.8568662  4.936329  4.6239026  3.569384e+00
bspl5.14  1.470020e+00  4.1632695 4.3607301  5.350727  4.4160303  3.479285e+00
bspl5.15  4.203591e+00  4.1639696 3.8963862  5.054296  4.5523564  3.993517e+00
bspl5.16  3.405298e+00  4.8738224 4.8021113  5.298693  5.1725928  3.830708e+00
            [,40]      [,41]    [,42]       [,43]      [,44]       [,45]
bspl5.1  1.098612  0.6931473 4.595120   2.3025854  2.3025852 -0.01005019
bspl5.2  1.565084  1.2188701 4.642551   3.1625109  2.8064338  1.14662490
bspl5.3  2.261891  1.8265125 4.697372   4.1564404  3.4807812  2.89726993
bspl5.4  2.580462  1.3668235 4.655892   3.4047219  3.4659339  3.79840538
bspl5.5  1.984543 -1.0198321 4.440590  -0.4997864  2.0303048  2.43051415
bspl5.6  2.714099  0.1881843 4.549492   1.4791449  2.6894965  3.30917983
bspl5.7  5.118922  4.8812810 4.973214   9.1444899  5.5791718  6.95569103
bspl5.8  3.972097 -0.9665905 4.443975  -0.3879986  2.0941868  2.43474209
bspl5.9  1.244020 -9.5217661 3.682596 -14.5390162 -3.1894888 -4.23416569
bspl5.10 8.262782 15.1195282 5.905217  26.2296605 11.9384043 15.55461905
bspl5.11 4.017085 -2.1858961 4.430070  -5.0068150  0.6083599  0.63325398
bspl5.12 1.691535 -1.7434221 4.119783   4.0219206  4.6123242  4.10456421
bspl5.13 5.974526  2.9664243 4.983274   1.2829791  4.1959546  4.20660413
bspl5.14 4.318366  2.0886720 4.748600   3.0521449  4.4064386  4.07618092
bspl5.15 5.361008  3.3387031 4.791715   2.1194190  4.5819413  4.72916914
bspl5.16 5.196815  3.4883446 4.808600   3.6385376  4.8607262  4.78334795
                 [,46]      [,47]    [,48]    [,49]     [,50]     [,51]       [,52]
bspl5.1   3.891695e-07  3.9120231 5.164786 4.094345  4.094344  4.094178 -0.01005027
bspl5.2   1.246651e+00  4.1454355 5.179031 4.185210  3.772376  3.900231  0.95367840
bspl5.3   2.688009e+00  4.4150178 5.195495 4.290235  3.400234  3.676061  2.52631524
bspl5.4   1.599402e+00  4.2098797 5.183043 4.210809  3.681670  3.845605  3.80489768
bspl5.5  -4.061534e+00  3.1523148 5.118364 3.798215  5.143635  4.726218  3.71644023
bspl5.6  -1.310619e+00  3.7285062 5.151150 4.007413  4.402414  4.279918  3.78387495
bspl5.7   1.030627e+01  5.8601479 5.278105 4.817035  1.533450  2.550987  4.76716662
bspl5.8  -4.536727e-01  3.2008855 5.120262 3.810782  5.099407  4.701226  3.61698366
bspl5.9  -1.871589e+01 -0.7521738 4.885556 2.310707 10.412952  7.891414  1.78993923
bspl5.10  3.212065e+01 10.6474004 5.561734 6.632880 -4.894978 -1.299481  6.93625759
bspl5.11 -5.686915e+00  1.6688921 5.039186 3.239183  7.061740  5.721816  3.57314542
bspl5.12  3.427391e+00  5.0359894 5.204602 4.478443  2.871772  3.759193  3.79819622
bspl5.13  2.679101e+00  3.9126079 5.140100 4.143415  4.900503  4.268191  5.10745621
bspl5.14  2.274823e+00  4.6013192 5.182241 4.331700  3.461891  4.019215  4.71238574
bspl5.15  4.572334e+00  4.3014821 5.152122 4.253265  4.712635  4.002243  4.88252499
bspl5.16  3.844980e+00  4.7315793 5.176943 4.616296  5.129999  4.845098  4.94400307
                [,53]      [,54]      [,55]     [,56]     [,57]       [,58]
bspl5.1   4.248495193  3.9118232  3.9120231 2.3025851  4.488636  2.99573233
bspl5.2   4.092111226  4.4566381  4.2624510 2.4015642  4.260597  3.26312914
bspl5.3   3.911359926  5.0863532  4.6674873 2.5159664  3.997025  3.62690711
bspl5.4   4.048122886  4.6101078  4.3611672 2.4294118  4.196428  3.64510501
bspl5.5   4.757996514  2.1363192  2.7700013 1.9800978  5.231648  2.96753703
bspl5.6   4.398979796  3.3903016  3.5766249 2.2073571  4.707754  3.55244377
bspl5.7   3.001730895  8.2459770  6.6996129 3.0916296  2.671695  5.33530540
bspl5.8   4.745004421  2.2089154  2.8171158 1.9903193  5.209521  3.17688651
bspl5.9   7.271453760 -6.7679632 -2.9594566 0.3749721  8.913974 -0.03942452
bspl5.10 -0.007917244 19.0940265 13.6837491 4.9858517 -1.759239  9.41287187
bspl5.11  4.864399394 -0.8920271  0.7617582 2.4220765  5.696548  1.69953851
bspl5.12  5.726052864  5.4346836  5.0319285 2.9444892  5.866007  5.39868553
bspl5.13  3.120210505  2.9676648  3.8365479 3.1355393  3.398893  4.16427916
bspl5.14  5.192130212  4.5794277  4.5037010 3.4363811  5.450358  4.95592464
bspl5.15  4.724816022  3.4274785  4.2544394 3.8563044  4.686434  4.49755724
bspl5.16  5.517019102  4.3768150  4.5866881 3.8789004  4.866629  4.85743827
                 [,59]      [,60]     [,61]    [,62]      [,63]     [,64]
bspl5.1   1.039082e-07 -0.0100503 0.6881347 1.609438 -4.6051702 2.3015846
bspl5.2   9.000275e-01  1.0279706 1.0478426 1.611769 -3.8567894 2.3889204
bspl5.3   2.309700e+00  2.7557461 1.5781025 1.614510 -2.3996124 2.4898630
bspl5.4   3.227681e+00  4.2914418 1.7896417 1.612546 -0.3359827 2.4134491
bspl5.5   2.671032e+00  4.4701184 1.2932246 1.602089  2.2971430 2.0171242
bspl5.6   3.702075e+00  4.0003121 2.1320544 1.593645  5.6985260 2.2171269
bspl5.7   6.534866e+00  4.0007385 4.6106215 1.673008  8.2816217 2.9992899
bspl5.8   3.156597e+00  4.1894149 4.0038222 1.975059  3.9725407 2.0188707
bspl5.9  -1.811217e+00  4.1614393 1.6240158 2.271877 -0.9856319 0.6457899
bspl5.10  1.298334e+01  4.0254202 7.3674305 1.537847 14.3227121 4.7532071
bspl5.11  1.733114e+00  4.1424311 3.0250669 4.289669  2.4913249 4.2321963
bspl5.12  4.652964e+00  4.0857489 4.5735212 2.853135  6.1299235 4.3020874
bspl5.13  4.425571e+00  4.3771144 4.3000845 4.508610  4.8574269 4.3682238
bspl5.14  4.301749e+00  4.1286784 4.3945484 4.048384  5.6575611 4.2682220
bspl5.15  4.990730e+00  4.3869740 4.5043176 4.007980  5.1244025 4.4914670
bspl5.16  4.827103e+00  4.7269387 4.6508136 4.940247  5.9365451 4.6052055
               [,65]    [,66]      [,67]     [,68]     [,69]     [,70]       [,71]
bspl5.1  -0.01005033 4.381902  4.8283137 3.8918203  3.688629  4.442651 -0.01005031
bspl5.2   0.46221719 4.524079  4.6192878 4.0429831  3.462346  4.156323  1.12738719
bspl5.3   1.30500776 4.688413  4.3776889 4.2177027  3.200802  3.825376  3.05950021
bspl5.4   2.26133144 4.564136  4.5604095 4.0855815  3.398660  4.075665  4.92196956
bspl5.5   2.98404201 3.918544  5.5095050 3.3991563  4.425943  5.375773  5.47655306
bspl5.6   3.50227865 4.245878  5.0284342 3.7473339  3.905940  4.716691  4.72848489
bspl5.7   3.84908866 5.512706  3.1653474 5.0936336  1.886085  2.164990  4.15024303
bspl5.8   3.24283428 3.938242  5.4819668 3.4213709  4.402781  5.337829  5.86574271
bspl5.9   2.58056242 1.590765  8.9240567 0.9174998  8.086451 10.053021  7.49377380
bspl5.10  4.61883765 8.353659 -0.9924909 8.1321615 -2.526683 -3.546988  2.18307011
bspl5.11  3.70715305 3.055165  6.6409324 2.3358136  5.003208  7.203431  5.50152640
bspl5.12  3.07298808 4.962840  4.3205177 4.8619225  4.763673  4.084503  7.07959983
bspl5.13  4.43417082 3.996540  5.1307100 3.9325277  2.861357  5.020958  3.94709879
bspl5.14  3.21931861 4.683122  4.6322429 4.5601158  4.491463  4.495487  6.53596314
bspl5.15  4.76183458 4.137333  4.9165425 4.0369071  3.752127  4.676024  5.55834924
bspl5.16  4.53826416 4.797418  4.9882554 4.7618837  4.510363  5.324948  5.95300122
              [,72]     [,73]    [,74]       [,75]        [,76]    [,77]      [,78]
bspl5.1   4.4886365 4.3820267 2.995232 -0.01005019  -0.01005007 2.301585  3.2184757
bspl5.2   5.0576996 4.5613900 3.061331  0.94914245   1.61927590 2.547831  2.9354117
bspl5.3   5.7154411 4.7687039 3.137599  2.35805303   3.94771843 2.924799  2.6082381
bspl5.4   5.2179914 4.6119127 3.079096  2.90667017   4.58329725 3.136397  2.8557083
bspl5.5   2.6341287 3.7975027 2.780474  1.38160130   1.31297634 2.871216  4.1408817
bspl5.6   3.9437996 4.2103026 2.957388  2.38489444   2.67285645 2.874214  3.4898822
bspl5.7   9.0160457 5.8090119 3.580409  6.28655092   9.47219310 3.733618  0.9651057
bspl5.8   2.7089182 3.8211092 2.798947  1.75343272   1.47498891 4.753283  4.1066225
bspl5.9  -6.6608430 0.8676338 1.649946 -5.07081693 -10.54344779 4.900624  8.7503464
bspl5.10 20.3331526 9.3765017 4.954478 14.41827184  25.69958470 3.462908 -4.5808595
bspl5.11 -0.4285114 2.8289440 2.655161  1.08868666  -1.81408781 4.523086  5.4664150
bspl5.12  5.8268364 4.8119653 3.568451 -0.19399766   5.14688724 4.458385  3.9092799
bspl5.13  3.6996124 4.1268083 4.841159  5.18477618   3.88155098 4.220358  4.8011249
bspl5.14  4.9890977 4.5467012 4.622847  4.36562863   5.38558189 4.448131  4.2271012
bspl5.15  4.2975890 4.3087295 4.440537  4.31341214   4.06199889 4.146822  4.5357581
bspl5.16  5.1130692 4.5408699 5.289311  4.72565431   5.49077090 4.751413  4.7698021
            [,79]     [,80]     [,81]         [,82]      [,83]      [,84]      [,85]
bspl5.1  4.605170  2.301585  4.317488  1.368308e-07  3.2184759  2.3015848  3.4008642
bspl5.2  4.767069  2.770710  4.600636  1.171700e+00  3.8216561  2.8107414  3.9915545
bspl5.3  4.954194  3.312995  4.927908  2.971353e+00  4.5188269  3.3992361  4.7262827
bspl5.4  4.812623  2.902378  4.680399  4.005466e+00  3.9914443  2.9540260  4.4503981
bspl5.5  4.077654  0.774707  3.394728  2.865626e+00  1.2530347  0.6425976  2.2504058
bspl5.6  4.450021  1.820180  4.046480  3.623912e+00  2.6395710  1.8124555  3.3267257
bspl5.7  5.893735  6.419215  6.569893  6.974251e+00  8.0221092  6.3580128  7.6867474
bspl5.8  4.083484  3.284258  3.432781  3.397733e+00  1.3183053  0.6932643  2.2733415
bspl5.9  1.543512 -2.990489 -1.234675 -2.334577e+00 -8.5234526 -7.5863528 -5.6850679
bspl5.10 9.443961 13.918155 12.212282  1.385697e+01 19.8319589 16.2641338 17.2216361
bspl5.11 4.070081  1.054643  1.785266  1.646800e+00 -0.6351732 -0.4450042  0.9340728
bspl5.12 3.380159  4.597951  5.195855  4.582434e+00  1.2260422 -0.4285077  1.5887906
bspl5.13 5.579543  3.942382  3.899826  4.225290e+00  5.0045231  3.8943495  4.9691365
bspl5.14 5.043639  4.504480  4.743362  4.850564e+00  3.6948066  3.0863769  4.4500475
bspl5.15 5.086056  4.193420  4.141610  4.413839e+00  4.8354546  2.9016395  4.1862614
bspl5.16 5.194343  4.749870  4.637058  4.913444e+00  4.5936746  3.3744384  4.7257062
              [,86]         [,87]     [,88]     [,89]    [,90]     [,91]     [,92]
bspl5.1   4.5951199  7.250855e-08  3.912023  3.688880 3.912023  4.007333 4.0073332
bspl5.2   4.8491846  2.223597e-01  4.267356  3.951526 4.032502  3.793522 4.1971782
bspl5.3   5.1428410  5.041110e-01  4.678061  4.255099 4.171757  3.545944 4.4166073
bspl5.4   4.9207525  4.203043e-01  4.367449  4.025454 4.066480  3.730413 4.2506570
bspl5.5   3.7671454 -2.783798e-01  2.754026  2.833066 3.519305  4.706253 3.3886429
bspl5.6   4.3519177  7.910893e-01  3.571915  3.436700 3.797193  4.299816 3.8256183
bspl5.7   6.6162751  3.604212e+00  6.738684  5.780905 4.868766  2.511324 5.5175571
bspl5.8   3.8009993  2.013562e+00  2.800255  2.862389 3.540310  4.741398 3.4140715
bspl5.9  -0.3852075 -1.427763e+00 -3.044611 -1.432552 1.523482  8.038282 0.2851652
bspl5.10 11.6750691  7.633586e+00 13.852895 10.895800 7.333629 -1.425385 9.2993990
bspl5.11  2.3549302  1.351829e+00  0.794913  2.670682 2.364146  5.788195 2.3204697
bspl5.12  5.3052787  4.022870e+00  4.902510  4.184683 5.464956  5.240424 4.5703619
bspl5.13  4.1548285  3.072748e+00  4.289296  4.665714 2.946363  3.803492 3.6579998
bspl5.14  4.9064454  3.692370e+00  4.429563  4.001779 4.694932  5.051608 4.2468270
bspl5.15  4.3692545  3.232099e+00  4.871637  5.302422 4.894751  4.564715 3.9331788
bspl5.16  4.8119606  3.665867e+00  4.814130  4.981024 4.795794  4.830853 4.4802218
                [,93]      [,94]        [,95]       [,96]     [,97]      [,98]
bspl5.1  -4.605170239  2.3025851  1.383791408   1.6094381 1.8718022 -4.6051701
bspl5.2  -2.956898943  2.2036678  1.947687952   2.3545081 1.9462231 -3.2315140
bspl5.3  -0.002586779  2.0893361  2.599505472   3.2156845 2.0322412 -0.9498562
bspl5.4   3.411309030  2.1758054  2.106629340   2.5643879 1.9671868  1.0603965
bspl5.5   5.647601477  2.6249438 -0.453569902  -0.8186792 1.6292711  1.2521627
bspl5.6   3.761611187  2.3972948  0.829365727   0.8962234 1.8005632  0.6600335
bspl5.7   0.064314554  1.5155972  5.918385153   7.5366759 2.4638408  0.7293866
bspl5.8   5.045823493  2.6119789  0.009310495  -0.7193992 1.6391877  0.8565333
bspl5.9  11.746032810  4.2404484 -8.949574184 -12.9958655 0.4129601  0.9621922
bspl5.10 -7.988388270 -0.4511268 16.657937562  22.3720905 3.9456674  2.9396882
bspl5.11  6.206189048  3.1538796 -1.966376574  -4.9601401 1.2156038  0.6199981
bspl5.12  5.118779913  2.0785830  0.241972770   3.6920490 2.0798226  3.6236254
bspl5.13  2.901185261  2.4329306  2.356533999   0.3182400 1.7428316  0.9730097
bspl5.14  4.840569252  2.2226033  2.368962957   2.5224309 1.9629959  2.9916700
bspl5.15  4.334552329  2.3235318  1.833164175   0.9470653 1.8056415  2.0404996
bspl5.16  4.523642748  2.4504021  2.496317501   2.2453448 1.9353194  2.5112180
              [,99]     [,100]     [,101]     [,102]    [,103]     [,104]
bspl5.1   1.3837913  2.3015846  2.3015847  1.7900915 1.6094379 -4.6051702
bspl5.2   1.6923689  2.4429414  2.4848435  2.0339849 1.5641107 -3.1385722
bspl5.3   2.0490355  2.6063262  2.6966602  2.3158851 1.5117197 -0.6204439
bspl5.4   1.7793589  2.4827604  2.5364660  2.1026912 1.5513326  1.9055952
bspl5.5   0.3780181  1.8409154  1.7043601  0.9952565 1.7571769  2.8711505
bspl5.6   1.0892272  2.1662715  2.1261609  1.5566697 1.6527053  1.7913713
bspl5.7   3.8358102  3.4261169  3.7594598  3.7301806 1.2492638  0.4398009
bspl5.8   0.4273142  1.8597511  1.7287792  1.0281950 1.7499208  2.4208799
bspl5.9  -4.7095024 -0.4693747 -1.2907647 -2.9932397 2.5045694  4.8234935
bspl5.10 10.0886593  6.2407335  7.4084077  8.5922840 0.3306088 -2.4374676
bspl5.11 -2.1329675  1.0551857  0.6857182 -0.4030671 2.1269353  2.4919258
bspl5.12  4.2432710  2.6967034  2.8138277  2.5789250 1.1868106  3.1443820
bspl5.13 -0.5919367  2.0566149  1.9839990  1.2851597 1.9181795  0.7861004
bspl5.14  2.8771419  2.4748002  2.5261461  2.1674721 1.3264985  2.7256779
bspl5.15  1.9933766  2.1759174  2.1386661  1.4649223 2.0017137  1.8353310
bspl5.16  2.4840486  2.4222306  2.4579935  2.2294072 2.4701280  2.4010969
              [,105]      [,106]      [,107]      [,108]      [,109]      [,110]
bspl5.1    1.7900917 -0.01005024  -4.6051703 -4.60517016 -4.60517010 -0.01005030
bspl5.2    2.5632743  0.63194395  -3.7674309 -3.25934822 -3.06006515  0.23169280
bspl5.3    3.4569437  1.56065301  -2.0674907 -0.97214690 -0.54252770  0.61356866
bspl5.4    2.7810560  1.86310680   0.5856159  1.23689039  1.49226411  0.87359528
bspl5.5   -0.7296045  0.67799228   3.5605584  1.90460794  1.25526288  0.79303783
bspl5.6    1.0497522  1.14314186   1.5270661  1.04160900  0.85028014  1.40366458
bspl5.7    7.9417046  3.60060412  -3.8259156  0.21294312  1.80022795  2.54538660
bspl5.8   -0.6287143  0.60174521   3.0933014  1.51265753  0.88427366  1.00139878
bspl5.9  -13.3547012 -3.85331920  12.9376712  2.93931743 -0.93689830 -1.15218698
bspl5.10  23.3085661  8.88770221 -15.7569464 -1.47205503  4.00789540  5.16886429
bspl5.11  -4.8204699  0.66358805   6.8138419  1.05706320 -0.13577967  0.01869175
bspl5.12   3.4316426 -0.73110706   0.6267845  3.09199648  2.24435301  2.47166643
bspl5.13   0.8552993  3.02243388   2.3051840 -0.09957099 -0.06800973  1.34072341
bspl5.14   2.3349026  2.14348411   1.3237333  2.36007875  3.06532136  2.15770719
bspl5.15   1.7377575  2.14083068   2.4676094  1.85129647  1.47265109  1.39943646
bspl5.16   2.5851940  2.50518047   2.4556132  2.02996922  2.28971905  2.48495405
             [,111]    [,112]     [,113]       [,114]     [,115]     [,116]
bspl5.1   1.9459102  1.504077  1.9387418   1.60943768  2.1961130  1.9459101
bspl5.2   2.0533960  1.644746  2.3041214   0.85508119  2.6044064  1.6418740
bspl5.3   2.1776318  1.807335  2.7264393  -0.01682849  3.0763255  1.2904588
bspl5.4   2.0836779  1.684359  2.4070457   0.64259629  2.7194192  1.5562208
bspl5.5   1.5956144  1.045678  0.7480017   4.06779513  0.8655205  2.9367564
bspl5.6   1.8430707  1.369272  1.5889838   2.33167644  1.8052759  2.2368373
bspl5.7   2.8008162  2.623651  4.8454381  -4.39213652  5.4442007 -0.4724057
bspl5.8   1.6104434  1.062909  0.7966882   3.96862037  0.9199253  2.8951476
bspl5.9  -0.1638404 -1.245176 -5.2236472  16.38949370 -5.8074984  7.9117538
bspl5.10  4.9477321  5.404616 12.1206726 -19.39465826 13.5739113 -6.5407456
bspl5.11  0.9490585  0.408357 -1.2829560   8.13084531 -1.4039732  4.7331232
bspl5.12  2.3696728  1.532911  2.9600467  -0.17248341  3.3373702  0.8289499
bspl5.13  1.6643779  1.609688  1.3055428   2.66167456  1.4885448  2.6739017
bspl5.14  2.1699789  1.868180  2.3864702   0.93958060  2.6964270  1.3923111
bspl5.15  1.7157377  1.491556  1.6139165   1.87356525  1.8331370  2.4079900
bspl5.16  2.3882967  2.226098  2.2505882   2.32190925  2.5445857  2.5520032
               [,117]      [,118]       [,119]     [,120]     [,121]     [,122]
bspl5.1   -0.01005048  1.89160473  -0.01005066  0.9162908  1.8718021  1.6094381
bspl5.2   -0.46352410  1.66453973  -1.03121397  1.2894815  1.7807379  2.1628465
bspl5.3   -0.98765731  1.40209024  -2.21150669  1.7208209  1.6754814  2.8024910
bspl5.4   -0.59121914  1.60057039  -1.31883570  1.3944317  1.7550489  2.3186545
bspl5.5    1.46774187  2.63160516   3.31776564 -0.2995204  2.1686540 -0.1938896
bspl5.6    0.42283021  2.10887440   0.96773027  0.5568981  1.9585163  1.0786706
bspl5.7   -3.61362877  0.08553767  -8.13463967  3.8924936  1.1489202  6.0154374
bspl5.8    1.45865171  2.60047837   3.18772948 -0.2712344  2.1519828 -0.1302835
bspl5.9    9.17403776  6.34739221  19.96845645 -6.2830152  3.6814819 -9.1838738
bspl5.10 -11.66432793 -4.44720471 -28.45394177 11.0369998 -0.7249084 16.8993093
bspl5.11   5.55514229  3.97823491   9.66693788 -0.2598627  3.1228577 -2.2711943
bspl5.12   0.95371861  1.04476762   0.53313164 -3.3303834  0.4965806  0.6568048
bspl5.13   1.82978414  2.44481935   1.29812780  3.2155619  2.6318625  2.0571676
bspl5.14   1.82590042  1.46958292   1.34012369  1.5111748  1.8670578  2.2995850
bspl5.15   1.97655027  2.24578602   1.85871969  1.7162753  2.2500051  1.6989504
bspl5.16   2.18001275  2.38525203   2.22203547  2.0823709  2.5562573  2.5194523
             [,123]      [,124]      [,125]    [,126]      [,127]      [,128]
bspl5.1   2.0794416 -0.69314717 -0.01005043  2.302585 -0.01005019 -0.01005024
bspl5.2   2.3283242 -0.83707918 -0.36133780  2.442937  0.36716379  0.76976792
bspl5.3   2.6159909 -1.01453950 -0.77027822  2.605161  0.79784565  1.93866442
bspl5.4   2.3984323 -0.94947554 -0.47910303  2.482473  0.43902748  2.49498055
bspl5.5   1.2683552 -0.16996461  1.14886676  1.845190 -1.21346991  1.43312986
bspl5.6   1.8411999  1.60589390  0.89396244  2.168234  0.66398569  1.77895087
bspl5.7   4.0593714  3.19801423 -1.47181736  3.419125  5.38396239  4.04238213
bspl5.8   1.3015186  0.91818486  1.49494681  1.863892 -0.75280091  1.32307692
bspl5.9  -2.7993025 -1.86969299  6.33557933 -0.448679 -9.47614930 -2.86442322
bspl5.10  9.0149816  6.58008788 -5.07012086  6.213736 15.90657380  9.06839631
bspl5.11 -0.1150551  0.05310395  3.53051303  1.065045 -3.17265102  0.36643905
bspl5.12  2.7751153  2.05227505  1.21838068  2.694896  1.50923695  2.90324527
bspl5.13  1.6481308  1.99901455  1.71765023  2.059357  0.77533219  2.12754869
bspl5.14  2.3844170  2.15675711  1.51467030  2.474570  1.77502576  2.56456973
bspl5.15  1.8581831  2.08220636  1.40017018  2.177811  2.21001116  2.40599580
bspl5.16  2.2918594  2.23001016  2.53602414  2.422374  2.36013248  2.70909722
             [,129]   [,130]      [,131]       [,132]    [,133]     [,134]
bspl5.1   0.6881347 2.301585  0.68813480  -0.01005015 2.3015846  1.3862944
bspl5.2   1.0190283 2.350629  1.19450472   0.58695616 2.3973886  1.5020679
bspl5.3   1.4014850 2.407315  1.77978393   1.27698551 2.5081220  1.6358796
bspl5.4   1.1122505 2.364444  1.33714902   0.75485591 2.4243758  1.5346014
bspl5.5  -0.3902632 2.141754 -0.96208952  -1.95503980 1.9893679  1.0091727
bspl5.6   0.3720621 2.254637  0.20346659  -0.58496852 2.2098767  1.2744953
bspl5.7   3.3182122 2.691743  4.71627010   4.75103166 3.0637318  2.3106351
bspl5.8  -0.3550670 2.148290 -0.89409629  -1.90740193 2.0021337  1.0149032
bspl5.9  -5.7204042 1.340194 -9.24085118 -11.54424110 0.4235781 -0.8306132
bspl5.10 10.3827802 3.668281 14.80571128  16.16647552 4.9713268  4.4864596
bspl5.11 -2.1172678 1.869144 -3.82700128  -1.26139039 1.4568428  1.3205437
bspl5.12  1.9251621 2.438672  2.22983767  -4.87633932 2.5693748 -0.6800740
bspl5.13  1.4495240 2.216592 -0.29039210   3.89430075 2.1355574  2.5509111
bspl5.14  1.4970343 2.361682  1.41563872   1.63774270 2.4189808  1.4672164
bspl5.15  1.9466816 2.257984  0.03633748   1.93761350 2.2164142  1.9749729
bspl5.16  2.5583746 2.343443  2.23427867   2.24261642 2.3833520  2.4657337
             [,135]     [,136]   [,137]      [,138]     [,139]     [,140]     [,141]
bspl5.1   2.0794417  0.9162908 2.191654 -0.05129316  1.7900914  1.8718022  2.3015846
bspl5.2   2.6491218  1.0198592 2.167626  0.38835256  1.6686474  2.0697384  2.4558104
bspl5.3   3.3075762  1.1395678 2.139854  0.89651184  1.5282787  2.2985215  2.6340696
bspl5.4   2.8095783  1.0490535 2.160859  0.51225677  1.6344435  2.1255452  2.4992556
bspl5.5   0.2229430  0.5787263 2.269954 -1.48419178  2.1858538  1.2266359  1.7989740
bspl5.6   1.5339008  0.8173992 2.214671 -0.47139538  1.9064151  1.6829440  2.1539669
bspl5.7   6.6121467  1.7393569 2.000450  3.44366146  0.8237247  3.4443387  3.5284450
bspl5.8   0.2966843  0.5949331 2.266921 -1.41841436  2.1703906  1.2591473  1.8196651
bspl5.9  -9.0759981 -1.1268343 2.661743 -8.70805497  4.1668059 -2.0415598 -0.7224029
bspl5.10 17.9265508  3.8350370 1.524259 12.29827336 -1.5848595  7.4670012  6.6011659
bspl5.11 -2.7336141 -0.2598772 2.387189 -4.72392279  2.7911370 -0.4699444  0.9280853
bspl5.12  3.1442793  1.8490894 2.165486  3.12012318  1.6258116  3.9220169  2.7668994
bspl5.13  1.5030132  1.2073644 2.201806  0.90002934  1.8676586  0.4255041  2.0080253
bspl5.14  2.3704093  1.6164334 2.192263  2.26276374  1.7636923  3.0365043  2.5156596
bspl5.15  2.2094164  1.3182946 2.171546  1.33382752  1.7511516  1.6921718  2.1298556
bspl5.16  2.6081967  2.3454025 2.259619  2.27558275  2.4127102  2.4661842  2.5070783
              [,142]      [,143]    [,144]     [,145]     [,146]     [,147]
bspl5.1  -0.01005022   1.3837911 1.6074359  2.3015846 -4.6051702  1.0986125
bspl5.2   0.34715843   0.8388458 1.5914641  2.4420678 -5.1111419  1.6616388
bspl5.3   0.76007773   0.2089862 1.5730020  2.6044428 -5.7210763  2.3124030
bspl5.4   0.44786423   0.6854963 1.5869325  2.4816407 -5.4159544  1.8202357
bspl5.5  -1.17381706   3.1593741 1.6595582  1.8437624 -2.8346053 -0.7362347
bspl5.6  -0.36641986   1.9073755 1.6223236  2.1671078  0.7778523  0.5596264
bspl5.7   2.87961811  -2.9580173 1.4817455  3.4191670  2.6570727  5.5777512
bspl5.8  -0.74923326   3.1060904 1.6534402  1.8624817 -0.9993874 -0.6616169
bspl5.9  -6.31950141  11.9612425 1.9421525 -0.4522496 -4.0807656 -9.9357974
bspl5.10  9.47111271 -13.5520312 1.1105100  6.2163887 10.2649200 16.7848447
bspl5.11 -0.64089160   4.3097604 2.1407100  1.0628888 -0.9902444 -3.8606310
bspl5.12 -0.06384767   4.5762575 0.5803804  2.6942615  2.5206864  2.6397997
bspl5.13  1.58819613  -1.1412805 2.2162890  2.0581289  1.5087582  1.2569705
bspl5.14  2.42058663   3.5982973 1.8177249  2.4737297  2.0805501  1.8550214
bspl5.15  1.86166465   2.0300680 2.0569558  2.1766940  1.8596107  2.0685503
bspl5.16  2.33360117   2.4918642 2.5881386  2.4214850  2.3290951  2.3424102
               [,148]     [,149]     [,150]       [,151]   [,152]      [,153]
bspl5.1   -0.01005014  2.3015847 -0.0100503   1.44691939 1.944481 -0.01005033
bspl5.2    0.62685690  2.4856807  0.1119292   2.75156983 2.015200  0.01743176
bspl5.3    1.36300381  2.6984650  0.2529177   4.25952641 2.096941  0.04919171
bspl5.4    0.80597527  2.5375390  0.1463046   3.11904200 2.035122  0.02520996
bspl5.5   -2.08502889  1.7016317 -0.4076034  -2.80474073 1.714011 -0.09976935
bspl5.6   -0.62334876  2.1253595 -0.1266319   0.19759512 1.876784 -0.03366568
bspl5.7    5.06909029  3.7661199  0.9597066  11.82732429 2.507076  0.19950521
bspl5.8   -2.03616698  1.7261624 -0.3895257  -2.63542559 1.723434 -0.13631541
bspl5.9  -12.29993386 -1.3071760 -2.4110660 -24.10303301 0.558189 -0.20363287
bspl5.10  17.27034333  7.4317377  3.4126753  37.74474840 3.915209  2.83703330
bspl5.11  -2.07931593  0.6783363 -1.2622382  -9.61799398 1.320916  1.81024274
bspl5.12  -7.10478020  2.8161679  0.7745886   3.99182772 2.142156  3.42348989
bspl5.13   3.95388116  1.9825481 -0.5686499   0.04405009 1.821924  1.56824145
bspl5.14   0.54992907  2.5271720  0.4879185   2.19529315 2.031139  2.99935129
bspl5.15   2.17206512  2.1379218 -0.6847476   1.61636626 1.881610  2.31507793
bspl5.16   2.09342330  2.4587081  2.0571200   2.64927499 2.004839  2.66188728
              [,154]     [,155]     [,156]      [,157]     [,158]     [,159]
bspl5.1   -1.3862945 1.09527339  1.2527630   1.8718020 -4.6051702 -4.6051701
bspl5.2   -1.9085364 1.11125396  1.2628964   1.3604277 -3.2640065 -3.3437201
bspl5.3   -2.5121709 1.12972599  1.2746131   0.7693666 -0.9053806 -1.2701188
bspl5.4   -2.0555168 1.11578565  1.2658610   1.2164374  1.6630962  0.4729478
bspl5.5    0.3151688 1.04312786  1.2194966   3.5381950  3.0637444  0.5114183
bspl5.6   -0.8792260 1.08034693  1.2444234   2.3620475  1.7735311  0.6462318
bspl5.7   -5.5650093 1.22113683  1.3287313  -2.1988317 -0.4402532  1.8295222
bspl5.8    0.1509117 1.04898597  1.2343961   3.4773830  2.6053161  0.4309961
bspl5.9    9.6790899 0.76172294  0.9806378  11.8563010  6.6241287 -1.8351210
bspl5.10 -10.8853540 1.58822700  1.7107911 -12.2837368 -5.2867659  4.5289342
bspl5.11   4.7578503 0.60343749 -0.1613448   5.6683945  3.5203804  0.2306954
bspl5.12  -0.1362723 2.02701195  4.6013770   2.2302645  2.0372191  3.5043800
bspl5.13   1.7134834 0.05267035 -0.9592919   1.4435209  1.3683335  0.7190361
bspl5.14   0.5307428 2.94574937  3.2995055   2.3340851  2.0679486  2.7814621
bspl5.15   1.3194496 2.03974263  1.7934217   2.4663791  1.6395919  2.0197902
bspl5.16   2.0762200 2.48778533  2.4264253   2.6544548  2.3157767  2.4207582
             [,160]     [,161]       [,162]     [,163]     [,164]       [,165]
bspl5.1   1.9459100 -4.6051704  -0.01005058  1.7900914  1.9459102  -0.01004977
bspl5.2   1.5261158 -5.8802797  -0.77313411  1.6525001  2.2525813   1.80477977
bspl5.3   1.0409039 -7.3861443  -1.65512839  1.4934676  2.6070417   3.90241698
bspl5.4   1.4078680 -6.4467043  -0.98801358  1.6137435  2.3389679   2.31593384
bspl5.5   3.3139722 -0.2940893   2.47660682  2.2384856  0.9464964  -5.92427000
bspl5.6   2.3478146  2.8631815   0.72133886  1.9218208  1.6523508  -1.74812581
bspl5.7  -1.3938691 -0.3225881  -6.08377094  0.6954436  4.3855632  14.43028653
bspl5.8   3.2586182  2.0420159   2.38394678  2.2203590  0.9873601  -5.69082326
bspl5.9  10.1718003  7.7314429  14.89992708  4.4861123 -4.0656374 -35.53993327
bspl5.10 -9.7448441 -7.1112039 -21.15266653 -2.0414496 10.4918246  50.45516412
bspl5.11  5.5909163  4.0995728   5.73860410  2.9832285 -0.7581303 -15.20223889
bspl5.12  0.9143867  1.2140628   0.25685669  1.4558933  2.8031136   3.02772124
bspl5.13  2.5622504  1.6920091   2.89162622  1.9885077  1.4144527  -1.51575123
bspl5.14  1.5434296  1.5666026   1.20073757  1.6632104  2.3216983   0.43982101
bspl5.15  2.1336127  1.2906108   2.18354809  1.8372328  1.6732774   2.40526012
bspl5.16  2.6656267  2.4621462   2.44027722  2.5962875  2.2076496   2.17984713
             [,166]      [,167]     [,168]     [,169]      [,170]     [,171]
bspl5.1   1.7900915 -0.01005027 -0.0100502  1.6094379 -0.01005039  1.6094380
bspl5.2   2.1156941  0.34086790  0.4086304  1.4341329 -0.27471107  1.9239177
bspl5.3   2.4920365  0.85033681  0.8925548  1.2315096 -0.55760399  2.2874028
bspl5.4   2.2074189  1.02255271  0.5265563  1.3847490 -0.22891947  2.0124807
bspl5.5   0.7289696  0.43057311 -1.3744652  2.1807457  1.41042319  0.5846276
bspl5.6   1.4784762  1.02383824 -0.4109896  1.7772225  2.69029046  1.3081173
bspl5.7   4.3801240  2.78387794  3.3212142  0.2149245  2.51910899  4.1121895
bspl5.8   0.7730168  0.53726361 -1.3202455  2.1571353  2.20192074  0.6236339
bspl5.9  -4.5961507 -2.71005479 -8.2087997  5.0472318  2.44033676 -4.5393784
bspl5.10 10.8721056  6.60583321 11.6365059 -3.2789886  2.26767917 10.3362863
bspl5.11 -1.1449582  1.21667457 -3.5414518  3.1796837  2.17906833 -0.8973928
bspl5.12  2.8611270  3.00690862  0.9434163  1.0579650  2.84526273  1.8116501
bspl5.13  1.1022279  2.22579994  0.9511486  1.9553469  2.79096552  2.0777501
bspl5.14  2.3070444  2.74392662  0.3918865  1.3680664  2.80709027  2.4522811
bspl5.15  1.3378494  2.37084231  2.4282879  1.7304521  2.80244887  1.9593535
bspl5.16  2.4152770  2.67943584  2.1837422  2.8880069  2.80345942  2.5074744
             [,172]     [,173]     [,174]     [,175]       [,176]     [,177]
bspl5.1   1.5993876  1.7917594  1.6074359  1.0986124  -0.01005011  1.6094380
bspl5.2   1.7095863  1.6762319  1.4825656  1.3562506   0.71663572  1.8607632
bspl5.3   1.8369567  1.5427013  1.3382384  1.6642903   1.56286806  2.1512556
bspl5.4   1.7406041  1.6436895  1.4474438  1.4865320   0.95688209  1.9316216
bspl5.5   1.2403144  2.1682520  2.0142603  0.4116906  -2.28440152  0.7902543
bspl5.6   1.4935665  1.9023577  1.7276228  0.9500910  -0.64234963  1.3696258
bspl5.7   2.4771871  0.8726713  0.6118200  3.0626594   5.70842114  3.6061785
bspl5.8   1.2527126  2.1529357  2.0041591  0.4191371  -2.25409983  0.8313997
bspl5.9  -0.5503734  4.0560207  4.0197408 -3.3211921 -13.44564357 -3.3587356
bspl5.10  4.6197760 -1.4261623 -1.7877385  8.6393219  22.80956018  8.7120756
bspl5.11  1.2525181  2.7942432  2.0731118  0.3169203  -4.32851661 -1.3508522
bspl5.12  1.9458132  1.5044830  2.8530070  3.1067528   2.86789498  4.1797702
bspl5.13  1.8462663  2.2456022  0.6452958  1.8652845   1.43017678 -0.2012487
bspl5.14  2.5517620  1.7030653  2.4490250  2.7178620   1.93931754  3.0625853
bspl5.15  2.0366274  2.2049780  1.6160934  2.0186068   2.53844782  1.4164483
bspl5.16  2.5187436  2.4036556  2.2076530  2.9724341   2.60296902  2.6997546
             [,178]     [,179]    [,180]     [,181]       [,182]       [,183]
bspl5.1   0.6881348  1.9459103 2.3969858  2.0794416  -0.01005045  1.386294502
bspl5.2   1.0634313  2.2804844 2.4852779  2.3620607  -0.38288864  1.833638205
bspl5.3   1.4972121  2.6671959 2.5873288  2.6887212  -0.81382311  2.350695091
bspl5.4   1.1691853  2.3747235 2.5101490  2.4416735  -0.48780993  1.959710504
bspl5.5  -0.5350131  0.8555792 2.1092496  1.1584079   1.20476970 -0.071690091
bspl5.6   0.3296175  1.6255475 2.3124686  1.8089230   0.34806037  0.958810424
bspl5.7   3.6712331  4.6078584 3.0993739  4.3276960  -2.98022791  4.942532659
bspl5.8  -0.4863174  0.8992310 2.1210145  1.1962379   1.16934789 -0.004765109
bspl5.9  -6.6451892 -4.6075632 0.6662316 -3.4615542   7.21707646 -7.422505801
bspl5.10 11.4535171 11.2573807 4.8573966  9.9573184 -10.25862638 13.946925536
bspl5.11 -2.9349310 -0.9140683 1.6184792 -0.4291184   2.72298257 -3.269291175
bspl5.12  2.8334954  2.6548331 2.6437789  2.9110869   3.83030452  4.421546982
bspl5.13  1.0399312  1.5421885 2.2439765  1.5576581  -0.30660558 -0.704409565
bspl5.14  2.1508946  2.1817177 2.5051770  2.4563064   3.09725861  3.033966744
bspl5.15  1.4353810  1.9191690 2.3184934  1.7860368   1.83142037  0.984234255
bspl5.16  2.3151880  2.3973148 2.4723419  2.4105893   2.12990299  2.275365287
            [,184]     [,185]        [,186]     [,187]     [,188]      [,189]
bspl5.1  1.9387416  1.6074359 -7.049687e-08  1.0986122 -4.6051700 -0.01005037
bspl5.2  1.8845812  1.5397085 -2.246069e-01  0.7967598 -2.5247263 -0.14280397
bspl5.3  1.8219809  1.4614234 -4.842228e-01  0.4478706  0.6883982 -0.29711155
bspl5.4  1.8693277  1.5205376 -2.878657e-01  0.7117751  2.6106647 -0.18673206
bspl5.5  2.1152390  1.8283576  7.318473e-01  2.0822243  0.6545680  0.42925633
bspl5.6  1.9906245  1.6711218  2.181368e-01  1.3881121  1.0616996  0.26214340
bspl5.7  1.5077505  1.0725583 -1.797348e+00 -1.3045956  5.4547198 -0.21777647
bspl5.8  2.1084017  1.8079398  6.433822e-01  2.0474338  0.4113202  3.21975133
bspl5.9  2.9983669  2.9968248  4.890519e+00  6.9863930 -7.5757979  6.65053879
bspl5.10 0.4343719 -0.4279567 -3.590040e+00 -7.2410643 15.5450746 -4.07228444
bspl5.11 2.3794973  3.3254830  4.114355e+00  3.1992830 -2.3582138  4.57506005
bspl5.12 1.8797566 -1.3874826  3.142846e-01  1.6436184  3.4109210  1.41192122
bspl5.13 1.9616264  3.3695189  2.871649e+00  1.6704309  1.0617791  3.05956866
bspl5.14 1.9401156  1.3018184  1.796709e+00  1.8119892  2.6264062  1.86591314
bspl5.15 1.8934167  2.6230264  2.270511e+00  1.7301972  1.4445774  2.93530195
bspl5.16 2.0919429  2.5378949  2.320586e+00  2.3153548  2.6398141  2.82925988
              [,190]
bspl5.1  -0.01005033
bspl5.2   0.01800916
bspl5.3   0.05043314
bspl5.4   0.02598725
bspl5.5  -0.10179229
bspl5.6  -0.03202365
bspl5.7   0.19669678
bspl5.8  -0.16834806
bspl5.9   0.04674408
bspl5.10  4.36309100
bspl5.11  1.06578780
bspl5.12  1.44741005
bspl5.13  2.52514617
bspl5.14  2.26798243
bspl5.15  2.28235184
bspl5.16  2.34185373
> pca.spline <- function(xlist, ylist, ncomp = 3){
+ 	knots <- c(0,1,2,3,4,5,6,6.25,6.5,6.75,6.8125,6.875,6.9375,7)
+ 	numk<-length(knots)
+ 	numplot <- length(plotpoints)
+ 	norder <- 5
+ 	nbasis <- numk + 2
+ 	lambda <- 0.1
+ 	numauct<-N.auc
+ 	wbasis <- create.bspline.basis(rangeval=c(0,7),nbasis=nbasis, norder=5)
+ 	Wfd <- list(0); length(Wfd) <- numauct
+ 	bids <- array(0,length(knots)*length(xlist), dim = c(length(knots),length(xlist)))
+ 	for(i in 1:length(xlist)){
+ 		for(j in 1:length(knots)){
+ 		  bids[j, i]=StepCheck(xlist[[i]],ylist[[i]],knots[j])	
+ 		} 
+ 	}
+ 	
+ 	
+ 	Wfd <- Data2fd(knots,bids,basisobj=wbasis)
+ 	coef <- as.matrix(Wfd$coefs)
+ 	PCA <- pca.fd(Wfd, nharm = ncomp)
+     
+     # cumsum(PCA$varprop)
+ 	# par(mfrow = c(4, 1))
+ 	# plot.pca.fd(PCA,harm=1,pointplot=FALSE)
+ 	# plot.pca.fd(PCA,harm=2,pointplot=FALSE)
+ 	# plot.pca.fd(PCA,harm=3,pointplot=FALSE)
+ 	# plot.pca.fd(PCA,harm=4,pointplot=FALSE)
+ 
+ 	return(list(Wfd, PCA))
+ 	
+ }
> 
> 
> pca.all <- pca.spline(xlist, ylist, ncomp = 3)
> coef.mat <- pca.all[[1]]
> pca.ebay <- pca.all[[2]]
> coef.mat
Functional data object:

 Dimensions of the data:
    time 
     reps 
     values 

Basis object:

  Type:   bspline 

  Range:  0  to  7 

  Number of basis functions:  16 

  Order of spline:  5 
[1] "  Interior knots"
 [1] 0.5833333 1.1666667 1.7500000 2.3333333 2.9166667 3.5000000 4.0833333 4.6666667
 [9] 5.2500000 5.8333333 6.4166667
> Wfd
Functional data object:

 Dimensions of the data:
    time 
     reps 
     values 

Basis object:

  Type:   bspline 

  Range:  0  to  7 

  Number of basis functions:  16 

  Order of spline:  5 
[1] "  Interior knots"
 [1] 0.5833333 1.1666667 1.7500000 2.3333333 2.9166667 3.5000000 4.0833333 4.6666667
 [9] 5.2500000 5.8333333 6.4166667
> coef
function (object, ...) 
UseMethod("coef")
<bytecode: 0x10c0c7b18>
<environment: namespace:stats>
> pca.spline <- function(xlist, ylist, ncomp = 3){
+ 	knots <- c(0,1,2,3,4,5,6,6.25,6.5,6.75,6.8125,6.875,6.9375,7)
+ 	numk<-length(knots)
+ 	numplot <- length(plotpoints)
+ 	norder <- 5
+ 	nbasis <- numk + 2
+ 	lambda <- 0.1
+ 	numauct<-N.auc
+ 	wbasis <- create.bspline.basis(rangeval=c(0,7),nbasis=nbasis, norder=5)
+ 	Wfd <- list(0); length(Wfd) <- numauct
+ 	bids <- array(0,length(knots)*length(xlist), dim = c(length(knots),length(xlist)))
+ 	for(i in 1:length(xlist)){
+ 		for(j in 1:length(knots)){
+ 		  bids[j, i]=StepCheck(xlist[[i]],ylist[[i]],knots[j])	
+ 		} 
+ 	}
+ 	
+ 	
+ 	Wfd <- Data2fd(knots,bids,basisobj=wbasis)
+ 	coef <- as.matrix(Wfd$coefs)
+ 	PCA <- pca.fd(Wfd, nharm = ncomp)
+     
+     # cumsum(PCA$varprop)
+ 	# par(mfrow = c(4, 1))
+ 	# plot.pca.fd(PCA,harm=1,pointplot=FALSE)
+ 	# plot.pca.fd(PCA,harm=2,pointplot=FALSE)
+ 	# plot.pca.fd(PCA,harm=3,pointplot=FALSE)
+ 	# plot.pca.fd(PCA,harm=4,pointplot=FALSE)
+ 
+ 	return(list(coef, PCA))
+ 	
+ }
> 
> 
> pca.all <- pca.spline(xlist, ylist, ncomp = 3)
> coef.mat <- pca.all[[1]]
> pca.ebay <- pca.all[[2]]
> coef.mat
              [,1]     [,2]     [,3]          [,4]       [,5]      [,6]       [,7]
bspl5.1   3.911823 2.301585 3.912023  1.524790e-07  3.9118232  4.317488  3.1986733
bspl5.2   4.228227 2.392244 3.935896  4.275252e-01  4.4914354  4.606385  3.8332894
bspl5.3   4.593161 2.503089 3.963491  9.178130e-01  5.1613654  4.940301  4.5967873
bspl5.4   4.312370 2.451222 3.942637  5.220683e-01  4.6545786  4.687765  4.1804212
bspl5.5   2.884372 2.103692 3.834187 -1.372058e+00  2.0232014  3.375999  1.5809363
bspl5.6   3.761077 2.328567 3.889361  3.193468e-01  3.3553986  4.040943  2.9023470
bspl5.7   6.771818 3.313336 4.101290  5.608878e+00  8.5282401  6.615742  8.1898629
bspl5.8   2.961797 3.325797 3.839275  1.813968e+00  2.0846530  3.414495  2.3194194
bspl5.9  -2.383743 2.754921 3.433700 -5.143380e+00 -7.3646573 -1.345637 -6.8433229
bspl5.10 14.723210 5.114627 4.601961  1.565849e+01 19.8573808 12.368091 19.2068522
bspl5.11  1.971547 3.372777 3.516038 -1.558475e-01  0.3778963  1.770171 -0.5202687
bspl5.12  5.801346 4.070958 4.444142  3.935324e+00  1.6723216  5.125009  5.2477911
bspl5.13  5.011221 4.453418 3.534502  3.195236e+00  5.1069457  3.816833  3.4671280
bspl5.14  5.280732 4.499480 4.202410  3.567790e+00  4.6744512  4.671496  4.4801326
bspl5.15  5.883656 4.268213 4.088014  3.705728e+00  4.3090750  4.060657  4.0942805
bspl5.16  5.711381 4.918305 5.087839  4.050761e+00  5.0418245  4.564057  4.7654086
              [,8]      [,9]      [,10]      [,11]     [,12]     [,13]    [,14]
bspl5.1   2.301585  4.382027  1.6094379  4.3820267  2.301585  4.317488 3.912023
bspl5.2   2.085010  4.062727  1.5215287  4.6333887  2.444150  4.830471 3.893502
bspl5.3   1.920006  3.693671  1.4721355  4.9239275  2.606817  5.423393 3.872094
bspl5.4   2.498298  3.972788  1.7901508  4.7042077  2.470622  4.974973 3.888252
bspl5.5   4.412218  5.422584  2.6700294  3.5629057  1.847284  2.645724 3.972455
bspl5.6   4.700689  4.687731  2.1176696  4.1394269  2.576890  3.826438 3.929303
bspl5.7   2.935928  1.841721  0.7184147  6.3882764  4.388027  8.398406 3.766218
bspl5.8   5.102522  5.380601  4.6820969  3.6487062  2.029299  2.714078 3.966668
bspl5.9   8.591636 10.638059  9.3100884 -0.4476218 -1.316329 -5.738298 4.290884
bspl5.10 -1.303141 -4.508514 -3.7286054 11.3262876  8.457081 18.612624 3.329743
bspl5.11  6.751385  7.142851  6.0708097  2.3926448  1.994939 -0.205682 4.845134
bspl5.12  2.887955  3.626576  3.9759707  4.6982739  4.748581  5.751371 3.721849
bspl5.13  5.377773  4.827942  4.6219563  4.1908586  3.855107  3.428495 4.657100
bspl5.14  4.905024  4.099069  4.2875006  4.8368987  4.422818  4.946086 4.795035
bspl5.15  4.887419  4.485704  4.3182513  4.1790612  4.005015  3.861443 4.700789
bspl5.16  5.739046  5.169182  4.9434166  5.0105416  4.917339  4.755312 4.725656
                [,15]    [,16]     [,17]    [,18]      [,19]     [,20]      [,21]
bspl5.1   -0.01005001 2.564180  3.912023 2.301585  3.6888796  3.218876  3.4008641
bspl5.2    1.73973058 2.613881  4.347852 2.267220  4.2631817  3.908987  3.7185842
bspl5.3    4.18095028 2.671326  4.851593 2.233884  4.9262503  4.763623  4.0858160
bspl5.4    4.58896176 2.627860  4.470543 2.293313  4.4202091  4.423986  3.8080942
bspl5.5    0.52354971 2.402257  2.491860 2.506830  1.8209169  1.818464  2.3654181
bspl5.6    2.27437860 2.516298  3.494109 2.362438  3.2801998  3.095333  3.0968613
bspl5.7   10.57199666 2.960604  7.381629 2.081631  8.5868300  8.260325  5.9279603
bspl5.8    0.67823737 2.407342  2.535376 3.478296  1.9481944  1.932390  2.4091419
bspl5.9  -14.41934456 1.595395 -4.538373 4.921474 -7.8230128 -7.506306 -2.8349150
bspl5.10  28.77380195 3.899046 16.156313 1.025811 20.3632556 19.695347 12.2714704
bspl5.11  -4.19913610 2.857289  1.300401 3.158425 -0.8439586 -0.828079  0.4868081
bspl5.12   4.96971541 3.218218  3.056116 5.256903  4.0287369  4.077321  4.7046807
bspl5.13   2.77737983 3.046340  5.038197 1.849895  3.9363573  3.728372  3.0080792
bspl5.14   3.70296984 3.162538  4.675616 4.380324  3.4313385  3.464022  4.4704219
bspl5.15   4.58063600 3.072278  4.795712 4.636153  5.0483855  4.755585  4.5398049
bspl5.16   4.54166928 3.319845  5.012187 4.560643  4.5776004  4.360664  4.8059666
            [,22]     [,23]    [,24]        [,25]    [,26]        [,27]
bspl5.1  4.442651  4.317488 5.010635  -0.01005055 1.098612  -0.01005002
bspl5.2  4.324442  4.722178 5.003976  -0.51927622 1.668636   0.89249523
bspl5.3  4.187812  5.189932 4.996279  -0.94604749 2.621509   1.95475501
bspl5.4  4.291136  4.836177 5.002100   0.24044680 3.482635   1.24483729
bspl5.5  4.827901  2.998636 5.032337   4.23333359 3.639841  -2.45358967
bspl5.6  4.555713  3.930123 5.017015   3.81765239 3.538435   1.51297568
bspl5.7  3.502583  7.536833 4.957641  -1.46132983 3.827768  11.81076645
bspl5.8  4.811221  3.052778 5.031496   4.73181079 4.279404  -1.45701194
bspl5.9  6.764899 -3.616659 5.140925  14.34725828 4.577862 -20.37595534
bspl5.10 1.136553 15.597669 4.825661 -12.99988956 4.767641  34.60390977
bspl5.11 5.574931  0.728111 5.064830   7.02180753 4.599240  -6.33095433
bspl5.12 3.886238  5.501573 5.003383   4.20492017 4.609631   1.62110884
bspl5.13 4.823576  3.575533 5.013449   1.48828488 4.644817   3.10227561
bspl5.14 4.123139  4.852168 5.010804   6.02909937 4.620324   1.90617851
bspl5.15 4.821621  3.904202 5.005062   4.27061329 4.612534   4.61527584
bspl5.16 4.885416  4.777056 5.029473   5.24186519 5.386405   4.28937483
                 [,28]    [,29]    [,30]      [,31]     [,32]      [,33]
bspl5.1  -8.219951e-08 4.382027 4.248352 -4.6051701  1.098612  3.9118231
bspl5.2   7.167172e-02 4.406701 4.394014 -3.0156796  1.445747  4.3453495
bspl5.3   3.699423e-01 4.435221 4.562375 -0.2953005  2.001094  4.8464324
bspl5.4   1.300594e+00 4.413652 4.435038  2.3949893  2.405373  4.4674370
bspl5.5   3.036365e+00 4.301615 3.773672  3.5279101  2.388789  2.4990718
bspl5.6   2.559263e+00 4.358407 4.108811  3.9019771  3.533328  3.4964216
bspl5.7   6.506128e-01 4.578318 5.407500  4.5266599  5.463849  7.3620472
bspl5.8   6.037617e+00 4.304903 3.792011  3.6588198  2.914501  2.5527401
bspl5.9   1.217650e+01 3.898344 1.398811  2.4664136 -0.492446 -4.5641670
bspl5.10 -6.913228e+00 5.069621 8.293652  5.9274032 10.278437 15.9398868
bspl5.11  7.963998e+00 4.164463 3.067594  4.0182479  1.952840  0.4853864
bspl5.12  3.274673e+00 4.450996 4.395240  2.1840829  4.479704  4.1280668
bspl5.13  5.517396e+00 4.339266 4.202295  4.8119632  4.243755  3.9708910
bspl5.14  3.943364e+00 4.412262 4.212279  4.3646533  4.960488  4.1913802
bspl5.15  5.288705e+00 4.360091 4.535622  4.2361949  4.394195  4.2975929
bspl5.16  5.347347e+00 4.403086 4.492923  4.7554850  5.360597  4.8381415
                 [,34]      [,35]     [,36]     [,37]      [,38]         [,39]
bspl5.1   3.607970e-07 -4.6051701 4.0941779 -4.605170 -4.6051702  1.020645e-07
bspl5.2   1.148638e+00 -3.1441797 4.2641339 -2.364173 -3.0941249  9.708542e-01
bspl5.3   2.476262e+00 -0.6520966 4.4605745  1.316839 -0.4639634  2.478415e+00
bspl5.4   1.471954e+00  1.7840451 4.3120048  4.402245  2.2973656  3.411645e+00
bspl5.5  -3.742782e+00  2.6977959 3.5403157  4.396160  3.7813711  2.607234e+00
bspl5.6  -1.102186e+00  2.6410554 3.9314355  4.196325  3.8888773  3.042767e+00
bspl5.7   9.146830e+00  2.7836237 5.4464054  5.926550  3.7183876  5.376883e+00
bspl5.8  -3.627561e+00  2.6450046 3.5624386  4.931480  3.9954547  2.881638e+00
bspl5.9  -2.228955e+01  2.3084370 0.7654348  2.461760  4.3496619 -1.149648e+00
bspl5.10  3.202114e+01  3.1881345 8.8234569  9.006807  3.3222037  1.021552e+01
bspl5.11 -5.574946e+00  2.5181905 2.6477385  3.965316  4.3956122  1.680920e+00
bspl5.12 -1.254196e+00  2.9665477 4.4390855  5.569520  3.6418516  3.738281e+00
bspl5.13  3.643212e+00  4.3354433 3.8568662  4.936329  4.6239026  3.569384e+00
bspl5.14  1.470020e+00  4.1632695 4.3607301  5.350727  4.4160303  3.479285e+00
bspl5.15  4.203591e+00  4.1639696 3.8963862  5.054296  4.5523564  3.993517e+00
bspl5.16  3.405298e+00  4.8738224 4.8021113  5.298693  5.1725928  3.830708e+00
            [,40]      [,41]    [,42]       [,43]      [,44]       [,45]
bspl5.1  1.098612  0.6931473 4.595120   2.3025854  2.3025852 -0.01005019
bspl5.2  1.565084  1.2188701 4.642551   3.1625109  2.8064338  1.14662490
bspl5.3  2.261891  1.8265125 4.697372   4.1564404  3.4807812  2.89726993
bspl5.4  2.580462  1.3668235 4.655892   3.4047219  3.4659339  3.79840538
bspl5.5  1.984543 -1.0198321 4.440590  -0.4997864  2.0303048  2.43051415
bspl5.6  2.714099  0.1881843 4.549492   1.4791449  2.6894965  3.30917983
bspl5.7  5.118922  4.8812810 4.973214   9.1444899  5.5791718  6.95569103
bspl5.8  3.972097 -0.9665905 4.443975  -0.3879986  2.0941868  2.43474209
bspl5.9  1.244020 -9.5217661 3.682596 -14.5390162 -3.1894888 -4.23416569
bspl5.10 8.262782 15.1195282 5.905217  26.2296605 11.9384043 15.55461905
bspl5.11 4.017085 -2.1858961 4.430070  -5.0068150  0.6083599  0.63325398
bspl5.12 1.691535 -1.7434221 4.119783   4.0219206  4.6123242  4.10456421
bspl5.13 5.974526  2.9664243 4.983274   1.2829791  4.1959546  4.20660413
bspl5.14 4.318366  2.0886720 4.748600   3.0521449  4.4064386  4.07618092
bspl5.15 5.361008  3.3387031 4.791715   2.1194190  4.5819413  4.72916914
bspl5.16 5.196815  3.4883446 4.808600   3.6385376  4.8607262  4.78334795
                 [,46]      [,47]    [,48]    [,49]     [,50]     [,51]       [,52]
bspl5.1   3.891695e-07  3.9120231 5.164786 4.094345  4.094344  4.094178 -0.01005027
bspl5.2   1.246651e+00  4.1454355 5.179031 4.185210  3.772376  3.900231  0.95367840
bspl5.3   2.688009e+00  4.4150178 5.195495 4.290235  3.400234  3.676061  2.52631524
bspl5.4   1.599402e+00  4.2098797 5.183043 4.210809  3.681670  3.845605  3.80489768
bspl5.5  -4.061534e+00  3.1523148 5.118364 3.798215  5.143635  4.726218  3.71644023
bspl5.6  -1.310619e+00  3.7285062 5.151150 4.007413  4.402414  4.279918  3.78387495
bspl5.7   1.030627e+01  5.8601479 5.278105 4.817035  1.533450  2.550987  4.76716662
bspl5.8  -4.536727e-01  3.2008855 5.120262 3.810782  5.099407  4.701226  3.61698366
bspl5.9  -1.871589e+01 -0.7521738 4.885556 2.310707 10.412952  7.891414  1.78993923
bspl5.10  3.212065e+01 10.6474004 5.561734 6.632880 -4.894978 -1.299481  6.93625759
bspl5.11 -5.686915e+00  1.6688921 5.039186 3.239183  7.061740  5.721816  3.57314542
bspl5.12  3.427391e+00  5.0359894 5.204602 4.478443  2.871772  3.759193  3.79819622
bspl5.13  2.679101e+00  3.9126079 5.140100 4.143415  4.900503  4.268191  5.10745621
bspl5.14  2.274823e+00  4.6013192 5.182241 4.331700  3.461891  4.019215  4.71238574
bspl5.15  4.572334e+00  4.3014821 5.152122 4.253265  4.712635  4.002243  4.88252499
bspl5.16  3.844980e+00  4.7315793 5.176943 4.616296  5.129999  4.845098  4.94400307
                [,53]      [,54]      [,55]     [,56]     [,57]       [,58]
bspl5.1   4.248495193  3.9118232  3.9120231 2.3025851  4.488636  2.99573233
bspl5.2   4.092111226  4.4566381  4.2624510 2.4015642  4.260597  3.26312914
bspl5.3   3.911359926  5.0863532  4.6674873 2.5159664  3.997025  3.62690711
bspl5.4   4.048122886  4.6101078  4.3611672 2.4294118  4.196428  3.64510501
bspl5.5   4.757996514  2.1363192  2.7700013 1.9800978  5.231648  2.96753703
bspl5.6   4.398979796  3.3903016  3.5766249 2.2073571  4.707754  3.55244377
bspl5.7   3.001730895  8.2459770  6.6996129 3.0916296  2.671695  5.33530540
bspl5.8   4.745004421  2.2089154  2.8171158 1.9903193  5.209521  3.17688651
bspl5.9   7.271453760 -6.7679632 -2.9594566 0.3749721  8.913974 -0.03942452
bspl5.10 -0.007917244 19.0940265 13.6837491 4.9858517 -1.759239  9.41287187
bspl5.11  4.864399394 -0.8920271  0.7617582 2.4220765  5.696548  1.69953851
bspl5.12  5.726052864  5.4346836  5.0319285 2.9444892  5.866007  5.39868553
bspl5.13  3.120210505  2.9676648  3.8365479 3.1355393  3.398893  4.16427916
bspl5.14  5.192130212  4.5794277  4.5037010 3.4363811  5.450358  4.95592464
bspl5.15  4.724816022  3.4274785  4.2544394 3.8563044  4.686434  4.49755724
bspl5.16  5.517019102  4.3768150  4.5866881 3.8789004  4.866629  4.85743827
                 [,59]      [,60]     [,61]    [,62]      [,63]     [,64]
bspl5.1   1.039082e-07 -0.0100503 0.6881347 1.609438 -4.6051702 2.3015846
bspl5.2   9.000275e-01  1.0279706 1.0478426 1.611769 -3.8567894 2.3889204
bspl5.3   2.309700e+00  2.7557461 1.5781025 1.614510 -2.3996124 2.4898630
bspl5.4   3.227681e+00  4.2914418 1.7896417 1.612546 -0.3359827 2.4134491
bspl5.5   2.671032e+00  4.4701184 1.2932246 1.602089  2.2971430 2.0171242
bspl5.6   3.702075e+00  4.0003121 2.1320544 1.593645  5.6985260 2.2171269
bspl5.7   6.534866e+00  4.0007385 4.6106215 1.673008  8.2816217 2.9992899
bspl5.8   3.156597e+00  4.1894149 4.0038222 1.975059  3.9725407 2.0188707
bspl5.9  -1.811217e+00  4.1614393 1.6240158 2.271877 -0.9856319 0.6457899
bspl5.10  1.298334e+01  4.0254202 7.3674305 1.537847 14.3227121 4.7532071
bspl5.11  1.733114e+00  4.1424311 3.0250669 4.289669  2.4913249 4.2321963
bspl5.12  4.652964e+00  4.0857489 4.5735212 2.853135  6.1299235 4.3020874
bspl5.13  4.425571e+00  4.3771144 4.3000845 4.508610  4.8574269 4.3682238
bspl5.14  4.301749e+00  4.1286784 4.3945484 4.048384  5.6575611 4.2682220
bspl5.15  4.990730e+00  4.3869740 4.5043176 4.007980  5.1244025 4.4914670
bspl5.16  4.827103e+00  4.7269387 4.6508136 4.940247  5.9365451 4.6052055
               [,65]    [,66]      [,67]     [,68]     [,69]     [,70]       [,71]
bspl5.1  -0.01005033 4.381902  4.8283137 3.8918203  3.688629  4.442651 -0.01005031
bspl5.2   0.46221719 4.524079  4.6192878 4.0429831  3.462346  4.156323  1.12738719
bspl5.3   1.30500776 4.688413  4.3776889 4.2177027  3.200802  3.825376  3.05950021
bspl5.4   2.26133144 4.564136  4.5604095 4.0855815  3.398660  4.075665  4.92196956
bspl5.5   2.98404201 3.918544  5.5095050 3.3991563  4.425943  5.375773  5.47655306
bspl5.6   3.50227865 4.245878  5.0284342 3.7473339  3.905940  4.716691  4.72848489
bspl5.7   3.84908866 5.512706  3.1653474 5.0936336  1.886085  2.164990  4.15024303
bspl5.8   3.24283428 3.938242  5.4819668 3.4213709  4.402781  5.337829  5.86574271
bspl5.9   2.58056242 1.590765  8.9240567 0.9174998  8.086451 10.053021  7.49377380
bspl5.10  4.61883765 8.353659 -0.9924909 8.1321615 -2.526683 -3.546988  2.18307011
bspl5.11  3.70715305 3.055165  6.6409324 2.3358136  5.003208  7.203431  5.50152640
bspl5.12  3.07298808 4.962840  4.3205177 4.8619225  4.763673  4.084503  7.07959983
bspl5.13  4.43417082 3.996540  5.1307100 3.9325277  2.861357  5.020958  3.94709879
bspl5.14  3.21931861 4.683122  4.6322429 4.5601158  4.491463  4.495487  6.53596314
bspl5.15  4.76183458 4.137333  4.9165425 4.0369071  3.752127  4.676024  5.55834924
bspl5.16  4.53826416 4.797418  4.9882554 4.7618837  4.510363  5.324948  5.95300122
              [,72]     [,73]    [,74]       [,75]        [,76]    [,77]      [,78]
bspl5.1   4.4886365 4.3820267 2.995232 -0.01005019  -0.01005007 2.301585  3.2184757
bspl5.2   5.0576996 4.5613900 3.061331  0.94914245   1.61927590 2.547831  2.9354117
bspl5.3   5.7154411 4.7687039 3.137599  2.35805303   3.94771843 2.924799  2.6082381
bspl5.4   5.2179914 4.6119127 3.079096  2.90667017   4.58329725 3.136397  2.8557083
bspl5.5   2.6341287 3.7975027 2.780474  1.38160130   1.31297634 2.871216  4.1408817
bspl5.6   3.9437996 4.2103026 2.957388  2.38489444   2.67285645 2.874214  3.4898822
bspl5.7   9.0160457 5.8090119 3.580409  6.28655092   9.47219310 3.733618  0.9651057
bspl5.8   2.7089182 3.8211092 2.798947  1.75343272   1.47498891 4.753283  4.1066225
bspl5.9  -6.6608430 0.8676338 1.649946 -5.07081693 -10.54344779 4.900624  8.7503464
bspl5.10 20.3331526 9.3765017 4.954478 14.41827184  25.69958470 3.462908 -4.5808595
bspl5.11 -0.4285114 2.8289440 2.655161  1.08868666  -1.81408781 4.523086  5.4664150
bspl5.12  5.8268364 4.8119653 3.568451 -0.19399766   5.14688724 4.458385  3.9092799
bspl5.13  3.6996124 4.1268083 4.841159  5.18477618   3.88155098 4.220358  4.8011249
bspl5.14  4.9890977 4.5467012 4.622847  4.36562863   5.38558189 4.448131  4.2271012
bspl5.15  4.2975890 4.3087295 4.440537  4.31341214   4.06199889 4.146822  4.5357581
bspl5.16  5.1130692 4.5408699 5.289311  4.72565431   5.49077090 4.751413  4.7698021
            [,79]     [,80]     [,81]         [,82]      [,83]      [,84]      [,85]
bspl5.1  4.605170  2.301585  4.317488  1.368308e-07  3.2184759  2.3015848  3.4008642
bspl5.2  4.767069  2.770710  4.600636  1.171700e+00  3.8216561  2.8107414  3.9915545
bspl5.3  4.954194  3.312995  4.927908  2.971353e+00  4.5188269  3.3992361  4.7262827
bspl5.4  4.812623  2.902378  4.680399  4.005466e+00  3.9914443  2.9540260  4.4503981
bspl5.5  4.077654  0.774707  3.394728  2.865626e+00  1.2530347  0.6425976  2.2504058
bspl5.6  4.450021  1.820180  4.046480  3.623912e+00  2.6395710  1.8124555  3.3267257
bspl5.7  5.893735  6.419215  6.569893  6.974251e+00  8.0221092  6.3580128  7.6867474
bspl5.8  4.083484  3.284258  3.432781  3.397733e+00  1.3183053  0.6932643  2.2733415
bspl5.9  1.543512 -2.990489 -1.234675 -2.334577e+00 -8.5234526 -7.5863528 -5.6850679
bspl5.10 9.443961 13.918155 12.212282  1.385697e+01 19.8319589 16.2641338 17.2216361
bspl5.11 4.070081  1.054643  1.785266  1.646800e+00 -0.6351732 -0.4450042  0.9340728
bspl5.12 3.380159  4.597951  5.195855  4.582434e+00  1.2260422 -0.4285077  1.5887906
bspl5.13 5.579543  3.942382  3.899826  4.225290e+00  5.0045231  3.8943495  4.9691365
bspl5.14 5.043639  4.504480  4.743362  4.850564e+00  3.6948066  3.0863769  4.4500475
bspl5.15 5.086056  4.193420  4.141610  4.413839e+00  4.8354546  2.9016395  4.1862614
bspl5.16 5.194343  4.749870  4.637058  4.913444e+00  4.5936746  3.3744384  4.7257062
              [,86]         [,87]     [,88]     [,89]    [,90]     [,91]     [,92]
bspl5.1   4.5951199  7.250855e-08  3.912023  3.688880 3.912023  4.007333 4.0073332
bspl5.2   4.8491846  2.223597e-01  4.267356  3.951526 4.032502  3.793522 4.1971782
bspl5.3   5.1428410  5.041110e-01  4.678061  4.255099 4.171757  3.545944 4.4166073
bspl5.4   4.9207525  4.203043e-01  4.367449  4.025454 4.066480  3.730413 4.2506570
bspl5.5   3.7671454 -2.783798e-01  2.754026  2.833066 3.519305  4.706253 3.3886429
bspl5.6   4.3519177  7.910893e-01  3.571915  3.436700 3.797193  4.299816 3.8256183
bspl5.7   6.6162751  3.604212e+00  6.738684  5.780905 4.868766  2.511324 5.5175571
bspl5.8   3.8009993  2.013562e+00  2.800255  2.862389 3.540310  4.741398 3.4140715
bspl5.9  -0.3852075 -1.427763e+00 -3.044611 -1.432552 1.523482  8.038282 0.2851652
bspl5.10 11.6750691  7.633586e+00 13.852895 10.895800 7.333629 -1.425385 9.2993990
bspl5.11  2.3549302  1.351829e+00  0.794913  2.670682 2.364146  5.788195 2.3204697
bspl5.12  5.3052787  4.022870e+00  4.902510  4.184683 5.464956  5.240424 4.5703619
bspl5.13  4.1548285  3.072748e+00  4.289296  4.665714 2.946363  3.803492 3.6579998
bspl5.14  4.9064454  3.692370e+00  4.429563  4.001779 4.694932  5.051608 4.2468270
bspl5.15  4.3692545  3.232099e+00  4.871637  5.302422 4.894751  4.564715 3.9331788
bspl5.16  4.8119606  3.665867e+00  4.814130  4.981024 4.795794  4.830853 4.4802218
                [,93]      [,94]        [,95]       [,96]     [,97]      [,98]
bspl5.1  -4.605170239  2.3025851  1.383791408   1.6094381 1.8718022 -4.6051701
bspl5.2  -2.956898943  2.2036678  1.947687952   2.3545081 1.9462231 -3.2315140
bspl5.3  -0.002586779  2.0893361  2.599505472   3.2156845 2.0322412 -0.9498562
bspl5.4   3.411309030  2.1758054  2.106629340   2.5643879 1.9671868  1.0603965
bspl5.5   5.647601477  2.6249438 -0.453569902  -0.8186792 1.6292711  1.2521627
bspl5.6   3.761611187  2.3972948  0.829365727   0.8962234 1.8005632  0.6600335
bspl5.7   0.064314554  1.5155972  5.918385153   7.5366759 2.4638408  0.7293866
bspl5.8   5.045823493  2.6119789  0.009310495  -0.7193992 1.6391877  0.8565333
bspl5.9  11.746032810  4.2404484 -8.949574184 -12.9958655 0.4129601  0.9621922
bspl5.10 -7.988388270 -0.4511268 16.657937562  22.3720905 3.9456674  2.9396882
bspl5.11  6.206189048  3.1538796 -1.966376574  -4.9601401 1.2156038  0.6199981
bspl5.12  5.118779913  2.0785830  0.241972770   3.6920490 2.0798226  3.6236254
bspl5.13  2.901185261  2.4329306  2.356533999   0.3182400 1.7428316  0.9730097
bspl5.14  4.840569252  2.2226033  2.368962957   2.5224309 1.9629959  2.9916700
bspl5.15  4.334552329  2.3235318  1.833164175   0.9470653 1.8056415  2.0404996
bspl5.16  4.523642748  2.4504021  2.496317501   2.2453448 1.9353194  2.5112180
              [,99]     [,100]     [,101]     [,102]    [,103]     [,104]
bspl5.1   1.3837913  2.3015846  2.3015847  1.7900915 1.6094379 -4.6051702
bspl5.2   1.6923689  2.4429414  2.4848435  2.0339849 1.5641107 -3.1385722
bspl5.3   2.0490355  2.6063262  2.6966602  2.3158851 1.5117197 -0.6204439
bspl5.4   1.7793589  2.4827604  2.5364660  2.1026912 1.5513326  1.9055952
bspl5.5   0.3780181  1.8409154  1.7043601  0.9952565 1.7571769  2.8711505
bspl5.6   1.0892272  2.1662715  2.1261609  1.5566697 1.6527053  1.7913713
bspl5.7   3.8358102  3.4261169  3.7594598  3.7301806 1.2492638  0.4398009
bspl5.8   0.4273142  1.8597511  1.7287792  1.0281950 1.7499208  2.4208799
bspl5.9  -4.7095024 -0.4693747 -1.2907647 -2.9932397 2.5045694  4.8234935
bspl5.10 10.0886593  6.2407335  7.4084077  8.5922840 0.3306088 -2.4374676
bspl5.11 -2.1329675  1.0551857  0.6857182 -0.4030671 2.1269353  2.4919258
bspl5.12  4.2432710  2.6967034  2.8138277  2.5789250 1.1868106  3.1443820
bspl5.13 -0.5919367  2.0566149  1.9839990  1.2851597 1.9181795  0.7861004
bspl5.14  2.8771419  2.4748002  2.5261461  2.1674721 1.3264985  2.7256779
bspl5.15  1.9933766  2.1759174  2.1386661  1.4649223 2.0017137  1.8353310
bspl5.16  2.4840486  2.4222306  2.4579935  2.2294072 2.4701280  2.4010969
              [,105]      [,106]      [,107]      [,108]      [,109]      [,110]
bspl5.1    1.7900917 -0.01005024  -4.6051703 -4.60517016 -4.60517010 -0.01005030
bspl5.2    2.5632743  0.63194395  -3.7674309 -3.25934822 -3.06006515  0.23169280
bspl5.3    3.4569437  1.56065301  -2.0674907 -0.97214690 -0.54252770  0.61356866
bspl5.4    2.7810560  1.86310680   0.5856159  1.23689039  1.49226411  0.87359528
bspl5.5   -0.7296045  0.67799228   3.5605584  1.90460794  1.25526288  0.79303783
bspl5.6    1.0497522  1.14314186   1.5270661  1.04160900  0.85028014  1.40366458
bspl5.7    7.9417046  3.60060412  -3.8259156  0.21294312  1.80022795  2.54538660
bspl5.8   -0.6287143  0.60174521   3.0933014  1.51265753  0.88427366  1.00139878
bspl5.9  -13.3547012 -3.85331920  12.9376712  2.93931743 -0.93689830 -1.15218698
bspl5.10  23.3085661  8.88770221 -15.7569464 -1.47205503  4.00789540  5.16886429
bspl5.11  -4.8204699  0.66358805   6.8138419  1.05706320 -0.13577967  0.01869175
bspl5.12   3.4316426 -0.73110706   0.6267845  3.09199648  2.24435301  2.47166643
bspl5.13   0.8552993  3.02243388   2.3051840 -0.09957099 -0.06800973  1.34072341
bspl5.14   2.3349026  2.14348411   1.3237333  2.36007875  3.06532136  2.15770719
bspl5.15   1.7377575  2.14083068   2.4676094  1.85129647  1.47265109  1.39943646
bspl5.16   2.5851940  2.50518047   2.4556132  2.02996922  2.28971905  2.48495405
             [,111]    [,112]     [,113]       [,114]     [,115]     [,116]
bspl5.1   1.9459102  1.504077  1.9387418   1.60943768  2.1961130  1.9459101
bspl5.2   2.0533960  1.644746  2.3041214   0.85508119  2.6044064  1.6418740
bspl5.3   2.1776318  1.807335  2.7264393  -0.01682849  3.0763255  1.2904588
bspl5.4   2.0836779  1.684359  2.4070457   0.64259629  2.7194192  1.5562208
bspl5.5   1.5956144  1.045678  0.7480017   4.06779513  0.8655205  2.9367564
bspl5.6   1.8430707  1.369272  1.5889838   2.33167644  1.8052759  2.2368373
bspl5.7   2.8008162  2.623651  4.8454381  -4.39213652  5.4442007 -0.4724057
bspl5.8   1.6104434  1.062909  0.7966882   3.96862037  0.9199253  2.8951476
bspl5.9  -0.1638404 -1.245176 -5.2236472  16.38949370 -5.8074984  7.9117538
bspl5.10  4.9477321  5.404616 12.1206726 -19.39465826 13.5739113 -6.5407456
bspl5.11  0.9490585  0.408357 -1.2829560   8.13084531 -1.4039732  4.7331232
bspl5.12  2.3696728  1.532911  2.9600467  -0.17248341  3.3373702  0.8289499
bspl5.13  1.6643779  1.609688  1.3055428   2.66167456  1.4885448  2.6739017
bspl5.14  2.1699789  1.868180  2.3864702   0.93958060  2.6964270  1.3923111
bspl5.15  1.7157377  1.491556  1.6139165   1.87356525  1.8331370  2.4079900
bspl5.16  2.3882967  2.226098  2.2505882   2.32190925  2.5445857  2.5520032
               [,117]      [,118]       [,119]     [,120]     [,121]     [,122]
bspl5.1   -0.01005048  1.89160473  -0.01005066  0.9162908  1.8718021  1.6094381
bspl5.2   -0.46352410  1.66453973  -1.03121397  1.2894815  1.7807379  2.1628465
bspl5.3   -0.98765731  1.40209024  -2.21150669  1.7208209  1.6754814  2.8024910
bspl5.4   -0.59121914  1.60057039  -1.31883570  1.3944317  1.7550489  2.3186545
bspl5.5    1.46774187  2.63160516   3.31776564 -0.2995204  2.1686540 -0.1938896
bspl5.6    0.42283021  2.10887440   0.96773027  0.5568981  1.9585163  1.0786706
bspl5.7   -3.61362877  0.08553767  -8.13463967  3.8924936  1.1489202  6.0154374
bspl5.8    1.45865171  2.60047837   3.18772948 -0.2712344  2.1519828 -0.1302835
bspl5.9    9.17403776  6.34739221  19.96845645 -6.2830152  3.6814819 -9.1838738
bspl5.10 -11.66432793 -4.44720471 -28.45394177 11.0369998 -0.7249084 16.8993093
bspl5.11   5.55514229  3.97823491   9.66693788 -0.2598627  3.1228577 -2.2711943
bspl5.12   0.95371861  1.04476762   0.53313164 -3.3303834  0.4965806  0.6568048
bspl5.13   1.82978414  2.44481935   1.29812780  3.2155619  2.6318625  2.0571676
bspl5.14   1.82590042  1.46958292   1.34012369  1.5111748  1.8670578  2.2995850
bspl5.15   1.97655027  2.24578602   1.85871969  1.7162753  2.2500051  1.6989504
bspl5.16   2.18001275  2.38525203   2.22203547  2.0823709  2.5562573  2.5194523
             [,123]      [,124]      [,125]    [,126]      [,127]      [,128]
bspl5.1   2.0794416 -0.69314717 -0.01005043  2.302585 -0.01005019 -0.01005024
bspl5.2   2.3283242 -0.83707918 -0.36133780  2.442937  0.36716379  0.76976792
bspl5.3   2.6159909 -1.01453950 -0.77027822  2.605161  0.79784565  1.93866442
bspl5.4   2.3984323 -0.94947554 -0.47910303  2.482473  0.43902748  2.49498055
bspl5.5   1.2683552 -0.16996461  1.14886676  1.845190 -1.21346991  1.43312986
bspl5.6   1.8411999  1.60589390  0.89396244  2.168234  0.66398569  1.77895087
bspl5.7   4.0593714  3.19801423 -1.47181736  3.419125  5.38396239  4.04238213
bspl5.8   1.3015186  0.91818486  1.49494681  1.863892 -0.75280091  1.32307692
bspl5.9  -2.7993025 -1.86969299  6.33557933 -0.448679 -9.47614930 -2.86442322
bspl5.10  9.0149816  6.58008788 -5.07012086  6.213736 15.90657380  9.06839631
bspl5.11 -0.1150551  0.05310395  3.53051303  1.065045 -3.17265102  0.36643905
bspl5.12  2.7751153  2.05227505  1.21838068  2.694896  1.50923695  2.90324527
bspl5.13  1.6481308  1.99901455  1.71765023  2.059357  0.77533219  2.12754869
bspl5.14  2.3844170  2.15675711  1.51467030  2.474570  1.77502576  2.56456973
bspl5.15  1.8581831  2.08220636  1.40017018  2.177811  2.21001116  2.40599580
bspl5.16  2.2918594  2.23001016  2.53602414  2.422374  2.36013248  2.70909722
             [,129]   [,130]      [,131]       [,132]    [,133]     [,134]
bspl5.1   0.6881347 2.301585  0.68813480  -0.01005015 2.3015846  1.3862944
bspl5.2   1.0190283 2.350629  1.19450472   0.58695616 2.3973886  1.5020679
bspl5.3   1.4014850 2.407315  1.77978393   1.27698551 2.5081220  1.6358796
bspl5.4   1.1122505 2.364444  1.33714902   0.75485591 2.4243758  1.5346014
bspl5.5  -0.3902632 2.141754 -0.96208952  -1.95503980 1.9893679  1.0091727
bspl5.6   0.3720621 2.254637  0.20346659  -0.58496852 2.2098767  1.2744953
bspl5.7   3.3182122 2.691743  4.71627010   4.75103166 3.0637318  2.3106351
bspl5.8  -0.3550670 2.148290 -0.89409629  -1.90740193 2.0021337  1.0149032
bspl5.9  -5.7204042 1.340194 -9.24085118 -11.54424110 0.4235781 -0.8306132
bspl5.10 10.3827802 3.668281 14.80571128  16.16647552 4.9713268  4.4864596
bspl5.11 -2.1172678 1.869144 -3.82700128  -1.26139039 1.4568428  1.3205437
bspl5.12  1.9251621 2.438672  2.22983767  -4.87633932 2.5693748 -0.6800740
bspl5.13  1.4495240 2.216592 -0.29039210   3.89430075 2.1355574  2.5509111
bspl5.14  1.4970343 2.361682  1.41563872   1.63774270 2.4189808  1.4672164
bspl5.15  1.9466816 2.257984  0.03633748   1.93761350 2.2164142  1.9749729
bspl5.16  2.5583746 2.343443  2.23427867   2.24261642 2.3833520  2.4657337
             [,135]     [,136]   [,137]      [,138]     [,139]     [,140]     [,141]
bspl5.1   2.0794417  0.9162908 2.191654 -0.05129316  1.7900914  1.8718022  2.3015846
bspl5.2   2.6491218  1.0198592 2.167626  0.38835256  1.6686474  2.0697384  2.4558104
bspl5.3   3.3075762  1.1395678 2.139854  0.89651184  1.5282787  2.2985215  2.6340696
bspl5.4   2.8095783  1.0490535 2.160859  0.51225677  1.6344435  2.1255452  2.4992556
bspl5.5   0.2229430  0.5787263 2.269954 -1.48419178  2.1858538  1.2266359  1.7989740
bspl5.6   1.5339008  0.8173992 2.214671 -0.47139538  1.9064151  1.6829440  2.1539669
bspl5.7   6.6121467  1.7393569 2.000450  3.44366146  0.8237247  3.4443387  3.5284450
bspl5.8   0.2966843  0.5949331 2.266921 -1.41841436  2.1703906  1.2591473  1.8196651
bspl5.9  -9.0759981 -1.1268343 2.661743 -8.70805497  4.1668059 -2.0415598 -0.7224029
bspl5.10 17.9265508  3.8350370 1.524259 12.29827336 -1.5848595  7.4670012  6.6011659
bspl5.11 -2.7336141 -0.2598772 2.387189 -4.72392279  2.7911370 -0.4699444  0.9280853
bspl5.12  3.1442793  1.8490894 2.165486  3.12012318  1.6258116  3.9220169  2.7668994
bspl5.13  1.5030132  1.2073644 2.201806  0.90002934  1.8676586  0.4255041  2.0080253
bspl5.14  2.3704093  1.6164334 2.192263  2.26276374  1.7636923  3.0365043  2.5156596
bspl5.15  2.2094164  1.3182946 2.171546  1.33382752  1.7511516  1.6921718  2.1298556
bspl5.16  2.6081967  2.3454025 2.259619  2.27558275  2.4127102  2.4661842  2.5070783
              [,142]      [,143]    [,144]     [,145]     [,146]     [,147]
bspl5.1  -0.01005022   1.3837911 1.6074359  2.3015846 -4.6051702  1.0986125
bspl5.2   0.34715843   0.8388458 1.5914641  2.4420678 -5.1111419  1.6616388
bspl5.3   0.76007773   0.2089862 1.5730020  2.6044428 -5.7210763  2.3124030
bspl5.4   0.44786423   0.6854963 1.5869325  2.4816407 -5.4159544  1.8202357
bspl5.5  -1.17381706   3.1593741 1.6595582  1.8437624 -2.8346053 -0.7362347
bspl5.6  -0.36641986   1.9073755 1.6223236  2.1671078  0.7778523  0.5596264
bspl5.7   2.87961811  -2.9580173 1.4817455  3.4191670  2.6570727  5.5777512
bspl5.8  -0.74923326   3.1060904 1.6534402  1.8624817 -0.9993874 -0.6616169
bspl5.9  -6.31950141  11.9612425 1.9421525 -0.4522496 -4.0807656 -9.9357974
bspl5.10  9.47111271 -13.5520312 1.1105100  6.2163887 10.2649200 16.7848447
bspl5.11 -0.64089160   4.3097604 2.1407100  1.0628888 -0.9902444 -3.8606310
bspl5.12 -0.06384767   4.5762575 0.5803804  2.6942615  2.5206864  2.6397997
bspl5.13  1.58819613  -1.1412805 2.2162890  2.0581289  1.5087582  1.2569705
bspl5.14  2.42058663   3.5982973 1.8177249  2.4737297  2.0805501  1.8550214
bspl5.15  1.86166465   2.0300680 2.0569558  2.1766940  1.8596107  2.0685503
bspl5.16  2.33360117   2.4918642 2.5881386  2.4214850  2.3290951  2.3424102
               [,148]     [,149]     [,150]       [,151]   [,152]      [,153]
bspl5.1   -0.01005014  2.3015847 -0.0100503   1.44691939 1.944481 -0.01005033
bspl5.2    0.62685690  2.4856807  0.1119292   2.75156983 2.015200  0.01743176
bspl5.3    1.36300381  2.6984650  0.2529177   4.25952641 2.096941  0.04919171
bspl5.4    0.80597527  2.5375390  0.1463046   3.11904200 2.035122  0.02520996
bspl5.5   -2.08502889  1.7016317 -0.4076034  -2.80474073 1.714011 -0.09976935
bspl5.6   -0.62334876  2.1253595 -0.1266319   0.19759512 1.876784 -0.03366568
bspl5.7    5.06909029  3.7661199  0.9597066  11.82732429 2.507076  0.19950521
bspl5.8   -2.03616698  1.7261624 -0.3895257  -2.63542559 1.723434 -0.13631541
bspl5.9  -12.29993386 -1.3071760 -2.4110660 -24.10303301 0.558189 -0.20363287
bspl5.10  17.27034333  7.4317377  3.4126753  37.74474840 3.915209  2.83703330
bspl5.11  -2.07931593  0.6783363 -1.2622382  -9.61799398 1.320916  1.81024274
bspl5.12  -7.10478020  2.8161679  0.7745886   3.99182772 2.142156  3.42348989
bspl5.13   3.95388116  1.9825481 -0.5686499   0.04405009 1.821924  1.56824145
bspl5.14   0.54992907  2.5271720  0.4879185   2.19529315 2.031139  2.99935129
bspl5.15   2.17206512  2.1379218 -0.6847476   1.61636626 1.881610  2.31507793
bspl5.16   2.09342330  2.4587081  2.0571200   2.64927499 2.004839  2.66188728
              [,154]     [,155]     [,156]      [,157]     [,158]     [,159]
bspl5.1   -1.3862945 1.09527339  1.2527630   1.8718020 -4.6051702 -4.6051701
bspl5.2   -1.9085364 1.11125396  1.2628964   1.3604277 -3.2640065 -3.3437201
bspl5.3   -2.5121709 1.12972599  1.2746131   0.7693666 -0.9053806 -1.2701188
bspl5.4   -2.0555168 1.11578565  1.2658610   1.2164374  1.6630962  0.4729478
bspl5.5    0.3151688 1.04312786  1.2194966   3.5381950  3.0637444  0.5114183
bspl5.6   -0.8792260 1.08034693  1.2444234   2.3620475  1.7735311  0.6462318
bspl5.7   -5.5650093 1.22113683  1.3287313  -2.1988317 -0.4402532  1.8295222
bspl5.8    0.1509117 1.04898597  1.2343961   3.4773830  2.6053161  0.4309961
bspl5.9    9.6790899 0.76172294  0.9806378  11.8563010  6.6241287 -1.8351210
bspl5.10 -10.8853540 1.58822700  1.7107911 -12.2837368 -5.2867659  4.5289342
bspl5.11   4.7578503 0.60343749 -0.1613448   5.6683945  3.5203804  0.2306954
bspl5.12  -0.1362723 2.02701195  4.6013770   2.2302645  2.0372191  3.5043800
bspl5.13   1.7134834 0.05267035 -0.9592919   1.4435209  1.3683335  0.7190361
bspl5.14   0.5307428 2.94574937  3.2995055   2.3340851  2.0679486  2.7814621
bspl5.15   1.3194496 2.03974263  1.7934217   2.4663791  1.6395919  2.0197902
bspl5.16   2.0762200 2.48778533  2.4264253   2.6544548  2.3157767  2.4207582
             [,160]     [,161]       [,162]     [,163]     [,164]       [,165]
bspl5.1   1.9459100 -4.6051704  -0.01005058  1.7900914  1.9459102  -0.01004977
bspl5.2   1.5261158 -5.8802797  -0.77313411  1.6525001  2.2525813   1.80477977
bspl5.3   1.0409039 -7.3861443  -1.65512839  1.4934676  2.6070417   3.90241698
bspl5.4   1.4078680 -6.4467043  -0.98801358  1.6137435  2.3389679   2.31593384
bspl5.5   3.3139722 -0.2940893   2.47660682  2.2384856  0.9464964  -5.92427000
bspl5.6   2.3478146  2.8631815   0.72133886  1.9218208  1.6523508  -1.74812581
bspl5.7  -1.3938691 -0.3225881  -6.08377094  0.6954436  4.3855632  14.43028653
bspl5.8   3.2586182  2.0420159   2.38394678  2.2203590  0.9873601  -5.69082326
bspl5.9  10.1718003  7.7314429  14.89992708  4.4861123 -4.0656374 -35.53993327
bspl5.10 -9.7448441 -7.1112039 -21.15266653 -2.0414496 10.4918246  50.45516412
bspl5.11  5.5909163  4.0995728   5.73860410  2.9832285 -0.7581303 -15.20223889
bspl5.12  0.9143867  1.2140628   0.25685669  1.4558933  2.8031136   3.02772124
bspl5.13  2.5622504  1.6920091   2.89162622  1.9885077  1.4144527  -1.51575123
bspl5.14  1.5434296  1.5666026   1.20073757  1.6632104  2.3216983   0.43982101
bspl5.15  2.1336127  1.2906108   2.18354809  1.8372328  1.6732774   2.40526012
bspl5.16  2.6656267  2.4621462   2.44027722  2.5962875  2.2076496   2.17984713
             [,166]      [,167]     [,168]     [,169]      [,170]     [,171]
bspl5.1   1.7900915 -0.01005027 -0.0100502  1.6094379 -0.01005039  1.6094380
bspl5.2   2.1156941  0.34086790  0.4086304  1.4341329 -0.27471107  1.9239177
bspl5.3   2.4920365  0.85033681  0.8925548  1.2315096 -0.55760399  2.2874028
bspl5.4   2.2074189  1.02255271  0.5265563  1.3847490 -0.22891947  2.0124807
bspl5.5   0.7289696  0.43057311 -1.3744652  2.1807457  1.41042319  0.5846276
bspl5.6   1.4784762  1.02383824 -0.4109896  1.7772225  2.69029046  1.3081173
bspl5.7   4.3801240  2.78387794  3.3212142  0.2149245  2.51910899  4.1121895
bspl5.8   0.7730168  0.53726361 -1.3202455  2.1571353  2.20192074  0.6236339
bspl5.9  -4.5961507 -2.71005479 -8.2087997  5.0472318  2.44033676 -4.5393784
bspl5.10 10.8721056  6.60583321 11.6365059 -3.2789886  2.26767917 10.3362863
bspl5.11 -1.1449582  1.21667457 -3.5414518  3.1796837  2.17906833 -0.8973928
bspl5.12  2.8611270  3.00690862  0.9434163  1.0579650  2.84526273  1.8116501
bspl5.13  1.1022279  2.22579994  0.9511486  1.9553469  2.79096552  2.0777501
bspl5.14  2.3070444  2.74392662  0.3918865  1.3680664  2.80709027  2.4522811
bspl5.15  1.3378494  2.37084231  2.4282879  1.7304521  2.80244887  1.9593535
bspl5.16  2.4152770  2.67943584  2.1837422  2.8880069  2.80345942  2.5074744
             [,172]     [,173]     [,174]     [,175]       [,176]     [,177]
bspl5.1   1.5993876  1.7917594  1.6074359  1.0986124  -0.01005011  1.6094380
bspl5.2   1.7095863  1.6762319  1.4825656  1.3562506   0.71663572  1.8607632
bspl5.3   1.8369567  1.5427013  1.3382384  1.6642903   1.56286806  2.1512556
bspl5.4   1.7406041  1.6436895  1.4474438  1.4865320   0.95688209  1.9316216
bspl5.5   1.2403144  2.1682520  2.0142603  0.4116906  -2.28440152  0.7902543
bspl5.6   1.4935665  1.9023577  1.7276228  0.9500910  -0.64234963  1.3696258
bspl5.7   2.4771871  0.8726713  0.6118200  3.0626594   5.70842114  3.6061785
bspl5.8   1.2527126  2.1529357  2.0041591  0.4191371  -2.25409983  0.8313997
bspl5.9  -0.5503734  4.0560207  4.0197408 -3.3211921 -13.44564357 -3.3587356
bspl5.10  4.6197760 -1.4261623 -1.7877385  8.6393219  22.80956018  8.7120756
bspl5.11  1.2525181  2.7942432  2.0731118  0.3169203  -4.32851661 -1.3508522
bspl5.12  1.9458132  1.5044830  2.8530070  3.1067528   2.86789498  4.1797702
bspl5.13  1.8462663  2.2456022  0.6452958  1.8652845   1.43017678 -0.2012487
bspl5.14  2.5517620  1.7030653  2.4490250  2.7178620   1.93931754  3.0625853
bspl5.15  2.0366274  2.2049780  1.6160934  2.0186068   2.53844782  1.4164483
bspl5.16  2.5187436  2.4036556  2.2076530  2.9724341   2.60296902  2.6997546
             [,178]     [,179]    [,180]     [,181]       [,182]       [,183]
bspl5.1   0.6881348  1.9459103 2.3969858  2.0794416  -0.01005045  1.386294502
bspl5.2   1.0634313  2.2804844 2.4852779  2.3620607  -0.38288864  1.833638205
bspl5.3   1.4972121  2.6671959 2.5873288  2.6887212  -0.81382311  2.350695091
bspl5.4   1.1691853  2.3747235 2.5101490  2.4416735  -0.48780993  1.959710504
bspl5.5  -0.5350131  0.8555792 2.1092496  1.1584079   1.20476970 -0.071690091
bspl5.6   0.3296175  1.6255475 2.3124686  1.8089230   0.34806037  0.958810424
bspl5.7   3.6712331  4.6078584 3.0993739  4.3276960  -2.98022791  4.942532659
bspl5.8  -0.4863174  0.8992310 2.1210145  1.1962379   1.16934789 -0.004765109
bspl5.9  -6.6451892 -4.6075632 0.6662316 -3.4615542   7.21707646 -7.422505801
bspl5.10 11.4535171 11.2573807 4.8573966  9.9573184 -10.25862638 13.946925536
bspl5.11 -2.9349310 -0.9140683 1.6184792 -0.4291184   2.72298257 -3.269291175
bspl5.12  2.8334954  2.6548331 2.6437789  2.9110869   3.83030452  4.421546982
bspl5.13  1.0399312  1.5421885 2.2439765  1.5576581  -0.30660558 -0.704409565
bspl5.14  2.1508946  2.1817177 2.5051770  2.4563064   3.09725861  3.033966744
bspl5.15  1.4353810  1.9191690 2.3184934  1.7860368   1.83142037  0.984234255
bspl5.16  2.3151880  2.3973148 2.4723419  2.4105893   2.12990299  2.275365287
            [,184]     [,185]        [,186]     [,187]     [,188]      [,189]
bspl5.1  1.9387416  1.6074359 -7.049687e-08  1.0986122 -4.6051700 -0.01005037
bspl5.2  1.8845812  1.5397085 -2.246069e-01  0.7967598 -2.5247263 -0.14280397
bspl5.3  1.8219809  1.4614234 -4.842228e-01  0.4478706  0.6883982 -0.29711155
bspl5.4  1.8693277  1.5205376 -2.878657e-01  0.7117751  2.6106647 -0.18673206
bspl5.5  2.1152390  1.8283576  7.318473e-01  2.0822243  0.6545680  0.42925633
bspl5.6  1.9906245  1.6711218  2.181368e-01  1.3881121  1.0616996  0.26214340
bspl5.7  1.5077505  1.0725583 -1.797348e+00 -1.3045956  5.4547198 -0.21777647
bspl5.8  2.1084017  1.8079398  6.433822e-01  2.0474338  0.4113202  3.21975133
bspl5.9  2.9983669  2.9968248  4.890519e+00  6.9863930 -7.5757979  6.65053879
bspl5.10 0.4343719 -0.4279567 -3.590040e+00 -7.2410643 15.5450746 -4.07228444
bspl5.11 2.3794973  3.3254830  4.114355e+00  3.1992830 -2.3582138  4.57506005
bspl5.12 1.8797566 -1.3874826  3.142846e-01  1.6436184  3.4109210  1.41192122
bspl5.13 1.9616264  3.3695189  2.871649e+00  1.6704309  1.0617791  3.05956866
bspl5.14 1.9401156  1.3018184  1.796709e+00  1.8119892  2.6264062  1.86591314
bspl5.15 1.8934167  2.6230264  2.270511e+00  1.7301972  1.4445774  2.93530195
bspl5.16 2.0919429  2.5378949  2.320586e+00  2.3153548  2.6398141  2.82925988
              [,190]
bspl5.1  -0.01005033
bspl5.2   0.01800916
bspl5.3   0.05043314
bspl5.4   0.02598725
bspl5.5  -0.10179229
bspl5.6  -0.03202365
bspl5.7   0.19669678
bspl5.8  -0.16834806
bspl5.9   0.04674408
bspl5.10  4.36309100
bspl5.11  1.06578780
bspl5.12  1.44741005
bspl5.13  2.52514617
bspl5.14  2.26798243
bspl5.15  2.28235184
bspl5.16  2.34185373
> dim(coef.mat)
[1]  16 190
> scores.mat <- pca.ebay$scores
> dim(scores.mat)
[1] 190   3
> coef.mat <- t(pca.all[[1]])
> dim(coef.mat)
[1] 190  16
> ?kmeans
> kmeans(feature,centers = 5)
Error in as.matrix(x) : object 'feature' not found
> 
> feature <- cbind(scores.mat, coef.mat)
> kmeans(feature,centers = 5)
K-means clustering with 5 clusters of sizes 43, 56, 60, 11, 20

Cluster means:
                                     bspl5.1    bspl5.2    bspl5.3    bspl5.4
1  2.8278087  3.260760 -0.1554658  2.8427375  3.3332431  3.9976449 4.01861025
2  0.7335639 -3.052328  0.2069180  0.6097036  1.0019290  1.5177733 1.46318758
3 -1.8801749  1.772348  0.1185402  1.9180020  2.0626340  2.3414595 2.73090043
4  8.6457937 -3.636119 -0.4015353  0.6453441  1.8181882  3.2546886 2.60277053
5 -7.2484294 -1.781294 -0.3798949 -0.5010933 -0.7292581 -0.8464424 0.02898276
     bspl5.5   bspl5.6   bspl5.7   bspl5.8    bspl5.9   bspl5.10  bspl5.11 bspl5.12
1  2.7225568 3.5719053  6.590107  2.990002  -2.406253  13.191831  1.474106 4.384284
2  0.2825634 1.0350350  3.697754  0.464343  -4.309100   9.751061 -0.725637 1.935255
3  3.1262496 3.0087017  2.573615  3.304565   4.270867   1.480061  3.706070 3.285867
4 -1.9529874 0.4799678  9.808815 -1.427407 -18.211126  30.558080 -6.140201 3.176724
5  2.4718927 1.5915572 -2.395962  2.800892  10.482762 -10.998043  5.395978 1.743988
  bspl5.13 bspl5.14 bspl5.15 bspl5.16
1 4.180442 4.531927 4.469734 4.830597
2 1.633159 2.299223 1.897147 2.497713
3 3.339743 3.550726 3.558707 3.929485
4 1.681683 2.474862 3.036196 3.406660
5 2.010909 2.228153 2.385458 2.804096

Clustering vector:
  [1] 1 3 3 2 1 1 1 3 3 3 1 1 1 3 4 3 1 3 1 1 1 3 1 3 5 3 4 5 3 1 3 1 1 4 3 1 1 3 1 1
 [41] 2 3 4 1 1 4 1 3 3 3 3 3 3 1 1 3 3 1 1 3 3 3 1 3 3 1 3 1 3 3 3 1 1 3 1 4 3 3 1 1
 [81] 1 1 1 2 1 1 2 1 1 1 3 1 5 3 2 4 3 2 2 2 2 2 3 3 4 2 5 3 2 2 2 2 2 5 2 5 5 3 5 2
[121] 3 2 2 2 5 2 2 2 2 3 2 2 3 2 2 2 3 2 3 2 2 2 5 3 2 2 2 2 2 2 4 3 2 5 3 3 5 5 2 5
[161] 5 5 3 2 4 2 2 2 3 3 2 2 3 3 2 4 2 2 2 3 2 5 2 3 3 5 5 2 5 2

Within cluster sum of squares by cluster:
[1] 2105.829 3461.533 3830.402 1851.298 2088.015
 (between_SS / total_SS =  72.2 %)

Available components:

[1] "cluster"      "centers"      "totss"        "withinss"     "tot.withinss"
[6] "betweenss"    "size"        
> kmean.ebay <- kmeans(feature,centers = 5)
> names(kmean.ebay)
[1] "cluster"      "centers"      "totss"        "withinss"     "tot.withinss"
[6] "betweenss"    "size"        
> kmean.ebay$cluster
  [1] 1 4 1 2 2 1 2 4 4 4 1 1 2 4 5 4 1 4 2 2 1 4 1 1 3 4 5 3 1 1 4 1 1 5 4 1 1 4 1 1
 [41] 2 1 5 1 1 5 1 1 1 4 4 1 4 2 1 4 4 1 1 4 1 4 1 4 4 1 4 1 4 4 4 2 1 1 2 2 4 4 1 1
 [81] 1 1 2 2 2 1 1 1 1 1 4 1 3 4 2 2 4 4 2 1 1 1 4 4 2 2 3 4 4 4 4 4 2 3 2 3 3 4 3 2
[121] 4 2 1 4 3 1 2 1 2 4 2 2 4 4 2 4 4 2 4 1 1 2 3 4 1 2 2 2 1 4 5 4 4 3 4 4 3 3 4 3
[161] 3 3 4 2 5 2 4 2 4 4 2 4 4 4 1 2 1 2 2 4 1 3 2 4 4 4 3 2 4 4
> group <- NULL
> for(i in 1:5){
+   group[[i]] <- which(kmean.ebay$cluster == i)	
+ }
> par(mfrow = c(2,1))
> for(i in 1:5){
+ 	plot(xlist[[group[[i]][1]]], ylist[[group[[i]][1]]], ylim = c(-5, 15))
+ 	for(j in 2:length(group[[i]])){
+ 		points(xlist[[group[[i]][1]]], ylist[[group[[i]][1]]], col = j)
+ 	}
+ 	
+ }
> 
> par(mfrow = c(2,1))
> for(i in 1:5){
+ 	plot(xlist[[group[[i]][1]]], ylist[[group[[i]][1]]], ylim = c(-5, 15), type = "l")
+ 	for(j in 2:length(group[[i]])){
+ 		points(xlist[[group[[i]][j]]], ylist[[group[[i]][j]]], col = j, type ="l")
+ 	}
+ 	
+ }
> 
> par(mfrow = c(2,1))
> for(i in 1:5){
+ 	plot(xlist[[group[[i]][1]]], ylist[[group[[i]][1]]], ylim = c(-5, 5), type = "l", xlab = "time",ylab="logprice", main = paste("the ",i," group"))
+ 	for(j in 2:length(group[[i]])){
+ 		points(xlist[[group[[i]][j]]], ylist[[group[[i]][j]]], col = j, type ="l")
+ 	}
+ 	
+ }
> 
> n.group <- 3
> kmean.ebay <- kmeans(feature,centers = n.group)
> 
> group <- NULL
> for(i in 1:n.group){
+   group[[i]] <- which(kmean.ebay$cluster == i)	
+ }
> par(mfrow = c(2,1))
> for(i in 1:n.group){
+ 	plot(xlist[[group[[i]][1]]], ylist[[group[[i]][1]]], ylim = c(-5, 5), type = "l", xlab = "time",ylab="logprice", main = paste("the ",i," group"))
+ 	for(j in 2:length(group[[i]])){
+ 		points(xlist[[group[[i]][j]]], ylist[[group[[i]][j]]], col = j, type ="l")
+ 	}
+ 	
+ }
> n.group <- 3
> kmean.ebay <- kmeans(feature,centers = n.group)
> 
> group <- NULL
> for(i in 1:n.group){
+   group[[i]] <- which(kmean.ebay$cluster == i)	
+ }
> par(mfrow = c(2,1))
> for(i in 1:n.group){
+ 	plot(xlist[[group[[i]][1]]], ylist[[group[[i]][1]]], ylim = c(-5, 5), type = "l", xlab = "time",ylab="logprice", main = paste("the ",i," group"))
+ 	for(j in 2:length(group[[i]])){
+ 		points(xlist[[group[[i]][j]]], ylist[[group[[i]][j]]], col = j, type ="l")
+ 	}
+ }
> n.group <- 3
> kmean.ebay <- kmeans(feature,centers = n.group)
> 
> group <- NULL
> for(i in 1:n.group){
+   group[[i]] <- which(kmean.ebay$cluster == i)	
+ }
> par(mfrow = c(2,1))
> for(i in 1:n.group){
+ 	plot(xlist[[group[[i]][1]]], ylist[[group[[i]][1]]], ylim = c(-5, 5), type = "l", xlab = "time",ylab="logprice", main = paste("the ",i," group"))
+ 	for(j in 2:length(group[[i]])){
+ 		points(xlist[[group[[i]][j]]], ylist[[group[[i]][j]]], col = j, type ="l")
+ 	}
+ }
> 
> 
> 
> 
> a = date(2011,04,01)
Error in date(2011, 4, 1) : unused argument(s) (2011, 4, 1)
> a = date(2011-04-01)
Error in date(2011 - 4 - 1) : unused argument(s) (2011 - 4 - 1)
> a = date("2011-04-01")
Error in date("2011-04-01") : unused argument(s) ("2011-04-01")
> ?date
> a = date("2011-06-22", "%Y-%M-%d")
Error in date("2011-06-22", "%Y-%M-%d") : 
  unused argument(s) ("2011-06-22", "%Y-%M-%d")
> format(Sys.Date(), "%Y-%b-%d")
[1] "2013-Jun-22"
> format(Sys.Date(), "%Y-%B-%d")
[1] "2013-June-22"
> format(Sys.Date(), "%Y-%M-%d")
[1] "2013-00-22"
> format(Sys.Date(), "%Y-%m-%d")
[1] "2013-06-22"
> format(Sys.Date(), "%Y-%m-%d")->a
> a+1
Error in a + 1 : non-numeric argument to binary operator
> format(Sys.Date()+1, "%Y-%m-%d")
[1] "2013-06-23"
> seq(Sys.Date()-10, Sys.Date)
Error in seq.Date(Sys.Date() - 10, Sys.Date) : 'to' must be a Date object
> seq(Sys.Date()-10, Sys.Date())
Error in seq.Date(Sys.Date() - 10, Sys.Date()) : 
  exactly two of 'to', 'by' and 'length.out' / 'along.with' must be specified
> seq(Sys.Date()-10, Sys.Date(), by = 1)
 [1] "2013-06-12" "2013-06-13" "2013-06-14" "2013-06-15" "2013-06-16" "2013-06-17"
 [7] "2013-06-18" "2013-06-19" "2013-06-20" "2013-06-21" "2013-06-22"
> today <- Sys.Date()
> format(today, "%y-%m-%d")
[1] "13-06-22"
> format(today, "%Y-%m-%d")
[1] "2013-06-22"
> dateseq <- seq(today -10, today, by = 1)
> dataseq
Error: object 'dataseq' not found
> dateseq
 [1] "2013-06-12" "2013-06-13" "2013-06-14" "2013-06-15" "2013-06-16" "2013-06-17"
 [7] "2013-06-18" "2013-06-19" "2013-06-20" "2013-06-21" "2013-06-22"
> format(today, "%Y-%M-%d")
[1] "2013-00-22"
> dateseq <- seq(today -10, today, by = 1)
> dateseq
 [1] "2013-06-12" "2013-06-13" "2013-06-14" "2013-06-15" "2013-06-16" "2013-06-17"
 [7] "2013-06-18" "2013-06-19" "2013-06-20" "2013-06-21" "2013-06-22"
> format(today, "%Y-%b-%d")
[1] "2013-Jun-22"
> dateseq <- seq(today -10, today, by = 1)
> dateseq
 [1] "2013-06-12" "2013-06-13" "2013-06-14" "2013-06-15" "2013-06-16" "2013-06-17"
 [7] "2013-06-18" "2013-06-19" "2013-06-20" "2013-06-21" "2013-06-22"
> format(Sys.Date(), "%Y-%b-%d")
[1] "2013-Jun-22"
> dateseq <- seq(today -10, today, by = 1)
> format(Sys.Date(), "%Y-%b-%d")
[1] "2013-Jun-22"
> dateseq
 [1] "2013-06-12" "2013-06-13" "2013-06-14" "2013-06-15" "2013-06-16" "2013-06-17"
 [7] "2013-06-18" "2013-06-19" "2013-06-20" "2013-06-21" "2013-06-22"
> plot(plotpoints, LogPrice.smooth[1, ], type = "l", col = "white", ylim = c(-20, 20))
> for(k in 1 : length(group[[1]])){
+ 	points(plotpoints, LogPrice.smooth[group[[1]][k], ], type = "l", col = k)
+ }
> par(mfrow = c(2,2))
> plot(plotpoints, LogPrice.smooth[1, ], type = "l", col = "white", ylim = c(-20, 20))
> for(k in 1 : length(group[[1]])){
+ 	points(plotpoints, LogPrice.smooth[group[[1]][k], ], type = "l", col = k)
+ }
> plot(plotpoints, LogPrice.smooth[1, ], type = "l", col = "white", ylim = c(-20, 20))
> for(k in 1 : length(group[[2]])){
+ 	points(plotpoints, LogPrice.smooth[group[[2]][k], ], type = "l", col = k)
+ }
> plot(plotpoints, LogPrice.smooth[1, ], type = "l", col = "white", ylim = c(-20, 20))
> for(k in 1 : length(group[[3]])){
+ 	points(plotpoints, LogPrice.smooth[group[[3]][k], ], type = "l", col = k)
+ }
> for(k in 1 : length(group[[3]])){
+ 	points(plotpoints, LogPrice.smooth[group[[4]][k], ], type = "l", col = k)
+ }
Error in group[[4]] : subscript out of bounds
> par(mfrow = c(2,2))
> plot(plotpoints, LogPrice.smooth[1, ], type = "l", col = "white", ylim = c(-5, 5))
> for(k in 1 : length(group[[3]])){
+ 	points(plotpoints, LogPrice.smooth[group[[3]][k], ], type = "l", col = k)
+ }
> plot(plotpoints, LogPrice.smooth[1, ], type = "l", col = "white", ylim = c(-5, 5))
> for(k in 1 : length(group[[2]])){
+ 	points(plotpoints, LogPrice.smooth[group[[2]][k], ], type = "l", col = k)
+ }
> plot(plotpoints, LogPrice.smooth[1, ], type = "l", col = "white", ylim = c(-5, 5))
> for(k in 1 : length(group[[1]])){
+ 	points(plotpoints, LogPrice.smooth[group[[1]][k], ], type = "l", col = k)
+ }
> plot(plotpoints, Velo.smooth[1, ], type = "l", col = "white", ylim = c(-15, 10))
> plot(plotpoints, Velo.smooth[1, ], type = "l", col = "white", ylim = c(-15, 10))
> for(k in 1 : length(group[[1]])){
+ 	points(plotpoints, Velo.smooth[group[[1]][k], ], type = "l", col = k)
+ }
> plot(plotpoints, Velo.smooth[1, ], type = "l", col = "white", ylim = c(-15, 10))
> for(k in 1 : length(group[[2]])){
+ 	points(plotpoints, Velo.smooth[group[[2]][k], ], type = "l", col = k)
+ }
> plot(plotpoints, Velo.smooth[1, ], type = "l", col = "white", ylim = c(-15, 10))
> for(k in 1 : length(group[[3]])){
+ 	points(plotpoints, Velo.smooth[group[[3]][k], ], type = "l", col = k)
+ }
> 
> FitsubSDE <- function(index){
+ 	Acc.temp <- Acc.smooth[index, ]
+ 	Velo.temp <- Velo.smooth[index, ]
+     Logprice.temp <- Logprice.smooth[index, ]
+     N.auc.temp <- length(index)
+     Et.temp <- matrix(0, N.auc.temp, Nt)
+ 	sigma.temp <- rep(0, Nt)
+ 	sigma2.temp <- rep(0, Nt)
+     table <- matrix(0, N.auc.temp, Nt)
+ 	mu.temp <- ???
+ 	
+ 	for(i in 1:length(plotpoints)){
+ 		Et.temp[ , i] <- (Acc.temp[, i] - mu.temp[i]*Velo.temp[, i])/Velo.temp[,i]
+ 		## remove real outlier?
+ 		#temp <- remove_outliers(Et[ , i])
+ 		## or remove some percentile
+ 		temp <- remove_outliers(Et.temp[, i])
+ 		table[which(is.na(temp)) ,i] <- 1 
+ 		temp2 <- Et.temp[, i] * Velo.temp[,i]
+ 		sigma.temp[i] <- sd(temp[which(!is.na(temp))] / sqrt(7/Nt))
+ 		sigma2.temp[i] <- sd(temp2) / sqrt(7/Nt)
+ 	}	
+ 	par(mfrow=c(1,3))
+ 	plot(plotpoints, sigma.temp,type = "l")
+ 	plot(plotpoints, apply(table, 2,sum),type = "l",main= "no of outliers deleted")
+ 	plot(plotpoints, sigma2.temp,type = "l")
+ 	
+ 
+ 
+ 	Fratio.sto1 <- rep(0, Nt)
+ 	Fratio.sto2 <- rep(0, Nt)
+ 	Fratio.C <- rep(0, Nt)
+ 	psseL2 <- psseL1 <- 0
+ 	for(i in 1:Nt){
+ 		psse0 <- sum(Acc.temp[, i] ^ 2)
+ 		psseC <- sum((Velo.temp[, i] * mu.temp[i]- Acc.temp[, i]) ^ 2)
+ 		psseL2 <- psseL1 <- 0
+ 		psseL2 <- sum((Velo.temp[, i] * mu.temp[i] + sigma2.temp[i] * rnorm(N.auc.temp,0,sqrt(7/Nt)) - Acc.temp[, i]) ^ 2)
+ 	
+ 		
+ 		psseL1 <- sum((Velo.temp[, i] * mu.temp[i] + sigma.temp[i] * Velo.temp[,i] * rnorm(N.auc.temp,0,sqrt(7/Nt)) - Acc.temp[, i]) ^ 2)
+ 		Fratio.C[i] <- (psse0-psseC)/psse0
+ 		Fratio.sto1[i] <- (psse0-psseL1)/psse0 
+ 		Fratio.sto2[i] <- (psse0-psseL2)/psse0
+ 	}
+ 	
+ 	plot(plotpoints, Fratio.sto2, type = "l")
+ 	lines(plotpoints, Fratio.sto1, type = "l", col = "red")
+ 	lines(plotpoints, Fratio.C,type = "l", col = "blue", lty = 2)
+ 
+ return(list(sigma1 = sigma.temp, sigma2 = sigma2.temp, F0 = Fratio.C, F1 = Fratio.sto1, F2 = Fratio.sto2))
+ }
> subpara1 <- FitsubSDE(group[[1]])
Error in FitsubSDE(group[[1]]) : object 'Logprice.smooth' not found
> FitsubSDE <- function(index){
+ }
> 
> FitsubSDE <- function(index){
+ 	Acc.temp <- Acc.smooth[index, ]
+ 	Velo.temp <- Velo.smooth[index, ]
+     Logprice.temp <- LogPrice.smooth[index, ]
+     N.auc.temp <- length(index)
+     Et.temp <- matrix(0, N.auc.temp, Nt)
+ 	sigma.temp <- rep(0, Nt)
+ 	sigma2.temp <- rep(0, Nt)
+     table <- matrix(0, N.auc.temp, Nt)
+ 	mu.temp <- ???
+ 	
+ 	for(i in 1:length(plotpoints)){
+ 		Et.temp[ , i] <- (Acc.temp[, i] - mu.temp[i]*Velo.temp[, i])/Velo.temp[,i]
+ 		## remove real outlier?
+ 		#temp <- remove_outliers(Et[ , i])
+ 		## or remove some percentile
+ 		temp <- remove_outliers(Et.temp[, i])
+ 		table[which(is.na(temp)) ,i] <- 1 
+ 		temp2 <- Et.temp[, i] * Velo.temp[,i]
+ 		sigma.temp[i] <- sd(temp[which(!is.na(temp))] / sqrt(7/Nt))
+ 		sigma2.temp[i] <- sd(temp2) / sqrt(7/Nt)
+ 	}	
+ 	par(mfrow=c(1,3))
+ 	plot(plotpoints, sigma.temp,type = "l")
+ 	plot(plotpoints, apply(table, 2,sum),type = "l",main= "no of outliers deleted")
+ 	plot(plotpoints, sigma2.temp,type = "l")
+ 	
+ 
+ 
+ 	Fratio.sto1 <- rep(0, Nt)
+ 	Fratio.sto2 <- rep(0, Nt)
+ 	Fratio.C <- rep(0, Nt)
+ 	psseL2 <- psseL1 <- 0
+ 	for(i in 1:Nt){
+ 		psse0 <- sum(Acc.temp[, i] ^ 2)
+ 		psseC <- sum((Velo.temp[, i] * mu.temp[i]- Acc.temp[, i]) ^ 2)
+ 		psseL2 <- psseL1 <- 0
+ 		psseL2 <- sum((Velo.temp[, i] * mu.temp[i] + sigma2.temp[i] * rnorm(N.auc.temp,0,sqrt(7/Nt)) - Acc.temp[, i]) ^ 2)
+ 	
+ 		
+ 		psseL1 <- sum((Velo.temp[, i] * mu.temp[i] + sigma.temp[i] * Velo.temp[,i] * rnorm(N.auc.temp,0,sqrt(7/Nt)) - Acc.temp[, i]) ^ 2)
+ 		Fratio.C[i] <- (psse0-psseC)/psse0
+ 		Fratio.sto1[i] <- (psse0-psseL1)/psse0 
+ 		Fratio.sto2[i] <- (psse0-psseL2)/psse0
+ 	}
+ 	
+ 	plot(plotpoints, Fratio.sto2, type = "l")
+ 	lines(plotpoints, Fratio.sto1, type = "l", col = "red")
+ 	lines(plotpoints, Fratio.C,type = "l", col = "blue", lty = 2)
+ 
+ return(list(sigma1 = sigma.temp, sigma2 = sigma2.temp, F0 = Fratio.C, F1 = Fratio.sto1, F2 = Fratio.sto2))
+ }
> subpara1 <- FitsubSDE(group[[1]])
Error in help.search(c("?", "for (i in 1:length(plotpoints)) {\n    Et.temp[, i] <- (Acc.temp[, i] - mu.temp[i] * Velo.temp[, i])/Velo.temp[, i]\n    temp <- remove_outliers(Et.temp[, i])\n    table[which(is.na(temp)), i] <- 1\n    temp2 <- Et.temp[, i] * Velo.temp[, i]\n    sigma.temp[i] <- sd(temp[which(!is.na(temp))]/sqrt(7/Nt))\n    sigma2.temp[i] <- sd(temp2)/sqrt(7/Nt)\n}" : 
  argument ‘pattern’ must be a single character string
> fitSDE_mu <- function(index, kk){
+ 	addpoints <- seq(0,7,len=kk*(Nt-1)+1)
+ 	
+ 	Acc.temp <- Acc.smooth[index, ]
+ 	Velo.temp <- Velo.smooth[index, ]
+     Logprice.temp <- LogPrice.smooth[index, ]
+     N.auc.temp <- length(index)
+ 	LogPrice.add <-  matrix(0, N.auc.temp, length(addpoints))
+ 	Velo.add <-  matrix(0, N.auc.temp, length(addpoints))
+ 	Acc.add <-  matrix(0, N.auc.temp, length(addpoints))
+ 	
+ 	for(i in 1 : N.auc.temp){
+ 	  temp <- SPLINE(EBAY[[index[i]]]$Time,log(EBAY[[index[i]]]$Price), addpoints)
+ 	  LogPrice.add[i, ] <- temp[, 1]
+ 	  Velo.add[i, ] <- temp[, 2]
+ 	  Acc.add[i, ] <- temp[, 3]
+ 	}
+ 	
+ 	mu <- rep(0, length(plotpoints))
+     rsq <- rep(0, length(plotpoints))
+ 
+ 	kk.back <- kk*10
+ 	for(i in 1:length(plotpoints)){
+ 		response <- Acc.add[ , max(1, kk*(i-1)+1-kk.back) : (kk*(i-1)+1)]
+ 		x <- Velo.add[, max(1, kk*(i-1)+1-kk.back) : (kk*(i-1)+1)]
+ 		response <- as.vector(t(response))
+ 		x <- as.vector(t(x))
+ 		timediff <- seq(-length(x)/N.auc.temp + 1 , 0) * (7 / ((Nt-1) * kk))
+ 		weight <- rep(0, length(timediff))
+ 		for(j in 1:length(weight)){
+ 			weight[j] <- kern(7/Nt, timediff[j])
+ 		}
+ 	
+ 	
+ 		weight  <- rep( weight , N.auc.temp )
+ 		fit <- lm(response ~ x - 1, weights = weight)
+ 		mu[i] <- fit$coefficient
+ 		rsq[i] <- summary(fit)$r.squared	
+ 	}
+ 	
+ 	return(mu)
+ 
+ }
> kk
Error: object 'kk' not found
> kk = 2
> mu.temp <- fitSDE_mu(group[[1]], kk)
Error: could not find function "kern"
> 
> fitSDE_mu <- function(index, kk){
+ 	kern <- function(h, u){(h^2 - u^2)*(u>-h && u <=0)}
+ 	
+ 	addpoints <- seq(0,7,len=kk*(Nt-1)+1)
+ 	
+ 	Acc.temp <- Acc.smooth[index, ]
+ 	Velo.temp <- Velo.smooth[index, ]
+     Logprice.temp <- LogPrice.smooth[index, ]
+     N.auc.temp <- length(index)
+ 	LogPrice.add <-  matrix(0, N.auc.temp, length(addpoints))
+ 	Velo.add <-  matrix(0, N.auc.temp, length(addpoints))
+ 	Acc.add <-  matrix(0, N.auc.temp, length(addpoints))
+ 	
+ 	for(i in 1 : N.auc.temp){
+ 	  temp <- SPLINE(EBAY[[index[i]]]$Time,log(EBAY[[index[i]]]$Price), addpoints)
+ 	  LogPrice.add[i, ] <- temp[, 1]
+ 	  Velo.add[i, ] <- temp[, 2]
+ 	  Acc.add[i, ] <- temp[, 3]
+ 	}
+ 	
+ 	mu <- rep(0, length(plotpoints))
+     rsq <- rep(0, length(plotpoints))
+ 
+ 	kk.back <- kk*10
+ 	for(i in 1:length(plotpoints)){
+ 		response <- Acc.add[ , max(1, kk*(i-1)+1-kk.back) : (kk*(i-1)+1)]
+ 		x <- Velo.add[, max(1, kk*(i-1)+1-kk.back) : (kk*(i-1)+1)]
+ 		response <- as.vector(t(response))
+ 		x <- as.vector(t(x))
+ 		timediff <- seq(-length(x)/N.auc.temp + 1 , 0) * (7 / ((Nt-1) * kk))
+ 		weight <- rep(0, length(timediff))
+ 		for(j in 1:length(weight)){
+ 			weight[j] <- kern(7/Nt, timediff[j])
+ 		}
+ 	
+ 	
+ 		weight  <- rep( weight , N.auc.temp )
+ 		fit <- lm(response ~ x - 1, weights = weight)
+ 		mu[i] <- fit$coefficient
+ 		rsq[i] <- summary(fit)$r.squared	
+ 	}
+ 	
+ 	return(mu)
+ 
+ }
> 
> 
> mu.temp <- fitSDE_mu(group[[1]], kk)
> group[[1]]
 [1]   8   9  10  22  25  28  50  51  53  57  67  69  70  78  91  93  94 104 107 108
[21] 114 116 117 118 119 121 125 139 143 154 157 158 160 161 162 163 169 173 174 182
[41] 185 186 187 189
> mu.temp
   [1] -0.6011933164 -0.6021293680 -0.6033233018 -0.6045198968 -0.6057191602
   [6] -0.6069210993 -0.6081257214 -0.6093330337 -0.6105430435 -0.6117557579
  [11] -0.6129711841 -0.6141893292 -0.6154102004 -0.6166338047 -0.6178601492
  [16] -0.6190892410 -0.6203210869 -0.6215556940 -0.6227930692 -0.6240332193
  [21] -0.6252761513 -0.6265218720 -0.6277703880 -0.6290217062 -0.6302758332
  [26] -0.6315327757 -0.6327925402 -0.6340551334 -0.6353205618 -0.6365888318
  [31] -0.6378599497 -0.6391339221 -0.6404107551 -0.6416904550 -0.6429730281
  [36] -0.6442584803 -0.6455468179 -0.6468380468 -0.6481321730 -0.6494292023
  [41] -0.6507291405 -0.6520319934 -0.6533377667 -0.6546464660 -0.6559580967
  [46] -0.6572726643 -0.6585901743 -0.6599106318 -0.6612340421 -0.6625604103
  [51] -0.6638897414 -0.6652220403 -0.6665573120 -0.6678955611 -0.6692367923
  [56] -0.6705810102 -0.6719282192 -0.6732784237 -0.6746316279 -0.6759878359
  [61] -0.6773470517 -0.6787092793 -0.6800745225 -0.6814427849 -0.6828140701
  [66] -0.6841883814 -0.6855657221 -0.6869460955 -0.6883295046 -0.6897159521
  [71] -0.6911054410 -0.6924979736 -0.6938935526 -0.6952921802 -0.6966938585
  [76] -0.6980985895 -0.6995063750 -0.7009172168 -0.7023311162 -0.7037480746
  [81] -0.7051680932 -0.7065911728 -0.7080173142 -0.7094465181 -0.7108787847
  [86] -0.7123141144 -0.7137525070 -0.7151939624 -0.7166384801 -0.7180860595
  [91] -0.7195366997 -0.7209903997 -0.7224471580 -0.7239069732 -0.7253698434
  [96] -0.7268357667 -0.7283047407 -0.7297767629 -0.7312518305 -0.7327299404
 [101] -0.7342110893 -0.7356952736 -0.7371824893 -0.7386727324 -0.7401659983
 [106] -0.7416622822 -0.7431615790 -0.7446638835 -0.7461691897 -0.7476774918
 [111] -0.7491887833 -0.7507030575 -0.7522203074 -0.7537405255 -0.7552637040
 [116] -0.7567898349 -0.7583189096 -0.7598509192 -0.7613858544 -0.7629237056
 [121] -0.7644644627 -0.7660081150 -0.7675546518 -0.7691040617 -0.7706563328
 [126] -0.7722114530 -0.7737694094 -0.7753301891 -0.7768937782 -0.7784601628
 [131] -0.7800293281 -0.7816012590 -0.7831759400 -0.7847533548 -0.7863334868
 [136] -0.7879163187 -0.7895018328 -0.7910900106 -0.7926808333 -0.7942742813
 [141] -0.7958703345 -0.7974689722 -0.7990701731 -0.8006739151 -0.8022801756
 [146] -0.8038889313 -0.8055001583 -0.8071138320 -0.8087299269 -0.8103484171
 [151] -0.8119692757 -0.8135924753 -0.8152179875 -0.8168457834 -0.8184758331
 [156] -0.8201081061 -0.8217425709 -0.8233791952 -0.8250179461 -0.8266587895
 [161] -0.8283016906 -0.8299466138 -0.8315935224 -0.8332423789 -0.8348931448
 [166] -0.8365457807 -0.8382002462 -0.8398562885 -0.8415112801 -0.8431636858
 [171] -0.8448134291 -0.8464604389 -0.8481046432 -0.8497459692 -0.8513843429
 [176] -0.8530196897 -0.8546519337 -0.8562809983 -0.8579068058 -0.8595292777
 [181] -0.8611483342 -0.8627638950 -0.8643758783 -0.8659842016 -0.8675887813
 [186] -0.8691895330 -0.8707863709 -0.8723792085 -0.8739679581 -0.8755525310
 [191] -0.8771328375 -0.8787087868 -0.8802802871 -0.8818472454 -0.8834095679
 [196] -0.8849671595 -0.8865199240 -0.8880677643 -0.8896105820 -0.8911482778
 [201] -0.8926807512 -0.8942079006 -0.8957296233 -0.8972458155 -0.8987563723
 [206] -0.9002611875 -0.9017601541 -0.9032531636 -0.9047401067 -0.9062208727
 [211] -0.9076953500 -0.9091634257 -0.9106249857 -0.9120799149 -0.9135280970
 [216] -0.9149694146 -0.9164037489 -0.9178309803 -0.9192509878 -0.9206636493
 [221] -0.9220688416 -0.9234664403 -0.9248563199 -0.9262383536 -0.9276124136
 [226] -0.9289783710 -0.9303360954 -0.9316854557 -0.9330263194 -0.9343585529
 [231] -0.9356820215 -0.9369965892 -0.9383021192 -0.9395984734 -0.9408855124
 [236] -0.9421630959 -0.9434310825 -0.9446893297 -0.9459376938 -0.9471760301
 [241] -0.9484041928 -0.9496220351 -0.9508294089 -0.9520261655 -0.9532121547
 [246] -0.9543872257 -0.9555512263 -0.9567040035 -0.9578454034 -0.9589752710
 [251] -0.9600934505 -0.9611997848 -0.9622941164 -0.9633762864 -0.9644461355
 [256] -0.9655035031 -0.9665482280 -0.9675801482 -0.9685991007 -0.9696049219
 [261] -0.9705974474 -0.9715765120 -0.9725419500 -0.9734935947 -0.9744312790
 [266] -0.9753548351 -0.9762640946 -0.9771588885 -0.9780390473 -0.9789044011
 [271] -0.9797547793 -0.9805900110 -0.9814099249 -0.9822143493 -0.9830031124
 [276] -0.9837760416 -0.9845329646 -0.9852737085 -0.9859981005 -0.9867059674
 [281] -0.9873971363 -0.9880714339 -0.9887286870 -0.9893687227 -0.9899913679
 [286] -0.9905964498 -0.9911837959 -0.9917532337 -0.9923045913 -0.9928376970
 [291] -0.9933523797 -0.9938484684 -0.9943257932 -0.9947841844 -0.9952234731
 [296] -0.9956434911 -0.9960440711 -0.9964250465 -0.9967862518 -0.9971275223
 [301] -0.9974486946 -0.9977496063 -0.9980300962 -0.9982900045 -0.9985291726
 [306] -0.9987474434 -0.9989446614 -0.9991206726 -0.9992753247 -0.9994084672
 [311] -0.9995199514 -0.9996096304 -0.9996773597 -0.9997229964 -0.9997464001
 [316] -0.9997474326 -0.9997259580 -0.9996818430 -0.9996149567 -0.9995251710
 [321] -0.9994123603 -0.9992764021 -0.9991171767 -0.9989345674 -0.9987284606
 [326] -0.9984987461 -0.9982453170 -0.9979680695 -0.9976669039 -0.9973417236
 [331] -0.9969924362 -0.9966189527 -0.9962211884 -0.9957990625 -0.9953530906
 [336] -0.9948849661 -0.9943948159 -0.9938824889 -0.9933478355 -0.9927907077
 [341] -0.9922109594 -0.9916084461 -0.9909830251 -0.9903345558 -0.9896628996
 [346] -0.9889679200 -0.9882494824 -0.9875074548 -0.9867417074 -0.9859521128
 [351] -0.9851385460 -0.9843008847 -0.9834390092 -0.9825528027 -0.9816421510
 [356] -0.9807069429 -0.9797470704 -0.9787624282 -0.9777529146 -0.9767184310
 [361] -0.9756588820 -0.9745741758 -0.9734642243 -0.9723289428 -0.9711682504
 [366] -0.9699820699 -0.9687703284 -0.9675329566 -0.9662698893 -0.9649810659
 [371] -0.9636664295 -0.9623259282 -0.9609595140 -0.9595671437 -0.9581487790
 [376] -0.9567043859 -0.9552339354 -0.9537374037 -0.9522147717 -0.9506660254
 [381] -0.9490911563 -0.9474901608 -0.9458630411 -0.9442098046 -0.9425304643
 [386] -0.9408250390 -0.9390935529 -0.9373360365 -0.9355525257 -0.9337430628
 [391] -0.9319076959 -0.9300464795 -0.9281594740 -0.9262467463 -0.9243083698
 [396] -0.9223444242 -0.9203549957 -0.9183401772 -0.9163000683 -0.9142347751
 [401] -0.9121444109 -0.9100290954 -0.9078889556 -0.9057241254 -0.9035347457
 [406] -0.9013209644 -0.8990829367 -0.8968208249 -0.8945347986 -0.8922250347
 [411] -0.8898917174 -0.8875350382 -0.8851551961 -0.8827523974 -0.8803268561
 [416] -0.8778787933 -0.8754084380 -0.8729160265 -0.8704018026 -0.8678660179
 [421] -0.8653089312 -0.8627308093 -0.8601319260 -0.8575125632 -0.8548730101
 [426] -0.8522135634 -0.8495345275 -0.8468362141 -0.8441189425 -0.8413830395
 [431] -0.8386288392 -0.8358566833 -0.8330669207 -0.8302599077 -0.8274360077
 [436] -0.8245955915 -0.8217390370 -0.8188667293 -0.8159790603 -0.8130764291
 [441] -0.8101592417 -0.8072279107 -0.8042828558 -0.8013245029 -0.7983532850
 [446] -0.7953696411 -0.7923740170 -0.7893668644 -0.7863486415 -0.7833198123
 [451] -0.7802808471 -0.7772322217 -0.7741744178 -0.7711079227 -0.7680332290
 [456] -0.7649508349 -0.7618612436 -0.7587649635 -0.7556625079 -0.7525543947
 [461] -0.7494411467 -0.7463232910 -0.7432013591 -0.7400758866 -0.7369474131
 [466] -0.7338164822 -0.7306836409 -0.7275494400 -0.7244144333 -0.7212791781
 [471] -0.7181442345 -0.7150101654 -0.7118775363 -0.7087469152 -0.7056188724
 [476] -0.7024939801 -0.6993728125 -0.6962559455 -0.6931439565 -0.6900374242
 [481] -0.6869369283 -0.6838430496 -0.6807563695 -0.6776774701 -0.6746069335
 [486] -0.6715453423 -0.6684932790 -0.6654513255 -0.6624200638 -0.6594000748
 [491] -0.6563919387 -0.6533962349 -0.6504135412 -0.6474444342 -0.6444894890
 [496] -0.6415492785 -0.6386243740 -0.6357153445 -0.6328227565 -0.6299471741
 [501] -0.6270890465 -0.6242456411 -0.6214143542 -0.6185952797 -0.6157885920
 [506] -0.6129944625 -0.6102130592 -0.6074445472 -0.6046890884 -0.6019468414
 [511] -0.5992179618 -0.5965026016 -0.5938009100 -0.5911130328 -0.5884391124
 [516] -0.5857792882 -0.5831336960 -0.5805024686 -0.5778857354 -0.5752836225
 [521] -0.5726962528 -0.5701237458 -0.5675662176 -0.5650237814 -0.5624965465
 [526] -0.5599846195 -0.5574881034 -0.5550070978 -0.5525416994 -0.5500920013
 [531] -0.5476580934 -0.5452400626 -0.5428379921 -0.5404519622 -0.5380820500
 [536] -0.5357283292 -0.5333908705 -0.5310697411 -0.5287650056 -0.5264767248
 [541] -0.5242049569 -0.5219497568 -0.5197111763 -0.5174892641 -0.5152840660
 [546] -0.5130956246 -0.5109239797 -0.5087691680 -0.5066312234 -0.5045101766
 [551] -0.5024060557 -0.5003188858 -0.4982486891 -0.4961954853 -0.4941592908
 [556] -0.4921401198 -0.4901379833 -0.4881528900 -0.4861848458 -0.4842338538
 [561] -0.4822999147 -0.4803830266 -0.4784831850 -0.4766003831 -0.4747346114
 [566] -0.4728858581 -0.4710541090 -0.4692393474 -0.4674415544 -0.4656607089
 [571] -0.4638967874 -0.4621497642 -0.4604196115 -0.4587062991 -0.4570097951
 [576] -0.4553300651 -0.4536670730 -0.4520207805 -0.4503911474 -0.4487781315
 [581] -0.4471816888 -0.4456017735 -0.4440383377 -0.4424913320 -0.4409607052
 [586] -0.4394464043 -0.4379483746 -0.4364665599 -0.4350009023 -0.4335513424
 [591] -0.4321178192 -0.4307002703 -0.4292986317 -0.4279128381 -0.4265428227
 [596] -0.4251885175 -0.4238498531 -0.4225267589 -0.4212191628 -0.4199269918
 [601] -0.4186501716 -0.4173886267 -0.4161422805 -0.4149110554 -0.4136948727
 [606] -0.4124936528 -0.4113073149 -0.4101357774 -0.4089789578 -0.4078367727
 [611] -0.4067091379 -0.4055959681 -0.4044971776 -0.4034126798 -0.4023423872
 [616] -0.4012862117 -0.4002440647 -0.3992158568 -0.3982014979 -0.3972008976
 [621] -0.3962139645 -0.3952406071 -0.3942807332 -0.3933342501 -0.3924010647
 [626] -0.3914810834 -0.3905742124 -0.3896803572 -0.3887994232 -0.3879313154
 [631] -0.3870759384 -0.3862331967 -0.3854029943 -0.3845852352 -0.3837798230
 [636] -0.3829866612 -0.3822056530 -0.3814367017 -0.3806797100 -0.3799345811
 [641] -0.3792012175 -0.3784795219 -0.3777693971 -0.3770707454 -0.3763834696
 [646] -0.3757074720 -0.3750426551 -0.3743889216 -0.3737461739 -0.3731143146
 [651] -0.3724932464 -0.3718828720 -0.3712830942 -0.3706938159 -0.3701149401
 [656] -0.3695463699 -0.3689880085 -0.3684397594 -0.3679015261 -0.3673732123
 [661] -0.3668547218 -0.3663459587 -0.3658468272 -0.3653572318 -0.3648770769
 [666] -0.3644062676 -0.3639447087 -0.3634926342 -0.3630516247 -0.3626219679
 [671] -0.3622034988 -0.3617960528 -0.3613994654 -0.3610135723 -0.3606382092
 [676] -0.3602732125 -0.3599184184 -0.3595736638 -0.3592387856 -0.3589136213
 [681] -0.3585980085 -0.3582917855 -0.3579947908 -0.3577068634 -0.3574278428
 [686] -0.3571575689 -0.3568958821 -0.3566426235 -0.3563976344 -0.3561607571
 [691] -0.3559318341 -0.3557107087 -0.3554972247 -0.3552912267 -0.3550925598
 [696] -0.3549010699 -0.3547166036 -0.3545390079 -0.3543681310 -0.3542038216
 [701] -0.3540459290 -0.3538943036 -0.3537487964 -0.3536092592 -0.3534755448
 [706] -0.3533475066 -0.3532249990 -0.3531078772 -0.3529959973 -0.3528892164
 [711] -0.3527873923 -0.3526903839 -0.3525980510 -0.3525102544 -0.3524268556
 [716] -0.3523477174 -0.3522727035 -0.3522016785 -0.3521345080 -0.3520710589
 [721] -0.3520111988 -0.3519547965 -0.3519017219 -0.3518518460 -0.3518050407
 [726] -0.3517611791 -0.3517201355 -0.3516817852 -0.3516460047 -0.3516126716
 [731] -0.3515816647 -0.3515528638 -0.3515261501 -0.3515014058 -0.3514785144
 [736] -0.3514573605 -0.3514378302 -0.3514198103 -0.3514031893 -0.3513878568
 [741] -0.3513737035 -0.3513606216 -0.3513485043 -0.3513372464 -0.3513267436
 [746] -0.3513168933 -0.3513075939 -0.3512987452 -0.3512902484 -0.3512820060
 [751] -0.3512739217 -0.3512659008 -0.3512578496 -0.3512496762 -0.3512412898
 [756] -0.3512326009 -0.3512235216 -0.3512139653 -0.3512038468 -0.3511930823
 [761] -0.3511815895 -0.3511692874 -0.3511560966 -0.3511419390 -0.3511267379
 [766] -0.3511104182 -0.3510929063 -0.3510741298 -0.3510540181 -0.3510325019
 [771] -0.3510095134 -0.3509849863 -0.3509588559 -0.3509310589 -0.3509015336
 [776] -0.3508702197 -0.3508370585 -0.3508019929 -0.3507649674 -0.3507259277
 [781] -0.3506848214 -0.3506415975 -0.3505962066 -0.3505486010 -0.3504987343
 [786] -0.3504465619 -0.3503920407 -0.3503351292 -0.3502757875 -0.3502139773
 [791] -0.3501496619 -0.3500828062 -0.3500133767 -0.3499413417 -0.3498666707
 [796] -0.3497893353 -0.3497093084 -0.3496265646 -0.3495410803 -0.3494528334
 [801] -0.3493618034 -0.3492679714 -0.3491713204 -0.3490718349 -0.3489695009
 [806] -0.3488643063 -0.3487562405 -0.3486452947 -0.3485314614 -0.3484147353
 [811] -0.3482951123 -0.3481725902 -0.3480471684 -0.3479188478 -0.3477876314
 [816] -0.3476535233 -0.3475165296 -0.3473766580 -0.3472339179 -0.3470883202
 [821] -0.3469398776 -0.3467886044 -0.3466345166 -0.3464776317 -0.3463179689
 [826] -0.3461555493 -0.3459903952 -0.3458225309 -0.3456519821 -0.3454787762
 [831] -0.3453029423 -0.3451245111 -0.3449435147 -0.3447599884 -0.3445742039
 [836] -0.3443864799 -0.3441967930 -0.3440050980 -0.3438113509 -0.3436155093
 [841] -0.3434175322 -0.3432173797 -0.3430150139 -0.3428103978 -0.3426034960
 [846] -0.3423942748 -0.3421827015 -0.3419687453 -0.3417523765 -0.3415335671
 [851] -0.3413122905 -0.3410885214 -0.3408622363 -0.3406334129 -0.3404020307
 [856] -0.3401680703 -0.3399315141 -0.3396923459 -0.3394505511 -0.3392061163
 [861] -0.3389590300 -0.3387092821 -0.3384568638 -0.3382017681 -0.3379439894
 [866] -0.3376835237 -0.3374203684 -0.3371545225 -0.3368859866 -0.3366147628
 [871] -0.3363408547 -0.3360642674 -0.3357850077 -0.3355030838 -0.3352185054
 [876] -0.3349312840 -0.3346414324 -0.3343489650 -0.3340538977 -0.3337562482
 [881] -0.3334560353 -0.3331532797 -0.3328480036 -0.3325402306 -0.3322299859
 [886] -0.3319172962 -0.3316021898 -0.3312846965 -0.3309648476 -0.3306426760
 [891] -0.3303182161 -0.3299915036 -0.3296625762 -0.3293314725 -0.3289982332
 [896] -0.3286629000 -0.3283255164 -0.3279861272 -0.3276447790 -0.3273015194
 [901] -0.3269563979 -0.3266094652 -0.3262607737 -0.3259103769 -0.3255583300
 [906] -0.3252046896 -0.3248495138 -0.3244928618 -0.3241347946 -0.3237753744
 [911] -0.3234146648 -0.3230527308 -0.3226896388 -0.3223254564 -0.3219602528
 [916] -0.3215940984 -0.3212270649 -0.3208592253 -0.3204906540 -0.3201214267
 [921] -0.3197516202 -0.3193813127 -0.3190105837 -0.3186395138 -0.3182681849
 [926] -0.3178966800 -0.3175250834 -0.3171534806 -0.3167819582 -0.3164106040
 [931] -0.3160395067 -0.3156687564 -0.3152984441 -0.3149286621 -0.3145595034
 [936] -0.3141910624 -0.3138234343 -0.3134567154 -0.3130910030 -0.3127263951
 [941] -0.3123629910 -0.3120008908 -0.3116401954 -0.3112810067 -0.3109234274
 [946] -0.3105675610 -0.3102135120 -0.3098613854 -0.3095112872 -0.3091633242
 [951] -0.3088176035 -0.3084742335 -0.3081333228 -0.3077949810 -0.3074593180
 [956] -0.3071264445 -0.3067964718 -0.3064695116 -0.3061456763 -0.3058250787
 [961] -0.3055078321 -0.3051940502 -0.3048838472 -0.3045773377 -0.3042746365
 [966] -0.3039758590 -0.3036811206 -0.3033905373 -0.3031042251 -0.3028223004
 [971] -0.3025448796 -0.3022720795 -0.3020040169 -0.3017408086 -0.3014825717
 [976] -0.3012294232 -0.3009814801 -0.3007388594 -0.3005016782 -0.3002700532
 [981] -0.3000441013 -0.2998239391 -0.2996096830 -0.2994014493 -0.2991993539
 [986] -0.2990035124 -0.2988140404 -0.2986310528 -0.2984546642 -0.2982849890
 [991] -0.2981221408 -0.2979662330 -0.2978173783 -0.2976756889 -0.2975412765
 [996] -0.2974142521 -0.2972947259 -0.2971828076 -0.2970786060 -0.2969822293
[1001] -0.2968932658 -0.2968070992 -0.2967215780 -0.2966366008 -0.2965520667
[1006] -0.2964678753 -0.2963839270 -0.2963001228 -0.2962163642 -0.2961325536
[1011] -0.2960485937 -0.2959643883 -0.2958798414 -0.2957948580 -0.2957093436
[1016] -0.2956232043 -0.2955363472 -0.2954486798 -0.2953601102 -0.2952705475
[1021] -0.2951799013 -0.2950880820 -0.2949950005 -0.2949005686 -0.2948046988
[1026] -0.2947073042 -0.2946082988 -0.2945075971 -0.2944051144 -0.2943007670
[1031] -0.2941944715 -0.2940861456 -0.2939757075 -0.2938630763 -0.2937481718
[1036] -0.2936309146 -0.2935112259 -0.2933890279 -0.2932642434 -0.2931367961
[1041] -0.2930066104 -0.2928736114 -0.2927377252 -0.2925988785 -0.2924569988
[1046] -0.2923120147 -0.2921638551 -0.2920124501 -0.2918577305 -0.2916996278
[1051] -0.2915380745 -0.2913730038 -0.2912043498 -0.2910320473 -0.2908560322
[1056] -0.2906762408 -0.2904926107 -0.2903050800 -0.2901135879 -0.2899180744
[1061] -0.2897184801 -0.2895147468 -0.2893068169 -0.2890946340 -0.2888781421
[1066] -0.2886572865 -0.2884320131 -0.2882022688 -0.2879680014 -0.2877291596
[1071] -0.2874856928 -0.2872375514 -0.2869846870 -0.2867270515 -0.2864645982
[1076] -0.2861972811 -0.2859250552 -0.2856478762 -0.2853657010 -0.2850784871
[1081] -0.2847861933 -0.2844887790 -0.2841862046 -0.2838784316 -0.2835654222
[1086] -0.2832471396 -0.2829235479 -0.2825946124 -0.2822602989 -0.2819205745
[1091] -0.2815754071 -0.2812247655 -0.2808686195 -0.2805069398 -0.2801396982
[1096] -0.2797668672 -0.2793884204 -0.2790043324 -0.2786145786 -0.2782191356
[1101] -0.2778179806 -0.2774110920 -0.2769984491 -0.2765800322 -0.2761558225
[1106] -0.2757258022 -0.2752899542 -0.2748482629 -0.2744007131 -0.2739472908
[1111] -0.2734879830 -0.2730227776 -0.2725516635 -0.2720746304 -0.2715916690
[1116] -0.2711027711 -0.2706079293 -0.2701071373 -0.2696003895 -0.2690876814
[1121] -0.2685690094 -0.2680443709 -0.2675137642 -0.2669771885 -0.2664346440
[1126] -0.2658861317 -0.2653316536 -0.2647712127 -0.2642048128 -0.2636324586
[1131] -0.2630541559 -0.2624699111 -0.2618797318 -0.2612836262 -0.2606816037
[1136] -0.2600736743 -0.2594598492 -0.2588401401 -0.2582145598 -0.2575831219
[1141] -0.2569458410 -0.2563027323 -0.2556538119 -0.2549990970 -0.2543386053
[1146] -0.2536723554 -0.2530003669 -0.2523226600 -0.2516392558 -0.2509501760
[1151] -0.2502554435 -0.2495550815 -0.2488491143 -0.2481375668 -0.2474204646
[1156] -0.2466978342 -0.2459697027 -0.2452360979 -0.2444970485 -0.2437525835
[1161] -0.2430027331 -0.2422475277 -0.2414869986 -0.2407211777 -0.2399500976
[1166] -0.2391737914 -0.2383922929 -0.2376046634 -0.2368086363 -0.2360039263
[1171] -0.2351905104 -0.2343683678 -0.2335374788 -0.2326978262 -0.2318493939
[1176] -0.2309921679 -0.2301261361 -0.2292512879 -0.2283676145 -0.2274751090
[1181] -0.2265737663 -0.2256635829 -0.2247445572 -0.2238166894 -0.2228799815
[1186] -0.2219344371 -0.2209800618 -0.2200168629 -0.2190448494 -0.2180640321
[1191] -0.2170744237 -0.2160760387 -0.2150688930 -0.2140530048 -0.2130283936
[1196] -0.2119950809 -0.2109530900 -0.2099024457 -0.2088431749 -0.2077753060
[1201] -0.2066988691 -0.2056138961 -0.2045204209 -0.2034184786 -0.2023081063
[1206] -0.2011893429 -0.2000622288 -0.1989268062 -0.1977831188 -0.1966312122
[1211] -0.1954711335 -0.1943029315 -0.1931266567 -0.1919423610 -0.1907500982
[1216] -0.1895499235 -0.1883418938 -0.1871260674 -0.1859025044 -0.1846712662
[1221] -0.1834324159 -0.1821860182 -0.1809321389 -0.1796708457 -0.1784022076
[1226] -0.1771262951 -0.1758431800 -0.1745529356 -0.1732556366 -0.1719513592
[1231] -0.1706401806 -0.1693221798 -0.1679974367 -0.1666660327 -0.1653280505
[1236] -0.1639835740 -0.1626326883 -0.1612754797 -0.1599120358 -0.1585424452
[1241] -0.1571667976 -0.1557851842 -0.1543976967 -0.1530044284 -0.1516054733
[1246] -0.1502009265 -0.1487908841 -0.1473754431 -0.1459547016 -0.1445287584
[1251] -0.1430977131 -0.1416616665 -0.1402207199 -0.1387749755 -0.1373245362
[1256] -0.1358695057 -0.1344099883 -0.1329460891 -0.1314779136 -0.1300055682
[1261] -0.1285291596 -0.1270487952 -0.1255645828 -0.1240766308 -0.1225850480
[1266] -0.1210899434 -0.1195914267 -0.1180896076 -0.1165845965 -0.1150765037
[1271] -0.1135654399 -0.1120515160 -0.1105348430 -0.1090155321 -0.1074936947
[1276] -0.1059694419 -0.1044428852 -0.1029141359 -0.1013833053 -0.0998505047
[1281] -0.0983158450 -0.0967794373 -0.0952413922 -0.0937018204 -0.0921608319
[1286] -0.0906185369 -0.0890750448 -0.0875304650 -0.0859849061 -0.0844384767
[1291] -0.0828912846 -0.0813434371 -0.0797950411 -0.0782462027 -0.0766970276
[1296] -0.0751476206 -0.0735980860 -0.0720485272 -0.0704990469 -0.0689497471
[1301] -0.0674007286 -0.0658520917 -0.0643039356 -0.0627563585 -0.0612094577
[1306] -0.0596633295 -0.0581180691 -0.0565737705 -0.0550305266 -0.0534884293
[1311] -0.0519475692 -0.0504080356 -0.0488699166 -0.0473332990 -0.0457982682
[1316] -0.0442649083 -0.0427333020 -0.0412035304 -0.0396756735 -0.0381498095
[1321] -0.0366260150 -0.0351043654 -0.0335849341 -0.0320677932 -0.0305530130
[1326] -0.0290406621 -0.0275308075 -0.0260235143 -0.0245188459 -0.0230168639
[1331] -0.0215176282 -0.0200211966 -0.0185276252 -0.0170369254 -0.0155483829
[1336] -0.0140614663 -0.0125761653 -0.0110924772 -0.0096103980 -0.0081299235
[1341] -0.0066510481 -0.0051737658 -0.0036980693 -0.0022239508 -0.0007514014
[1346]  0.0007195887  0.0021890304  0.0036569355  0.0051233166  0.0065881878
[1351]  0.0080515637  0.0095134604  0.0109738949  0.0124328854  0.0138904511
[1356]  0.0153466126  0.0168013914  0.0182548104  0.0197068935  0.0211576662
[1361]  0.0226071549  0.0240553874  0.0255023928  0.0269482016  0.0283928455
[1366]  0.0298363575  0.0312787722  0.0327201253  0.0341604541  0.0355997973
[1371]  0.0370381949  0.0384756885  0.0399123210  0.0413481370  0.0427831823
[1376]  0.0442175045  0.0456511526  0.0470841770  0.0485166299  0.0499485649
[1381]  0.0513800372  0.0528111037  0.0542418226  0.0556722542  0.0571024599
[1386]  0.0585325030  0.0599624485  0.0613923630  0.0628223146  0.0642523733
[1391]  0.0656826107  0.0671131000  0.0685439162  0.0699751359  0.0714068377
[1396]  0.0728391015  0.0742720092  0.0757056444  0.0771400924  0.0785754401
[1401]  0.0800117765  0.0814491919  0.0828877787  0.0843276310  0.0857688444
[1406]  0.0872115166  0.0886557469  0.0901016363  0.0915492876  0.0929988055
[1411]  0.0944502963  0.0959038680  0.0973596306  0.0988176956  0.1002781764
[1416]  0.1017411881  0.1032068475  0.1046752733  0.1061465857  0.1076209069
[1421]  0.1090983604  0.1105790719  0.1120631685  0.1135507791  0.1150420342
[1426]  0.1165370661  0.1180360087  0.1195389975  0.1210461697  0.1225576642
[1431]  0.1240736215  0.1255941835  0.1271194941  0.1286496983  0.1301849430
[1436]  0.1317253766  0.1332711488  0.1348224112  0.1363793165  0.1379420191
[1441]  0.1395106748  0.1410854408  0.1426664758  0.1442539398  0.1458479942
[1446]  0.1474488017  0.1490565265  0.1506713337  0.1522933902  0.1539228637
[1451]  0.1555599233  0.1572047392  0.1588574829  0.1605183268  0.1621874448
[1456]  0.1638650113  0.1655512021  0.1672461940  0.1689501646  0.1706632926
[1461]  0.1723857573  0.1741177392  0.1758594195  0.1776109800  0.1793726035
[1466]  0.1811444733  0.1829267734  0.1847196886  0.1865234039  0.1883381051
[1471]  0.1901639786  0.1920012108  0.1938499889  0.1957105002  0.1975829324
[1476]  0.1994674734  0.2013643113  0.2032736343  0.2051956309  0.2071304892
[1481]  0.2090783978  0.2110395448  0.2130141183  0.2150023063  0.2170042965
[1486]  0.2190202763  0.2210504327  0.2230949522  0.2251540209  0.2272278245
[1491]  0.2293165477  0.2314203749  0.2335394896  0.2356740743  0.2378243110
[1496]  0.2399903804  0.2421724624  0.2443707358  0.2465853780  0.2488165655
[1501]  0.2510648614  0.2533319449  0.2556182263  0.2579237980  0.2602487465
[1506]  0.2625931530  0.2649570930  0.2673406363  0.2697438472  0.2721667841
[1511]  0.2746094998  0.2770720413  0.2795544498  0.2820567605  0.2845790029
[1516]  0.2871212006  0.2896833712  0.2922655264  0.2948676719  0.2974898075
[1521]  0.3001319268  0.3027940176  0.3054760613  0.3081780337  0.3108999040
[1526]  0.3136416357  0.3164031859  0.3191845059  0.3219855405  0.3248062287
[1531]  0.3276465030  0.3305062901  0.3333855104  0.3362840781  0.3392019013
[1536]  0.3421388821  0.3450949162  0.3480698934  0.3510636974  0.3540762056
[1541]  0.3571072895  0.3601568144  0.3632246399  0.3663106190  0.3694145993
[1546]  0.3725364221  0.3756759228  0.3788329309  0.3820072702  0.3851987584
[1551]  0.3884072076  0.3916324241  0.3948742084  0.3981323556  0.4014066548
[1556]  0.4046968898  0.4080028389  0.4113242749  0.4146609651  0.4180126717
[1561]  0.4213791513  0.4247601556  0.4281554311  0.4315647192  0.4349877561
[1566]  0.4384242735  0.4418739980  0.4453366514  0.4488119510  0.4522996094
[1571]  0.4557993346  0.4593108305  0.4628337963  0.4663679271  0.4699129141
[1576]  0.4734684441  0.4770342001  0.4806098614  0.4841951033  0.4877895976
[1581]  0.4913930127  0.4950050134  0.4986252611  0.5022534144  0.5058891283
[1586]  0.5095320553  0.5131818447  0.5168381433  0.5205005952  0.5241688419
[1591]  0.5278425227  0.5315212745  0.5352047321  0.5388925285  0.5425842945
[1596]  0.5462796594  0.5499782506  0.5536796943  0.5573836153  0.5610896368
[1601]  0.5647973814  0.5685064703  0.5722165240  0.5759271624  0.5796380047
[1606]  0.5833486695  0.5870587754  0.5907679403  0.5944757826  0.5981819204
[1611]  0.6018859721  0.6055875563  0.6092862921  0.6129817994  0.6166736984
[1616]  0.6203616104  0.6240451577  0.6277239633  0.6313976519  0.6350658492
[1621]  0.6387281824  0.6423842803  0.6460337733  0.6496762938  0.6533114759
[1626]  0.6569389559  0.6605583722  0.6641693653  0.6677715782  0.6713646565
[1631]  0.6749482483  0.6785220041  0.6820855777  0.6856386254  0.6891808067
[1636]  0.6927117841  0.6962312233  0.6997387933  0.7032341664  0.7067170185
[1641]  0.7101870288  0.7136438805  0.7170872601  0.7205168582  0.7239323691
[1646]  0.7273334911  0.7307199264  0.7340913816  0.7374475671  0.7407881976
[1651]  0.7441129923  0.7474216744  0.7507139717  0.7539896164  0.7572483453
[1656]  0.7604898997  0.7637140252  0.7669204726  0.7701089969  0.7732793581
[1661]  0.7764313208  0.7795646546  0.7826791337  0.7857745373  0.7888506494
[1666]  0.7919072589  0.7949441187  0.7979586240  0.8009478620  0.8039114063
[1671]  0.8068489612  0.8097602391  0.8126449603  0.8155028532  0.8183336543
[1676]  0.8211371084  0.8239129682  0.8266609946  0.8293809568  0.8320726319
[1681]  0.8347358055  0.8373702712  0.8399758305  0.8425522935  0.8450994780
[1686]  0.8476172101  0.8501053239  0.8525636615  0.8549920731  0.8573904166
[1691]  0.8597585580  0.8620963711  0.8644037375  0.8666805466  0.8689266954
[1696]  0.8711420886  0.8733266383  0.8754802643  0.8776028936  0.8796944609
[1701]  0.8817549078  0.8837841833  0.8857822433  0.8877490511  0.8896845766
[1706]  0.8915887967  0.8934616951  0.8953032620  0.8971134944  0.8988923956
[1711]  0.9006399753  0.9023562497  0.9040412410  0.9056949774  0.9073174934
[1716]  0.9089088290  0.9104690303  0.9119981490  0.9134962421  0.9149633724
[1721]  0.9163996079  0.9178050219  0.9191796927  0.9205237039  0.9218371437
[1726]  0.9231201053  0.9243726865  0.9255949899  0.9267871224  0.9279491952
[1731]  0.9290813240  0.9301836284  0.9312562324  0.9322992635  0.9333128534
[1736]  0.9342971373  0.9352522542  0.9361783464  0.9370755598  0.9379440436
[1741]  0.9387839500  0.9395954345  0.9403786556  0.9411337745  0.9418609554
[1746]  0.9425603651  0.9432321731  0.9438765512  0.9444936737  0.9450837174
[1751]  0.9456468611  0.9461832856  0.9466931742  0.9471767116  0.9476340847
[1756]  0.9480654821  0.9484710940  0.9488511123  0.9492057303  0.9495351427
[1761]  0.9498395458  0.9501191368  0.9503741144  0.9506046783  0.9508110291
[1766]  0.9509933686  0.9511518992  0.9512868244  0.9513983483  0.9514866757
[1771]  0.9515520120  0.9515945631  0.9516145354  0.9516121358  0.9515875714
[1776]  0.9515410498  0.9514727785  0.9513829655  0.9512718187  0.9511395461
[1781]  0.9509863559  0.9508124561  0.9506180544  0.9504033586  0.9501685764
[1786]  0.9499139149  0.9496395812  0.9493457820  0.9490327236  0.9487006117
[1791]  0.9483496519  0.9479800490  0.9475920072  0.9471857305  0.9467614219
[1796]  0.9463192839  0.9458595184  0.9453823263  0.9448879080  0.9443764630
[1801]  0.9438481900  0.9433032870  0.9427419508  0.9421643775  0.9415707624
[1806]  0.9409612996  0.9403361824  0.9396956029  0.9390397524  0.9383688210
[1811]  0.9376829979  0.9369824710  0.9362674273  0.9355380525  0.9347945314
[1816]  0.9340370472  0.9332657826  0.9324809184  0.9316826347  0.9308711103
[1821]  0.9300465226  0.9292090478  0.9283588611  0.9274961362  0.9266210455
[1826]  0.9257337603  0.9248344506  0.9239232848  0.9230004305  0.9220660537
[1831]  0.9211203190  0.9201633898  0.9191954283  0.9182165225  0.9172263408
[1836]  0.9162248787  0.9152122994  0.9141887647  0.9131544347  0.9121094677
[1841]  0.9110540209  0.9099882495  0.9089123074  0.9078263469  0.9067305188
[1846]  0.9056249723  0.9045098551  0.9033853134  0.9022514919  0.9011085338
[1851]  0.8999565808  0.8987957730  0.8976262492  0.8964481466  0.8952616010
[1856]  0.8940667469  0.8928637170  0.8916526428  0.8904336544  0.8892068803
[1861]  0.8879724479  0.8867304828  0.8854811096  0.8842244512  0.8829606293
[1866]  0.8816897642  0.8804119749  0.8791273789  0.8778360926  0.8765382309
[1871]  0.8752339074  0.8739232345  0.8726063231  0.8712832831  0.8699542229
[1876]  0.8686192498  0.8672784697  0.8659319873  0.8645799061  0.8632223284
[1881]  0.8618593552  0.8604910863  0.8591176205  0.8577390551  0.8563554865
[1886]  0.8549670098  0.8535737189  0.8521757068  0.8507730650  0.8493658843
[1891]  0.8479542539  0.8465382624  0.8451179970  0.8436935439  0.8422649881
[1896]  0.8408324138  0.8393959039  0.8379555405  0.8365114043  0.8350635754
[1901]  0.8336121326  0.8321571538  0.8306987160  0.8292368949  0.8277717656
[1906]  0.8263034019  0.8248318771  0.8233572630  0.8218796308  0.8203990508
[1911]  0.8189155922  0.8174293235  0.8159403120  0.8144486244  0.8129543264
[1916]  0.8114574828  0.8099581577  0.8084564141  0.8069523143  0.8054459199
[1921]  0.8039372912  0.8024264883  0.8009135701  0.7993985947  0.7978816197
[1926]  0.7963627015  0.7948418960  0.7933192583  0.7917948428  0.7902687030
[1931]  0.7887408916  0.7872114609  0.7856804621  0.7841479459  0.7826139623
[1936]  0.7810785604  0.7795417889  0.7780036956  0.7764643276  0.7749237314
[1941]  0.7733819530  0.7718390374  0.7702950293  0.7687499725  0.7672039103
[1946]  0.7656568853  0.7641089395  0.7625601143  0.7610104506  0.7594599886
[1951]  0.7579087677  0.7563568272  0.7548042054  0.7532509401  0.7516970688
[1956]  0.7501426281  0.7485876543  0.7470321830  0.7454762493  0.7439198879
[1961]  0.7423631327  0.7408060174  0.7392485749  0.7376908378  0.7361328382
[1966]  0.7345746074  0.7330161766  0.7314575763  0.7298988367  0.7283399872
[1971]  0.7267810570  0.7252220749  0.7236630690  0.7221040671  0.7205450965
[1976]  0.7189861842  0.7174273565  0.7158686395  0.7143100589  0.7127516398
[1981]  0.7111934069  0.7096353847  0.7080775971  0.7065200677  0.7049628197
[1986]  0.7034058758  0.7018492585  0.7002929897  0.6987370912  0.6971815842
[1991]  0.6956264897  0.6940718282  0.6925176199  0.6909638846  0.6894106420
[1996]  0.6878579111  0.6863057108  0.6847540595  0.6832029756  0.6816524767
> plot(mu.temp, type = "l")
> mu.temp <- fitSDE_mu(group[[2]], kk)
> plot(mu.temp, type = "l")
> mu.temp <- fitSDE_mu(group[[3]], kk)
> plot(mu.temp, type = "l")
> subpara1 <- FitsubSDE(group[[1]])
Error in help.search(c("?", "for (i in 1:length(plotpoints)) {\n    Et.temp[, i] <- (Acc.temp[, i] - mu.temp[i] * Velo.temp[, i])/Velo.temp[, i]\n    temp <- remove_outliers(Et.temp[, i])\n    table[which(is.na(temp)), i] <- 1\n    temp2 <- Et.temp[, i] * Velo.temp[, i]\n    sigma.temp[i] <- sd(temp[which(!is.na(temp))]/sqrt(7/Nt))\n    sigma2.temp[i] <- sd(temp2)/sqrt(7/Nt)\n}" : 
  argument ‘pattern’ must be a single character string
> 
> FitsubSDE <- function(index){
+ 	Acc.temp <- Acc.smooth[index, ]
+ 	Velo.temp <- Velo.smooth[index, ]
+     Logprice.temp <- LogPrice.smooth[index, ]
+     N.auc.temp <- length(index)
+     Et.temp <- matrix(0, N.auc.temp, Nt)
+ 	sigma.temp <- rep(0, Nt)
+ 	sigma2.temp <- rep(0, Nt)
+     table <- matrix(0, N.auc.temp, Nt)
+ 	mu.temp <- fitSDE_mu(index, kk)
+ 	
+ 	for(i in 1:length(plotpoints)){
+ 		Et.temp[ , i] <- (Acc.temp[, i] - mu.temp[i]*Velo.temp[, i])/Velo.temp[,i]
+ 		## remove real outlier?
+ 		#temp <- remove_outliers(Et[ , i])
+ 		## or remove some percentile
+ 		temp <- remove_outliers(Et.temp[, i])
+ 		table[which(is.na(temp)) ,i] <- 1 
+ 		temp2 <- Et.temp[, i] * Velo.temp[,i]
+ 		sigma.temp[i] <- sd(temp[which(!is.na(temp))] / sqrt(7/Nt))
+ 		sigma2.temp[i] <- sd(temp2) / sqrt(7/Nt)
+ 	}	
+ 	par(mfrow=c(1,3))
+ 	plot(plotpoints, sigma.temp,type = "l")
+ 	plot(plotpoints, apply(table, 2,sum),type = "l",main= "no of outliers deleted")
+ 	plot(plotpoints, sigma2.temp,type = "l")
+ 	
+ 
+ 
+ 	Fratio.sto1 <- rep(0, Nt)
+ 	Fratio.sto2 <- rep(0, Nt)
+ 	Fratio.C <- rep(0, Nt)
+ 	psseL2 <- psseL1 <- 0
+ 	for(i in 1:Nt){
+ 		psse0 <- sum(Acc.temp[, i] ^ 2)
+ 		psseC <- sum((Velo.temp[, i] * mu.temp[i]- Acc.temp[, i]) ^ 2)
+ 		psseL2 <- psseL1 <- 0
+ 		psseL2 <- sum((Velo.temp[, i] * mu.temp[i] + sigma2.temp[i] * rnorm(N.auc.temp,0,sqrt(7/Nt)) - Acc.temp[, i]) ^ 2)
+ 	
+ 		
+ 		psseL1 <- sum((Velo.temp[, i] * mu.temp[i] + sigma.temp[i] * Velo.temp[,i] * rnorm(N.auc.temp,0,sqrt(7/Nt)) - Acc.temp[, i]) ^ 2)
+ 		Fratio.C[i] <- (psse0-psseC)/psse0
+ 		Fratio.sto1[i] <- (psse0-psseL1)/psse0 
+ 		Fratio.sto2[i] <- (psse0-psseL2)/psse0
+ 	}
+ 	
+ 	plot(plotpoints, Fratio.sto2, type = "l")
+ 	lines(plotpoints, Fratio.sto1, type = "l", col = "red")
+ 	lines(plotpoints, Fratio.C,type = "l", col = "blue", lty = 2)
+ 
+ return(list(sigma1 = sigma.temp, sigma2 = sigma2.temp, F0 = Fratio.C, F1 = Fratio.sto1, F2 = Fratio.sto2))
+ }
> 
> subpara1 <- FitsubSDE(group[[1]])
Error: could not find function "remove_outliers"
> 
> 
> FitsubSDE <- function(index){
+ 	
+ 	remove_outliers <- function(x, na.rm = TRUE, ...) {
+ 	  qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
+ 	  H <- 1.5 * IQR(x, na.rm = na.rm)
+ 	  y <- x
+ 	  y[x < (qnt[1] - H)] <- NA
+ 	  y[x > (qnt[2] + H)] <- NA
+ 	  y
+ 	}
+ 	
+ 	remove_quantile <- function(x, first, last){
+ 		qnt <- quantile(x, probs=c(first, last))
+ 		y <- x
+ 		y[x < qnt[1]] <- NA
+ 		y[x > qnt[2]] <- NA
+ 		y
+ 	}
+ 
+ 	Acc.temp <- Acc.smooth[index, ]
+ 	Velo.temp <- Velo.smooth[index, ]
+     Logprice.temp <- LogPrice.smooth[index, ]
+     N.auc.temp <- length(index)
+     Et.temp <- matrix(0, N.auc.temp, Nt)
+ 	sigma.temp <- rep(0, Nt)
+ 	sigma2.temp <- rep(0, Nt)
+     table <- matrix(0, N.auc.temp, Nt)
+ 	mu.temp <- fitSDE_mu(index, kk)
+ 	
+ 	for(i in 1:length(plotpoints)){
+ 		Et.temp[ , i] <- (Acc.temp[, i] - mu.temp[i]*Velo.temp[, i])/Velo.temp[,i]
+ 		## remove real outlier?
+ 		#temp <- remove_outliers(Et[ , i])
+ 		## or remove some percentile
+ 		temp <- remove_outliers(Et.temp[, i])
+ 		table[which(is.na(temp)) ,i] <- 1 
+ 		temp2 <- Et.temp[, i] * Velo.temp[,i]
+ 		sigma.temp[i] <- sd(temp[which(!is.na(temp))] / sqrt(7/Nt))
+ 		sigma2.temp[i] <- sd(temp2) / sqrt(7/Nt)
+ 	}	
+ 	par(mfrow=c(1,3))
+ 	plot(plotpoints, sigma.temp,type = "l")
+ 	plot(plotpoints, apply(table, 2,sum),type = "l",main= "no of outliers deleted")
+ 	plot(plotpoints, sigma2.temp,type = "l")
+ 	
+ 
+ 
+ 	Fratio.sto1 <- rep(0, Nt)
+ 	Fratio.sto2 <- rep(0, Nt)
+ 	Fratio.C <- rep(0, Nt)
+ 	psseL2 <- psseL1 <- 0
+ 	for(i in 1:Nt){
+ 		psse0 <- sum(Acc.temp[, i] ^ 2)
+ 		psseC <- sum((Velo.temp[, i] * mu.temp[i]- Acc.temp[, i]) ^ 2)
+ 		psseL2 <- psseL1 <- 0
+ 		psseL2 <- sum((Velo.temp[, i] * mu.temp[i] + sigma2.temp[i] * rnorm(N.auc.temp,0,sqrt(7/Nt)) - Acc.temp[, i]) ^ 2)
+ 	
+ 		
+ 		psseL1 <- sum((Velo.temp[, i] * mu.temp[i] + sigma.temp[i] * Velo.temp[,i] * rnorm(N.auc.temp,0,sqrt(7/Nt)) - Acc.temp[, i]) ^ 2)
+ 		Fratio.C[i] <- (psse0-psseC)/psse0
+ 		Fratio.sto1[i] <- (psse0-psseL1)/psse0 
+ 		Fratio.sto2[i] <- (psse0-psseL2)/psse0
+ 	}
+ 	
+ 	plot(plotpoints, Fratio.sto2, type = "l")
+ 	lines(plotpoints, Fratio.sto1, type = "l", col = "red")
+ 	lines(plotpoints, Fratio.C,type = "l", col = "blue", lty = 2)
+ 
+ return(list(sigma1 = sigma.temp, sigma2 = sigma2.temp, F0 = Fratio.C, F1 = Fratio.sto1, F2 = Fratio.sto2))
+ }
> 
> 
> fitSDE_mu <- function(index, kk){
+ 	kern <- function(h, u){(h^2 - u^2)*(u>-h && u <=0)}
+ 	
+ 	addpoints <- seq(0,7,len=kk*(Nt-1)+1)
+ 	
+ 	Acc.temp <- Acc.smooth[index, ]
+ 	Velo.temp <- Velo.smooth[index, ]
+     Logprice.temp <- LogPrice.smooth[index, ]
+     N.auc.temp <- length(index)
+ 	LogPrice.add <-  matrix(0, N.auc.temp, length(addpoints))
+ 	Velo.add <-  matrix(0, N.auc.temp, length(addpoints))
+ 	Acc.add <-  matrix(0, N.auc.temp, length(addpoints))
+ 	
+ 	for(i in 1 : N.auc.temp){
+ 	  temp <- SPLINE(EBAY[[index[i]]]$Time,log(EBAY[[index[i]]]$Price), addpoints)
+ 	  LogPrice.add[i, ] <- temp[, 1]
+ 	  Velo.add[i, ] <- temp[, 2]
+ 	  Acc.add[i, ] <- temp[, 3]
+ 	}
+ 	
+ 	mu <- rep(0, length(plotpoints))
+     rsq <- rep(0, length(plotpoints))
+ 
+ 	kk.back <- kk*10
+ 	for(i in 1:length(plotpoints)){
+ 		response <- Acc.add[ , max(1, kk*(i-1)+1-kk.back) : (kk*(i-1)+1)]
+ 		x <- Velo.add[, max(1, kk*(i-1)+1-kk.back) : (kk*(i-1)+1)]
+ 		response <- as.vector(t(response))
+ 		x <- as.vector(t(x))
+ 		timediff <- seq(-length(x)/N.auc.temp + 1 , 0) * (7 / ((Nt-1) * kk))
+ 		weight <- rep(0, length(timediff))
+ 		for(j in 1:length(weight)){
+ 			weight[j] <- kern(7/Nt, timediff[j])
+ 		}
+ 	
+ 	
+ 		weight  <- rep( weight , N.auc.temp )
+ 		fit <- lm(response ~ x - 1, weights = weight)
+ 		mu[i] <- fit$coefficient
+ 		rsq[i] <- summary(fit)$r.squared	
+ 	}
+ 	
+ 	return(mu)
+ 
+ }
> 
> 
> subpara1 <- FitsubSDE(group[[1]])
> subpara2 <- FitsubSDE(group[[2]])
> subpara3 <- FitsubSDE(group[[3]])
> debug(FitsubSDE)
> 
InterVA
p.hat
p.hat
p.hat
p.hat
p.hat
p.hat
p.hat
p.hat
p.hat
p.hat
p.hat
p.hat
Error: object 'at' not found
> subpara2 <- FitsubSDE(group[[2]])
debugging in: FitsubSDE(group[[2]])
debug at #1: {
    remove_outliers <- function(x, na.rm = TRUE, ...) {
        qnt <- quantile(x, probs = c(0.25, 0.75), na.rm = na.rm, 
            ...)
        H <- 1.5 * IQR(x, na.rm = na.rm)
        y <- x
        y[x < (qnt[1] - H)] <- NA
        y[x > (qnt[2] + H)] <- NA
        y
    }
    remove_quantile <- function(x, first, last) {
        qnt <- quantile(x, probs = c(first, last))
        y <- x
        y[x < qnt[1]] <- NA
        y[x > qnt[2]] <- NA
        y
    }
    Acc.temp <- Acc.smooth[index, ]
    Velo.temp <- Velo.smooth[index, ]
    Logprice.temp <- LogPrice.smooth[index, ]
    N.auc.temp <- length(index)
    Et.temp <- matrix(0, N.auc.temp, Nt)
    sigma.temp <- rep(0, Nt)
    sigma2.temp <- rep(0, Nt)
    table <- matrix(0, N.auc.temp, Nt)
    mu.temp <- fitSDE_mu(index, kk)
    for (i in 1:length(plotpoints)) {
        Et.temp[, i] <- (Acc.temp[, i] - mu.temp[i] * Velo.temp[, 
            i])/Velo.temp[, i]
        temp <- remove_outliers(Et.temp[, i])
        table[which(is.na(temp)), i] <- 1
        temp2 <- Et.temp[, i] * Velo.temp[, i]
        sigma.temp[i] <- sd(temp[which(!is.na(temp))]/sqrt(7/Nt))
        sigma2.temp[i] <- sd(temp2)/sqrt(7/Nt)
    }
    par(mfrow = c(1, 3))
    plot(plotpoints, sigma.temp, type = "l")
    plot(plotpoints, apply(table, 2, sum), type = "l", main = "no of outliers deleted")
    plot(plotpoints, sigma2.temp, type = "l")
    Fratio.sto1 <- rep(0, Nt)
    Fratio.sto2 <- rep(0, Nt)
    Fratio.C <- rep(0, Nt)
    psseL2 <- psseL1 <- 0
    for (i in 1:Nt) {
        psse0 <- sum(Acc.temp[, i]^2)
        psseC <- sum((Velo.temp[, i] * mu.temp[i] - Acc.temp[, 
            i])^2)
        psseL2 <- psseL1 <- 0
        psseL2 <- sum((Velo.temp[, i] * mu.temp[i] + sigma2.temp[i] * 
            rnorm(N.auc.temp, 0, sqrt(7/Nt)) - Acc.temp[, i])^2)
        psseL1 <- sum((Velo.temp[, i] * mu.temp[i] + sigma.temp[i] * 
            Velo.temp[, i] * rnorm(N.auc.temp, 0, sqrt(7/Nt)) - 
            Acc.temp[, i])^2)
        Fratio.C[i] <- (psse0 - psseC)/psse0
        Fratio.sto1[i] <- (psse0 - psseL1)/psse0
        Fratio.sto2[i] <- (psse0 - psseL2)/psse0
    }
    plot(plotpoints, Fratio.sto2, type = "l")
    lines(plotpoints, Fratio.sto1, type = "l", col = "red")
    lines(plotpoints, Fratio.C, type = "l", col = "blue", lty = 2)
    return(list(sigma1 = sigma.temp, sigma2 = sigma2.temp, F0 = Fratio.C, 
        F1 = Fratio.sto1, F2 = Fratio.sto2))
}
Browse[2]> 
debug at #3: remove_outliers <- function(x, na.rm = TRUE, ...) {
    qnt <- quantile(x, probs = c(0.25, 0.75), na.rm = na.rm, 
        ...)
    H <- 1.5 * IQR(x, na.rm = na.rm)
    y <- x
    y[x < (qnt[1] - H)] <- NA
    y[x > (qnt[2] + H)] <- NA
    y
}
Browse[2]> 
debug at #12: remove_quantile <- function(x, first, last) {
    qnt <- quantile(x, probs = c(first, last))
    y <- x
    y[x < qnt[1]] <- NA
    y[x > qnt[2]] <- NA
    y
}
Browse[2]> 
debug at #20: Acc.temp <- Acc.smooth[index, ]
Browse[2]> 
debug at #21: Velo.temp <- Velo.smooth[index, ]
Browse[2]> 
debug at #22: Logprice.temp <- LogPrice.smooth[index, ]
Browse[2]> 
debug at #23: N.auc.temp <- length(index)
Browse[2]> 
debug at #24: Et.temp <- matrix(0, N.auc.temp, Nt)
Browse[2]> 
debug at #25: sigma.temp <- rep(0, Nt)
Browse[2]> 
debug at #26: sigma2.temp <- rep(0, Nt)
Browse[2]> 
debug at #27: table <- matrix(0, N.auc.temp, Nt)
Browse[2]> 
debug at #28: mu.temp <- fitSDE_mu(index, kk)
Browse[2]> 
debug at #30: for (i in 1:length(plotpoints)) {
    Et.temp[, i] <- (Acc.temp[, i] - mu.temp[i] * Velo.temp[, 
        i])/Velo.temp[, i]
    temp <- remove_outliers(Et.temp[, i])
    table[which(is.na(temp)), i] <- 1
    temp2 <- Et.temp[, i] * Velo.temp[, i]
    sigma.temp[i] <- sd(temp[which(!is.na(temp))]/sqrt(7/Nt))
    sigma2.temp[i] <- sd(temp2)/sqrt(7/Nt)
}


Browse[2]> 
debug at #30: i
Browse[2]> 
debug at #31: Et.temp[, i] <- (Acc.temp[, i] - mu.temp[i] * Velo.temp[, i])/Velo.temp[, 
    i]
Browse[2]> 
debug at #35: temp <- remove_outliers(Et.temp[, i])
Browse[2]> 
debug at #36: table[which(is.na(temp)), i] <- 1
Browse[2]> 
debug at #37: temp2 <- Et.temp[, i] * Velo.temp[, i]
Browse[2]> 
debug at #38: sigma.temp[i] <- sd(temp[which(!is.na(temp))]/sqrt(7/Nt))
Browse[2]> 
debug at #39: sigma2.temp[i] <- sd(temp2)/sqrt(7/Nt)
Browse[2]> 
debug at #30: i
Browse[2]> 
debug at #31: Et.temp[, i] <- (Acc.temp[, i] - mu.temp[i] * Velo.temp[, i])/Velo.temp[, 
    i]
Browse[2]> 
debug at #35: temp <- remove_outliers(Et.temp[, i])
Browse[2]> 
debug at #36: table[which(is.na(temp)), i] <- 1
Browse[2]> 
debug at #37: temp2 <- Et.temp[, i] * Velo.temp[, i]
Browse[2]> 
debug at #38: sigma.temp[i] <- sd(temp[which(!is.na(temp))]/sqrt(7/Nt))
Browse[2]> 
debug at #39: sigma2.temp[i] <- sd(temp2)/sqrt(7/Nt)
Browse[2]> 
debug at #30: i
Browse[2]> 
debug at #31: Et.temp[, i] <- (Acc.temp[, i] - mu.temp[i] * Velo.temp[, i])/Velo.temp[, 
    i]
Browse[2]> 
debug at #35: temp <- remove_outliers(Et.temp[, i])
Browse[2]> 
debug at #36: table[which(is.na(temp)), i] <- 1
Browse[2]> 
debug at #37: temp2 <- Et.temp[, i] * Velo.temp[, i]
Browse[2]> 
debug at #38: sigma.temp[i] <- sd(temp[which(!is.na(temp))]/sqrt(7/Nt))
Browse[2]> 
debug at #39: sigma2.temp[i] <- sd(temp2)/sqrt(7/Nt)
Browse[2]> 
debug at #30: i
Browse[2]> 
debug at #31: Et.temp[, i] <- (Acc.temp[, i] - mu.temp[i] * Velo.temp[, i])/Velo.temp[, 
    i]
Browse[2]> 
debug at #35: temp <- remove_outliers(Et.temp[, i])
Browse[2]> 
debug at #36: table[which(is.na(temp)), i] <- 1
Browse[2]> 
debug at #37: temp2 <- Et.temp[, i] * Velo.temp[, i]
Browse[2]> 
debug at #38: sigma.temp[i] <- sd(temp[which(!is.na(temp))]/sqrt(7/Nt))
Browse[2]> 
debug at #39: sigma2.temp[i] <- sd(temp2)/sqrt(7/Nt)
Browse[2]> 
debug at #30: i
Browse[2]> 
debug at #31: Et.temp[, i] <- (Acc.temp[, i] - mu.temp[i] * Velo.temp[, i])/Velo.temp[, 
    i]
Browse[2]> 
debug at #35: temp <- remove_outliers(Et.temp[, i])
Browse[2]> 
debug at #36: table[which(is.na(temp)), i] <- 1
Browse[2]> 
debug at #37: temp2 <- Et.temp[, i] * Velo.temp[, i]
Browse[2]> q
function (save = "default", status = 0, runLast = TRUE) 
.Call("RappQuit", save, status, runLast)
<environment: 0x10bf58440>
Browse[2]> q()
Error in q() : cancelled by user
Browse[2]> undebug(FitsubSDE)
Browse[2]> 
debug at #38: sigma.temp[i] <- sd(temp[which(!is.na(temp))]/sqrt(7/Nt))
Browse[2]> 
debug at #39: sigma2.temp[i] <- sd(temp2)/sqrt(7/Nt)
Browse[2]> 
debug at #30: i
Browse[2]> 
debug at #31: Et.temp[, i] <- (Acc.temp[, i] - mu.temp[i] * Velo.temp[, i])/Velo.temp[, 
    i]
Browse[2]> 
debug at #35: temp <- remove_outliers(Et.temp[, i])
Browse[2]> 
debug at #36: table[which(is.na(temp)), i] <- 1
Browse[2]> 
debug at #37: temp2 <- Et.temp[, i] * Velo.temp[, i]
Browse[2]> 
debug at #38: sigma.temp[i] <- sd(temp[which(!is.na(temp))]/sqrt(7/Nt))
Browse[2]> 
debug at #39: sigma2.temp[i] <- sd(temp2)/sqrt(7/Nt)
Browse[2]> 
debug at #30: i
Browse[2]> 
debug at #31: Et.temp[, i] <- (Acc.temp[, i] - mu.temp[i] * Velo.temp[, i])/Velo.temp[, 
    i]
Browse[2]> 
debug at #35: temp <- remove_outliers(Et.temp[, i])
Browse[2]> 
debug at #36: table[which(is.na(temp)), i] <- 1
Browse[2]> 
debug at #37: temp2 <- Et.temp[, i] * Velo.temp[, i]
Browse[2]> 
debug at #38: sigma.temp[i] <- sd(temp[which(!is.na(temp))]/sqrt(7/Nt))
Browse[2]> 
debug at #39: sigma2.temp[i] <- sd(temp2)/sqrt(7/Nt)
Browse[2]> 
debug at #30: i
Browse[2]> 
debug at #31: Et.temp[, i] <- (Acc.temp[, i] - mu.temp[i] * Velo.temp[, i])/Velo.temp[, 
    i]
Browse[2]> 
debug at #35: temp <- remove_outliers(Et.temp[, i])
Browse[2]> 
debug at #36: table[which(is.na(temp)), i] <- 1
Browse[2]> c
debug at #41: par(mfrow = c(1, 3))
Browse[2]> 
debug at #42: plot(plotpoints, sigma.temp, type = "l")
Browse[2]> 
debug at #43: plot(plotpoints, apply(table, 2, sum), type = "l", main = "no of outliers deleted")
Browse[2]> c
> c
[1] 1.317927
> c
[1] 1.317927
> c
[1] 1.317927
> undebug(FitsubSDE)
Warning message:
In undebug(fun) : argument is not being debugged
> for(i in 1:10000){
+ 	for(j in 1:10000){
+ 		for(k in 1:10000){
+ 			
+ 		}
+ 	}
+ 	cat(".")
+ }
.
> for(i in 1:1000){
+ 	for(j in 1:1000){
+ 		for(k in 1:1000){
+ 			
+ 		}
+ 	}
+ 	cat(".")
+ }
.......................................................................................
> source("testfunc.R")
............................................................................................................................................................................................................................................................................................................
> source("testfunc.R")
................................................................................
> source("testfunc.R")
........................................................................................................................................................................................................****************************************************************************************************
> source("testfunc.R")
........................................................................................................................................................................................................****************************************************************************************************
> FitsubSDE <- function(index){
+ 	
+ 	remove_outliers <- function(x, na.rm = TRUE, ...) {
+ 	  qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
+ 	  H <- 1.5 * IQR(x, na.rm = na.rm)
+ 	  y <- x
+ 	  y[x < (qnt[1] - H)] <- NA
+ 	  y[x > (qnt[2] + H)] <- NA
+ 	  y
+ 	}
+ 	
+ 	remove_quantile <- function(x, first, last){
+ 		qnt <- quantile(x, probs=c(first, last))
+ 		y <- x
+ 		y[x < qnt[1]] <- NA
+ 		y[x > qnt[2]] <- NA
+ 		y
+ 	}
+ 
+ 	Acc.temp <- Acc.smooth[index, ]
+ 	Velo.temp <- Velo.smooth[index, ]
+     Logprice.temp <- LogPrice.smooth[index, ]
+     N.auc.temp <- length(index)
+     Et.temp <- matrix(0, N.auc.temp, Nt)
+ 	sigma.temp <- rep(0, Nt)
+ 	sigma2.temp <- rep(0, Nt)
+     table <- matrix(0, N.auc.temp, Nt)
+ 	mu.temp <- fitSDE_mu(index, kk)
+ 	
+ 	for(i in 1:length(plotpoints)){
+ 		Et.temp[ , i] <- (Acc.temp[, i] - mu.temp[i]*Velo.temp[, i])/Velo.temp[,i]
+ 		## remove real outlier?
+ 		#temp <- remove_outliers(Et[ , i])
+ 		## or remove some percentile
+ 		temp <- remove_quantile(Et.temp[, i], 0.2, 0.8)
+ 		table[which(is.na(temp)) ,i] <- 1 
+ 		temp2 <- Et.temp[, i] * Velo.temp[,i]
+ 		sigma.temp[i] <- sd(temp[which(!is.na(temp))] / sqrt(7/Nt))
+ 		sigma2.temp[i] <- sd(temp2) / sqrt(7/Nt)
+ 	}	
+ 	par(mfrow=c(1,3))
+ 	plot(plotpoints, sigma.temp,type = "l")
+ 	plot(plotpoints, apply(table, 2,sum),type = "l",main= "no of outliers deleted")
+ 	plot(plotpoints, sigma2.temp,type = "l")
+ 	
+ 
+ 
+ 	Fratio.sto1 <- rep(0, Nt)
+ 	Fratio.sto2 <- rep(0, Nt)
+ 	Fratio.C <- rep(0, Nt)
+ 	psseL2 <- psseL1 <- 0
+ 	for(i in 1:Nt){
+ 		psse0 <- sum(Acc.temp[, i] ^ 2)
+ 		psseC <- sum((Velo.temp[, i] * mu.temp[i]- Acc.temp[, i]) ^ 2)
+ 		psseL2 <- psseL1 <- 0
+ 		psseL2 <- sum((Velo.temp[, i] * mu.temp[i] + sigma2.temp[i] * rnorm(N.auc.temp,0,sqrt(7/Nt)) - Acc.temp[, i]) ^ 2)
+ 	
+ 		
+ 		psseL1 <- sum((Velo.temp[, i] * mu.temp[i] + sigma.temp[i] * Velo.temp[,i] * rnorm(N.auc.temp,0,sqrt(7/Nt)) - Acc.temp[, i]) ^ 2)
+ 		Fratio.C[i] <- (psse0-psseC)/psse0
+ 		Fratio.sto1[i] <- (psse0-psseL1)/psse0 
+ 		Fratio.sto2[i] <- (psse0-psseL2)/psse0
+ 	}
+ 	
+ 	plot(plotpoints, Fratio.sto2, type = "l")
+ 	lines(plotpoints, Fratio.sto1, type = "l", col = "red")
+ 	lines(plotpoints, Fratio.C,type = "l", col = "blue", lty = 2)
+ 
+ return(list(sigma1 = sigma.temp, sigma2 = sigma2.temp, F0 = Fratio.C, F1 = Fratio.sto1, F2 = Fratio.sto2))
+ }
> subpara1 <- FitsubSDE(group[[1]])
> subpara2 <- FitsubSDE(group[[2]])
> subpara3 <- FitsubSDE(group[[3]])
> fitsubSDE.jump <- function(index){
+ 	all.res <- NULL
+ 	Acc.temp <- Acc.smooth[index, ]
+ 	Velo.temp <- Velo.smooth[index, ]
+ 	mu.temp <- fitSDE_mu(index, kk)
+ 	for(i in 1:length(plotpoints)){
+ 		temp <- (Acc.temp[, i] - mu.temp[i]*Velo.smooth.temp[, i])/Velo.smooth.temp[,i]
+ 		all.res <- c(all.res,remove_outliers(temp))
+ 	}	
+ 	all.res <- all.res[-which(is.na(all.res))]
+ 	## calculate Cumulants of the residuals
+ 	require(moments)
+ 	library(moments)
+ 	m1 <- moment(all.res, order = 1)
+ 	m2 <- moment(all.res, order = 2)
+ 	m3 <- moment(all.res, order = 3)
+ 	m4 <- moment(all.res, order = 4)
+ 	k1 <- m1
+ 	k2 <- m2 - m1 ^ 2
+ 	k3 <- m3 - 3 * m1 * m2 + 2 * m1 ^ 3
+ 	k4 <- m4 - 4*m1*m3 - 3*m2^2 + 12*m2*m1^2 - 6*m1^4
+ 	k4 <- all.cumulants(all.moments(x, order.max = 4))[5]
+ 	
+ 	require(rootSolve)
+ 	library(rootSolve)
+ 	func <- function(x) x^4 - 2* k3/k1 *x^2 + 3*k4/2/k1* x - k3/2/k1
+ 	mu <- uniroot.all(func, c(-10,10))
+ 	mu <- mu[which(mu > 0)]
+ 	lambda <- k1 / mu
+ 	ita2 <- (k3 - mu^2 *k1)/(3*k1)
+ 	sigma2 <- k2 - k1 * mu  + ita2
+ 	
+ 	return(c(mu, lambda, ita2, sigma2))
+ }
> FitsubSDE.jump(group[[1]])
Error: could not find function "FitsubSDE.jump"
> FitsubSDE.jump <- function(index){
+ 	all.res <- NULL
+ 	Acc.temp <- Acc.smooth[index, ]
+ 	Velo.temp <- Velo.smooth[index, ]
+ 	mu.temp <- fitSDE_mu(index, kk)
+ 	for(i in 1:length(plotpoints)){
+ 		temp <- (Acc.temp[, i] - mu.temp[i]*Velo.smooth.temp[, i])/Velo.smooth.temp[,i]
+ 		all.res <- c(all.res,remove_outliers(temp))
+ 	}	
+ 	all.res <- all.res[-which(is.na(all.res))]
+ 	## calculate Cumulants of the residuals
+ 	require(moments)
+ 	library(moments)
+ 	m1 <- moment(all.res, order = 1)
+ 	m2 <- moment(all.res, order = 2)
+ 	m3 <- moment(all.res, order = 3)
+ 	m4 <- moment(all.res, order = 4)
+ 	k1 <- m1
+ 	k2 <- m2 - m1 ^ 2
+ 	k3 <- m3 - 3 * m1 * m2 + 2 * m1 ^ 3
+ 	k4 <- m4 - 4*m1*m3 - 3*m2^2 + 12*m2*m1^2 - 6*m1^4
+ 	k4 <- all.cumulants(all.moments(x, order.max = 4))[5]
+ 	
+ 	require(rootSolve)
+ 	library(rootSolve)
+ 	func <- function(x) x^4 - 2* k3/k1 *x^2 + 3*k4/2/k1* x - k3/2/k1
+ 	mu <- uniroot.all(func, c(-10,10))
+ 	mu <- mu[which(mu > 0)]
+ 	lambda <- k1 / mu
+ 	ita2 <- (k3 - mu^2 *k1)/(3*k1)
+ 	sigma2 <- k2 - k1 * mu  + ita2
+ 	
+ 	return(c(mu, lambda, ita2, sigma2))
+ }
> 
> FitsubSDE.jump(group[[1]])
Error: object 'Velo.smooth.temp' not found
> 
> FitsubSDE.jump <- function(index){
+ 	all.res <- NULL
+ 	Acc.temp <- Acc.smooth[index, ]
+ 	Velo.temp <- Velo.smooth[index, ]
+ 	mu.temp <- fitSDE_mu(index, kk)
+ 	for(i in 1:length(plotpoints)){
+ 		temp <- (Acc.temp[, i] - mu.temp[i]*Velo.temp[, i])/Velo.temp[,i]
+ 		all.res <- c(all.res,remove_outliers(temp))
+ 	}	
+ 	all.res <- all.res[-which(is.na(all.res))]
+ 	## calculate Cumulants of the residuals
+ 	require(moments)
+ 	library(moments)
+ 	m1 <- moment(all.res, order = 1)
+ 	m2 <- moment(all.res, order = 2)
+ 	m3 <- moment(all.res, order = 3)
+ 	m4 <- moment(all.res, order = 4)
+ 	k1 <- m1
+ 	k2 <- m2 - m1 ^ 2
+ 	k3 <- m3 - 3 * m1 * m2 + 2 * m1 ^ 3
+ 	k4 <- m4 - 4*m1*m3 - 3*m2^2 + 12*m2*m1^2 - 6*m1^4
+ 	k4 <- all.cumulants(all.moments(x, order.max = 4))[5]
+ 	
+ 	require(rootSolve)
+ 	library(rootSolve)
+ 	func <- function(x) x^4 - 2* k3/k1 *x^2 + 3*k4/2/k1* x - k3/2/k1
+ 	mu <- uniroot.all(func, c(-10,10))
+ 	mu <- mu[which(mu > 0)]
+ 	lambda <- k1 / mu
+ 	ita2 <- (k3 - mu^2 *k1)/(3*k1)
+ 	sigma2 <- k2 - k1 * mu  + ita2
+ 	
+ 	return(c(mu, lambda, ita2, sigma2))
+ }
> 
> FitsubSDE.jump(group[[1]])
Error: could not find function "remove_outliers"
> remove_outliers <- function(x, na.rm = TRUE, ...) {
+ 	  qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
+ 	  H <- 1.5 * IQR(x, na.rm = na.rm)
+ 	  y <- x
+ 	  y[x < (qnt[1] - H)] <- NA
+ 	  y[x > (qnt[2] + H)] <- NA
+ 	  y
+ 	}
> remove_quantile <- function(x, first, last){
+ 		qnt <- quantile(x, probs=c(first, last))
+ 		y <- x
+ 		y[x < qnt[1]] <- NA
+ 		y[x > qnt[2]] <- NA
+ 		y
+ 	}
> FitsubSDE.jump(group[[1]])
Loading required package: moments
Loading required package: rootSolve
numeric(0)
> require(rootSolve)
> library(rootSolve)
> FitsubSDE.jump <- function(index){
+ 	all.res <- NULL
+ 	Acc.temp <- Acc.smooth[index, ]
+ 	Velo.temp <- Velo.smooth[index, ]
+ 	mu.temp <- fitSDE_mu(index, kk)
+ 	for(i in 1:length(plotpoints)){
+ 		temp <- (Acc.temp[, i] - mu.temp[i]*Velo.temp[, i])/Velo.temp[,i]
+ 		all.res <- c(all.res,remove_outliers(temp))
+ 	}	
+ 	all.res <- all.res[-which(is.na(all.res))]
+ 	## calculate Cumulants of the residuals
+ 	require(moments)
+ 	library(moments)
+ 	m1 <- moment(all.res, order = 1)
+ 	m2 <- moment(all.res, order = 2)
+ 	m3 <- moment(all.res, order = 3)
+ 	m4 <- moment(all.res, order = 4)
+ 	k1 <- m1
+ 	k2 <- m2 - m1 ^ 2
+ 	k3 <- m3 - 3 * m1 * m2 + 2 * m1 ^ 3
+ 	k4 <- m4 - 4*m1*m3 - 3*m2^2 + 12*m2*m1^2 - 6*m1^4
+ 	k4 <- all.cumulants(all.moments(x, order.max = 4))[5]
+ 	
+ 	
+ 	func <- function(x) x^4 - 2* k3/k1 *x^2 + 3*k4/2/k1* x - k3/2/k1
+ 	mu <- uniroot.all(func, c(-10,10))
+ 	mu <- mu[which(mu > 0)]
+ 	lambda <- k1 / mu
+ 	ita2 <- (k3 - mu^2 *k1)/(3*k1)
+ 	sigma2 <- k2 - k1 * mu  + ita2
+ 	
+ 	return(c(mu, lambda, ita2, sigma2))
+ }
> 
> debug(FitsubSDE.jump)
> FitsubSDE.jump(group[[1]])
debugging in: FitsubSDE.jump(group[[1]])
debug at #1: {
    all.res <- NULL
    Acc.temp <- Acc.smooth[index, ]
    Velo.temp <- Velo.smooth[index, ]
    mu.temp <- fitSDE_mu(index, kk)
    for (i in 1:length(plotpoints)) {
        temp <- (Acc.temp[, i] - mu.temp[i] * Velo.temp[, i])/Velo.temp[, 
            i]
        all.res <- c(all.res, remove_outliers(temp))
    }
    all.res <- all.res[-which(is.na(all.res))]
    require(moments)
    library(moments)
    m1 <- moment(all.res, order = 1)
    m2 <- moment(all.res, order = 2)
    m3 <- moment(all.res, order = 3)
    m4 <- moment(all.res, order = 4)
    k1 <- m1
    k2 <- m2 - m1^2
    k3 <- m3 - 3 * m1 * m2 + 2 * m1^3
    k4 <- m4 - 4 * m1 * m3 - 3 * m2^2 + 12 * m2 * m1^2 - 6 * 
        m1^4
    k4 <- all.cumulants(all.moments(x, order.max = 4))[5]
    func <- function(x) x^4 - 2 * k3/k1 * x^2 + 3 * k4/2/k1 * 
        x - k3/2/k1
    mu <- uniroot.all(func, c(-10, 10))
    mu <- mu[which(mu > 0)]
    lambda <- k1/mu
    ita2 <- (k3 - mu^2 * k1)/(3 * k1)
    sigma2 <- k2 - k1 * mu + ita2
    return(c(mu, lambda, ita2, sigma2))
}
Browse[2]> 
debug at #2: all.res <- NULL
Browse[2]> 
debug at #3: Acc.temp <- Acc.smooth[index, ]
Browse[2]> 
debug at #4: Velo.temp <- Velo.smooth[index, ]
Browse[2]> 
debug at #5: mu.temp <- fitSDE_mu(index, kk)
Browse[2]> 
debug at #6: for (i in 1:length(plotpoints)) {
    temp <- (Acc.temp[, i] - mu.temp[i] * Velo.temp[, i])/Velo.temp[, 
        i]
    all.res <- c(all.res, remove_outliers(temp))
}

Browse[2]> 
debug at #6: i
Browse[2]> 
debug at #7: temp <- (Acc.temp[, i] - mu.temp[i] * Velo.temp[, i])/Velo.temp[, 
    i]
Browse[2]> 
debug at #8: all.res <- c(all.res, remove_outliers(temp))
Browse[2]> 
debug at #6: i
Browse[2]> 
debug at #7: temp <- (Acc.temp[, i] - mu.temp[i] * Velo.temp[, i])/Velo.temp[, 
    i]
Browse[2]> 
debug at #8: all.res <- c(all.res, remove_outliers(temp))
Browse[2]> c
debug at #10: all.res <- all.res[-which(is.na(all.res))]
Browse[2]> summary(all.res)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's 
-28.330  -0.377   0.431   0.624   1.550  33.930   10645 
Browse[2]> 
debug at #12: require(moments)
Browse[2]> 
debug at #13: library(moments)
Browse[2]> 
debug at #14: m1 <- moment(all.res, order = 1)
Browse[2]> m1
Error: object 'm1' not found
Browse[2]> moment(all.res)
[1] 0.6242812
Browse[2]> 
debug at #15: m2 <- moment(all.res, order = 2)
Browse[2]> m1
[1] 0.6242812
Browse[2]> 
debug at #16: m3 <- moment(all.res, order = 3)
Browse[2]> 
debug at #17: m4 <- moment(all.res, order = 4)
Browse[2]> 
debug at #18: k1 <- m1
Browse[2]> 
debug at #19: k2 <- m2 - m1^2
Browse[2]> 
debug at #20: k3 <- m3 - 3 * m1 * m2 + 2 * m1^3
Browse[2]> 
debug at #21: k4 <- m4 - 4 * m1 * m3 - 3 * m2^2 + 12 * m2 * m1^2 - 6 * m1^4
Browse[2]> 
debug at #22: k4 <- all.cumulants(all.moments(x, order.max = 4))[5]
Browse[2]> 
debug at #25: func <- function(x) x^4 - 2 * k3/k1 * x^2 + 3 * k4/2/k1 * x - 
    k3/2/k1
Browse[2]> 
debug at #26: mu <- uniroot.all(func, c(-10, 10))
Browse[2]> 
debug at #27: mu <- mu[which(mu > 0)]
Browse[2]> 
debug at #28: lambda <- k1/mu
Browse[2]> mu
numeric(0)
Browse[2]> uniroot.all(func, c(-10,10))
[1] -0.009492774
Browse[2]> uniroot.all(func, c(-10,50))
[1] -0.00951737 12.15755076
Browse[2]> FitsubSDE.jump <- function(index){
+ 	all.res <- NULL
+ 	Acc.temp <- Acc.smooth[index, ]
+ 	Velo.temp <- Velo.smooth[index, ]
+ 	mu.temp <- fitSDE_mu(index, kk)
+ 	for(i in 1:length(plotpoints)){
+ 		temp <- (Acc.temp[, i] - mu.temp[i]*Velo.temp[, i])/Velo.temp[,i]
+ 		all.res <- c(all.res,remove_outliers(temp))
+ 	}	
+ 	all.res <- all.res[-which(is.na(all.res))]
+ 	## calculate Cumulants of the residuals
+ 	m1 <- moment(all.res, order = 1)
+ 	m2 <- moment(all.res, order = 2)
+ 	m3 <- moment(all.res, order = 3)
+ 	m4 <- moment(all.res, order = 4)
+ 	k1 <- m1
+ 	k2 <- m2 - m1 ^ 2
+ 	k3 <- m3 - 3 * m1 * m2 + 2 * m1 ^ 3
+ 	k4 <- m4 - 4*m1*m3 - 3*m2^2 + 12*m2*m1^2 - 6*m1^4
+ 	k4 <- all.cumulants(all.moments(x, order.max = 4))[5]
+ 	
+ 	
+ 	func <- function(x) x^4 - 2* k3/k1 *x^2 + 3*k4/2/k1* x - k3/2/k1
+ 	mu <- uniroot.all(func, c(-10,100))
+ 	mu <- mu[which(mu > 0)]
+ 	lambda <- k1 / mu
+ 	ita2 <- (k3 - mu^2 *k1)/(3*k1)
+ 	sigma2 <- k2 - k1 * mu  + ita2
+ 	
+ 	return(c(mu, lambda, ita2, sigma2))
+ }
Browse[2]> 
debug at #29: ita2 <- (k3 - mu^2 * k1)/(3 * k1)
Browse[2]> q
function (save = "default", status = 0, runLast = TRUE) 
.Call("RappQuit", save, status, runLast)
<environment: 0x10bf58440>
Browse[2]> end
function (x, ...) 
UseMethod("end")
<bytecode: 0x10c14e3c8>
<environment: namespace:stats>
Browse[2]> enddebug
Error: object 'enddebug' not found
Browse[2]> undebug
function (fun) 
.Internal(undebug(fun))
<bytecode: 0x12851f4d8>
<environment: namespace:base>
Browse[2]> undebug(fitsubSDE.jump)
Warning message:
In undebug(fun) : argument is not being debugged
Browse[2]> e
Error: object 'e' not found
Browse[2]> c
exiting from: FitsubSDE.jump(group[[1]])
numeric(0)
> undebug(fitsubSDE.jump)
Warning message:
In undebug(fun) : argument is not being debugged
> FitsubSDE.jump <- function(index){
+ 	all.res <- NULL
+ 	Acc.temp <- Acc.smooth[index, ]
+ 	Velo.temp <- Velo.smooth[index, ]
+ 	mu.temp <- fitSDE_mu(index, kk)
+ 	for(i in 1:length(plotpoints)){
+ 		temp <- (Acc.temp[, i] - mu.temp[i]*Velo.temp[, i])/Velo.temp[,i]
+ 		all.res <- c(all.res,remove_outliers(temp))
+ 	}	
+ 	all.res <- all.res[-which(is.na(all.res))]
+ 	## calculate Cumulants of the residuals
+ 	m1 <- moment(all.res, order = 1)
+ 	m2 <- moment(all.res, order = 2)
+ 	m3 <- moment(all.res, order = 3)
+ 	m4 <- moment(all.res, order = 4)
+ 	k1 <- m1
+ 	k2 <- m2 - m1 ^ 2
+ 	k3 <- m3 - 3 * m1 * m2 + 2 * m1 ^ 3
+ 	k4 <- m4 - 4*m1*m3 - 3*m2^2 + 12*m2*m1^2 - 6*m1^4
+ 	k4 <- all.cumulants(all.moments(x, order.max = 4))[5]
+ 	
+ 	
+ 	func <- function(x) x^4 - 2* k3/k1 *x^2 + 3*k4/2/k1* x - k3/2/k1
+ 	mu <- uniroot.all(func, c(-10,100))
+ 	mu <- mu[which(mu > 0)]
+ 	lambda <- k1 / mu
+ 	ita2 <- (k3 - mu^2 *k1)/(3*k1)
+ 	sigma2 <- k2 - k1 * mu  + ita2
+ 	
+ 	return(c(mu, lambda, ita2, sigma2))
+ }
> FitsubSDE.jump(group[[1]])
[1]  12.15752136   0.05134939 -41.49419089 -41.73406548
> FitsubSDE.jump(group[[2]])
[1]  12.04471641   0.03895973 -46.80412930 -48.02391205
> 